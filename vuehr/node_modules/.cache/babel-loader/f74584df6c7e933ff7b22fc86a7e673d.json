{"remainingRequest":"F:\\java-workspace\\vhr\\vuehr\\node_modules\\babel-loader\\lib\\index.js!F:\\java-workspace\\vhr\\vuehr\\src\\utils\\sockjs.js","dependencies":[{"path":"F:\\java-workspace\\vhr\\vuehr\\src\\utils\\sockjs.js","mtime":1601796660580},{"path":"F:\\java-workspace\\vhr\\vuehr\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\java-workspace\\vhr\\vuehr\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["F:/java-workspace/vhr/vuehr/src/utils/sockjs.js"],"names":["f","exports","module","define","amd","g","window","global","self","SockJS","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","transportList","setTimeout","_sockjs_onload","inherits","Event","CloseEvent","initEvent","wasClean","reason","EventTarget","EventEmitter","prototype","removeAllListeners","type","_listeners","once","listener","fired","removeListener","apply","arguments","on","emit","listeners","args","Array","ai","addListener","addEventListener","removeEventListener","eventType","canBubble","cancelable","bubbles","timeStamp","Date","stopPropagation","preventDefault","CAPTURING_PHASE","AT_TARGET","BUBBLING_PHASE","arr","indexOf","concat","idx","slice","dispatchEvent","event","TransportMessageEvent","data","JSON3","iframeUtils","FacadeJS","transport","_transport","_transportMessage","bind","_transportClose","postMessage","stringify","frame","_send","send","_close","close","process","urlUtils","eventUtils","InfoIframeReceiver","loc","debug","env","NODE_ENV","availableTransports","transportMap","forEach","at","facadeTransport","transportName","parentOrigin","bootstrap_iframe","facade","currentWindowId","hash","onMessage","source","parent","origin","iframeMessage","parse","ignored","windowId","p","version","transUrl","baseUrl","isOriginEqual","href","attachEvent","objectUtils","InfoAjax","url","AjaxObject","t0","xo","status","text","info","rtt","isObject","XHRLocalObject","InfoReceiverIframe","ir","utils","IframeTransport","InfoIframe","go","ifr","msg","d","document","body","enabled","XDR","XHRCors","XHRLocal","XHRFake","InfoReceiver","urlInfo","doXhr","_getReceiver","sameOrigin","sameScheme","addPath","timeoutRef","_cleanup","timeout","clearTimeout","location","protocol","host","port","URL","random","escape","browser","log","transports","protocols","options","TypeError","readyState","CONNECTING","extensions","protocols_whitelist","warn","_transportsWhitelist","_transportOptions","transportOptions","sessionId","_generateSessionId","string","_server","server","numberString","parsedUrl","SyntaxError","secure","isArray","sortedProtocols","sort","proto","getOrigin","_origin","toLowerCase","set","pathname","replace","_urlInfo","nullOrigin","hasDomain","isSchemeEqual","_ir","_receiveInfo","userSetCode","CLOSING","CLOSED","OPEN","quote","_rto","countRTO","_transUrl","base_url","extend","enabledTransports","filterToEnabled","_transports","main","_connect","Transport","shift","needBody","unshift","timeoutMs","roundTrips","_transportTimeoutId","_transportTimeout","transportUrl","transportObj","content","payload","_open","forceFail","onmessage","onclose","onerror","ArrayPrototype","ObjectPrototype","Object","FunctionPrototype","Function","StringPrototype","String","array_slice","_toString","toString","isFunction","val","obj","isString","supportsDescriptors","defineProperty","object","name","method","forceAssign","configurable","enumerable","writable","value","defineProperties","map","hasOwnProperty","toObject","toInteger","num","Math","floor","abs","ToUint32","x","Empty","that","target","binder","bound","result","boundLength","max","boundArgs","push","join","boxedString","splitString","properlyBoxesContext","properlyBoxed","properlyBoxesNonStrict","properlyBoxesStrict","_","__","context","fun","split","thisp","hasFirefox2IndexOfBug","sought","string_split","compliantExecNpcg","exec","separator","limit","output","flags","ignoreCase","multiline","extended","sticky","lastLastIndex","separator2","match","lastIndex","lastLength","RegExp","index","test","string_substr","substr","hasNegativeSubstrBug","start","XHR","XMLHttpRequest","AbstractXHRObject","opts","_start","xhr","addQuery","unloadRef","unloadAdd","open","ontimeout","noCredentials","supportsCORS","withCredentials","headers","key","setRequestHeader","onreadystatechange","responseText","abort","unloadDel","axo","cors","EventSource","Driver","WebSocket","MozWebSocket","WebSocketBrowserDriver","undefined","AjaxBasedTransport","EventSourceReceiver","XHRCorsObject","EventSourceDriver","EventSourceTransport","HtmlfileReceiver","HtmlFileTransport","iframeUrl","iframeObj","createIframe","onmessageCallback","_message","detachEvent","cleanup","loaded","cdata","post","message","iframeEnabled","SenderReceiver","JsonpReceiver","jsonpSender","JsonPTransport","createAjaxSender","callback","opt","ajaxUrl","err","urlSuffix","Receiver","BufferedSender","sender","sendBuffer","sendStop","sendSchedule","sendScheduleWait","tref","IframeWrapTransport","iframeInfo","Polling","receiveUrl","_scheduleReceiver","poll","pollIsClosing","senderFunc","pollUrl","es","decodeURI","polluteGlobalNamespace","id","decodeURIComponent","WPrefix","htmlfileEnabled","constructFunc","createHtmlfile","stop","urlWithId","encodeURIComponent","_callback","_createScript","timeoutId","_abort","scriptErrorTimeout","aborting","script2","parentNode","removeChild","script","onload","onclick","_scriptError","errorTimer","loadedOkay","createElement","src","charset","htmlFor","async","isOpera","head","getElementsByTagName","insertBefore","firstChild","XhrReceiver","bufferPosition","_chunkHandler","buf","form","area","iframe","createForm","style","display","position","enctype","acceptCharset","appendChild","action","submit","completed","XDRObject","xdr","XDomainRequest","_error","onprogress","XhrDriver","to","WebsocketDriver","WebSocketTransport","ignore","ws","XdrStreamingTransport","XdrPollingTransport","cookie_needed","XhrPollingTransport","XhrStreamingTransport","crypto","getRandomValues","randomBytes","bytes","Uint8Array","navigator","userAgent","isKonqueror","domain","extraEscapable","extraLookup","unrollLookup","escapable","unrolled","c","fromCharCode","charCodeAt","quoted","onUnload","afterUnload","isChromePackagedApp","chrome","app","runtime","ref","triggerUnloadCallbacks","unloadTriggered","errorCallback","unattach","contentWindow","doc","CollectGarbage","write","parentWindow","logObject","level","levelExists","console","prop","_randomStringChars","ret","number","transportsWhitelist","trans","websocket","hostname","b","res","path","qs","q","formatArgs","save","load","useColors","storage","local","localstorage","colors","documentElement","firebug","exception","table","parseInt","$1","formatters","j","v","JSON","namespace","humanize","diff","color","splice","lastC","namespaces","removeItem","DEBUG","enable","localStorage","createDebug","default","coerce","disable","names","skips","prevTime","selectColor","curr","ms","prev","format","formatter","logFn","init","len","stack","create","ctor","superCtor","super_","constructor","TempCtor","isLoader","objectTypes","freeExports","nodeType","root","freeGlobal","runInContext","Number","nativeJSON","objectProto","getClass","isProperty","undef","isExtended","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","has","isSupported","serialized","stringifySupported","toJSON","parseSupported","functionClass","dateClass","numberClass","stringClass","arrayClass","booleanClass","charIndexBuggy","Months","getDay","year","month","property","members","__proto__","original","size","Properties","valueOf","hasProperty","isConstructor","Escapes","leadingZeroes","toPaddedString","width","unicodePrefix","useCharIndex","symbols","charCode","charAt","serialize","properties","whitespace","indentation","className","date","time","hours","minutes","seconds","milliseconds","results","element","prefix","pop","filter","Unescapes","Index","Source","lex","begin","isSigned","get","hasMembers","update","walk","previousJSON","isRestored","m","h","y","isNaN","long","fmtLong","fmtShort","str","parseFloat","round","plural","ceil","querystring","query","parser","part","querystringify","pairs","required","lolcation","protocolre","rules","NaN","extractProtocol","address","slashes","rest","resolve","relative","base","last","up","extracted","instruction","instructions","username","password","auth","fn","ins","finaldestination","unescape"],"mappings":"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","sourcesContent":["/* sockjs-client v1.1.2 | http://sockjs.org | MIT license */\r\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.SockJS = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\r\n(function (global){\r\n'use strict';\r\n\r\nvar transportList = require('./transport-list');\r\n\r\nmodule.exports = require('./main')(transportList);\r\n\r\n// TODO can't get rid of this until all servers do\r\nif ('_sockjs_onload' in global) {\r\n  setTimeout(global._sockjs_onload, 1);\r\n}\r\n\r\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\r\n\r\n},{\"./main\":14,\"./transport-list\":16}],2:[function(require,module,exports){\r\n'use strict';\r\n\r\nvar inherits = require('inherits')\r\n  , Event = require('./event')\r\n  ;\r\n\r\nfunction CloseEvent() {\r\n  Event.call(this);\r\n  this.initEvent('close', false, false);\r\n  this.wasClean = false;\r\n  this.code = 0;\r\n  this.reason = '';\r\n}\r\n\r\ninherits(CloseEvent, Event);\r\n\r\nmodule.exports = CloseEvent;\r\n\r\n},{\"./event\":4,\"inherits\":56}],3:[function(require,module,exports){\r\n'use strict';\r\n\r\nvar inherits = require('inherits')\r\n  , EventTarget = require('./eventtarget')\r\n  ;\r\n\r\nfunction EventEmitter() {\r\n  EventTarget.call(this);\r\n}\r\n\r\ninherits(EventEmitter, EventTarget);\r\n\r\nEventEmitter.prototype.removeAllListeners = function(type) {\r\n  if (type) {\r\n    delete this._listeners[type];\r\n  } else {\r\n    this._listeners = {};\r\n  }\r\n};\r\n\r\nEventEmitter.prototype.once = function(type, listener) {\r\n  var self = this\r\n    , fired = false;\r\n\r\n  function g() {\r\n    self.removeListener(type, g);\r\n\r\n    if (!fired) {\r\n      fired = true;\r\n      listener.apply(this, arguments);\r\n    }\r\n  }\r\n\r\n  this.on(type, g);\r\n};\r\n\r\nEventEmitter.prototype.emit = function() {\r\n  var type = arguments[0];\r\n  var listeners = this._listeners[type];\r\n  if (!listeners) {\r\n    return;\r\n  }\r\n  // equivalent of Array.prototype.slice.call(arguments, 1);\r\n  var l = arguments.length;\r\n  var args = new Array(l - 1);\r\n  for (var ai = 1; ai < l; ai++) {\r\n    args[ai - 1] = arguments[ai];\r\n  }\r\n  for (var i = 0; i < listeners.length; i++) {\r\n    listeners[i].apply(this, args);\r\n  }\r\n};\r\n\r\nEventEmitter.prototype.on = EventEmitter.prototype.addListener = EventTarget.prototype.addEventListener;\r\nEventEmitter.prototype.removeListener = EventTarget.prototype.removeEventListener;\r\n\r\nmodule.exports.EventEmitter = EventEmitter;\r\n\r\n},{\"./eventtarget\":5,\"inherits\":56}],4:[function(require,module,exports){\r\n'use strict';\r\n\r\nfunction Event(eventType) {\r\n  this.type = eventType;\r\n}\r\n\r\nEvent.prototype.initEvent = function(eventType, canBubble, cancelable) {\r\n  this.type = eventType;\r\n  this.bubbles = canBubble;\r\n  this.cancelable = cancelable;\r\n  this.timeStamp = +new Date();\r\n  return this;\r\n};\r\n\r\nEvent.prototype.stopPropagation = function() {};\r\nEvent.prototype.preventDefault = function() {};\r\n\r\nEvent.CAPTURING_PHASE = 1;\r\nEvent.AT_TARGET = 2;\r\nEvent.BUBBLING_PHASE = 3;\r\n\r\nmodule.exports = Event;\r\n\r\n},{}],5:[function(require,module,exports){\r\n'use strict';\r\n\r\n/* Simplified implementation of DOM2 EventTarget.\r\n *   http://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-EventTarget\r\n */\r\n\r\nfunction EventTarget() {\r\n  this._listeners = {};\r\n}\r\n\r\nEventTarget.prototype.addEventListener = function(eventType, listener) {\r\n  if (!(eventType in this._listeners)) {\r\n    this._listeners[eventType] = [];\r\n  }\r\n  var arr = this._listeners[eventType];\r\n  // #4\r\n  if (arr.indexOf(listener) === -1) {\r\n    // Make a copy so as not to interfere with a current dispatchEvent.\r\n    arr = arr.concat([listener]);\r\n  }\r\n  this._listeners[eventType] = arr;\r\n};\r\n\r\nEventTarget.prototype.removeEventListener = function(eventType, listener) {\r\n  var arr = this._listeners[eventType];\r\n  if (!arr) {\r\n    return;\r\n  }\r\n  var idx = arr.indexOf(listener);\r\n  if (idx !== -1) {\r\n    if (arr.length > 1) {\r\n      // Make a copy so as not to interfere with a current dispatchEvent.\r\n      this._listeners[eventType] = arr.slice(0, idx).concat(arr.slice(idx + 1));\r\n    } else {\r\n      delete this._listeners[eventType];\r\n    }\r\n    return;\r\n  }\r\n};\r\n\r\nEventTarget.prototype.dispatchEvent = function() {\r\n  var event = arguments[0];\r\n  var t = event.type;\r\n  // equivalent of Array.prototype.slice.call(arguments, 0);\r\n  var args = arguments.length === 1 ? [event] : Array.apply(null, arguments);\r\n  // TODO: This doesn't match the real behavior; per spec, onfoo get\r\n  // their place in line from the /first/ time they're set from\r\n  // non-null. Although WebKit bumps it to the end every time it's\r\n  // set.\r\n  if (this['on' + t]) {\r\n    this['on' + t].apply(this, args);\r\n  }\r\n  if (t in this._listeners) {\r\n    // Grab a reference to the listeners list. removeEventListener may alter the list.\r\n    var listeners = this._listeners[t];\r\n    for (var i = 0; i < listeners.length; i++) {\r\n      listeners[i].apply(this, args);\r\n    }\r\n  }\r\n};\r\n\r\nmodule.exports = EventTarget;\r\n\r\n},{}],6:[function(require,module,exports){\r\n'use strict';\r\n\r\nvar inherits = require('inherits')\r\n  , Event = require('./event')\r\n  ;\r\n\r\nfunction TransportMessageEvent(data) {\r\n  Event.call(this);\r\n  this.initEvent('message', false, false);\r\n  this.data = data;\r\n}\r\n\r\ninherits(TransportMessageEvent, Event);\r\n\r\nmodule.exports = TransportMessageEvent;\r\n\r\n},{\"./event\":4,\"inherits\":56}],7:[function(require,module,exports){\r\n'use strict';\r\n\r\nvar JSON3 = require('json3')\r\n  , iframeUtils = require('./utils/iframe')\r\n  ;\r\n\r\nfunction FacadeJS(transport) {\r\n  this._transport = transport;\r\n  transport.on('message', this._transportMessage.bind(this));\r\n  transport.on('close', this._transportClose.bind(this));\r\n}\r\n\r\nFacadeJS.prototype._transportClose = function(code, reason) {\r\n  iframeUtils.postMessage('c', JSON3.stringify([code, reason]));\r\n};\r\nFacadeJS.prototype._transportMessage = function(frame) {\r\n  iframeUtils.postMessage('t', frame);\r\n};\r\nFacadeJS.prototype._send = function(data) {\r\n  this._transport.send(data);\r\n};\r\nFacadeJS.prototype._close = function() {\r\n  this._transport.close();\r\n  this._transport.removeAllListeners();\r\n};\r\n\r\nmodule.exports = FacadeJS;\r\n\r\n},{\"./utils/iframe\":47,\"json3\":57}],8:[function(require,module,exports){\r\n(function (process){\r\n'use strict';\r\n\r\nvar urlUtils = require('./utils/url')\r\n  , eventUtils = require('./utils/event')\r\n  , JSON3 = require('json3')\r\n  , FacadeJS = require('./facade')\r\n  , InfoIframeReceiver = require('./info-iframe-receiver')\r\n  , iframeUtils = require('./utils/iframe')\r\n  , loc = require('./location')\r\n  ;\r\n\r\nvar debug = function() {};\r\nif (process.env.NODE_ENV !== 'production') {\r\n  debug = require('debug')('sockjs-client:iframe-bootstrap');\r\n}\r\n\r\nmodule.exports = function(SockJS, availableTransports) {\r\n  var transportMap = {};\r\n  availableTransports.forEach(function(at) {\r\n    if (at.facadeTransport) {\r\n      transportMap[at.facadeTransport.transportName] = at.facadeTransport;\r\n    }\r\n  });\r\n\r\n  // hard-coded for the info iframe\r\n  // TODO see if we can make this more dynamic\r\n  transportMap[InfoIframeReceiver.transportName] = InfoIframeReceiver;\r\n  var parentOrigin;\r\n\r\n  /* eslint-disable camelcase */\r\n  SockJS.bootstrap_iframe = function() {\r\n    /* eslint-enable camelcase */\r\n    var facade;\r\n    iframeUtils.currentWindowId = loc.hash.slice(1);\r\n    var onMessage = function(e) {\r\n      if (e.source !== parent) {\r\n        return;\r\n      }\r\n      if (typeof parentOrigin === 'undefined') {\r\n        parentOrigin = e.origin;\r\n      }\r\n      if (e.origin !== parentOrigin) {\r\n        return;\r\n      }\r\n\r\n      var iframeMessage;\r\n      try {\r\n        iframeMessage = JSON3.parse(e.data);\r\n      } catch (ignored) {\r\n        debug('bad json', e.data);\r\n        return;\r\n      }\r\n\r\n      if (iframeMessage.windowId !== iframeUtils.currentWindowId) {\r\n        return;\r\n      }\r\n      switch (iframeMessage.type) {\r\n      case 's':\r\n        var p;\r\n        try {\r\n          p = JSON3.parse(iframeMessage.data);\r\n        } catch (ignored) {\r\n          debug('bad json', iframeMessage.data);\r\n          break;\r\n        }\r\n        var version = p[0];\r\n        var transport = p[1];\r\n        var transUrl = p[2];\r\n        var baseUrl = p[3];\r\n        debug(version, transport, transUrl, baseUrl);\r\n        // change this to semver logic\r\n        if (version !== SockJS.version) {\r\n          throw new Error('Incompatible SockJS! Main site uses:' +\r\n                    ' \"' + version + '\", the iframe:' +\r\n                    ' \"' + SockJS.version + '\".');\r\n        }\r\n\r\n        if (!urlUtils.isOriginEqual(transUrl, loc.href) ||\r\n            !urlUtils.isOriginEqual(baseUrl, loc.href)) {\r\n          throw new Error('Can\\'t connect to different domain from within an ' +\r\n                    'iframe. (' + loc.href + ', ' + transUrl + ', ' + baseUrl + ')');\r\n        }\r\n        facade = new FacadeJS(new transportMap[transport](transUrl, baseUrl));\r\n        break;\r\n      case 'm':\r\n        facade._send(iframeMessage.data);\r\n        break;\r\n      case 'c':\r\n        if (facade) {\r\n          facade._close();\r\n        }\r\n        facade = null;\r\n        break;\r\n      }\r\n    };\r\n\r\n    eventUtils.attachEvent('message', onMessage);\r\n\r\n    // Start\r\n    iframeUtils.postMessage('s');\r\n  };\r\n};\r\n\r\n}).call(this,{ env: {} })\r\n\r\n},{\"./facade\":7,\"./info-iframe-receiver\":10,\"./location\":13,\"./utils/event\":46,\"./utils/iframe\":47,\"./utils/url\":52,\"debug\":54,\"json3\":57}],9:[function(require,module,exports){\r\n(function (process){\r\n'use strict';\r\n\r\nvar EventEmitter = require('events').EventEmitter\r\n  , inherits = require('inherits')\r\n  , JSON3 = require('json3')\r\n  , objectUtils = require('./utils/object')\r\n  ;\r\n\r\nvar debug = function() {};\r\nif (process.env.NODE_ENV !== 'production') {\r\n  debug = require('debug')('sockjs-client:info-ajax');\r\n}\r\n\r\nfunction InfoAjax(url, AjaxObject) {\r\n  EventEmitter.call(this);\r\n\r\n  var self = this;\r\n  var t0 = +new Date();\r\n  this.xo = new AjaxObject('GET', url);\r\n\r\n  this.xo.once('finish', function(status, text) {\r\n    var info, rtt;\r\n    if (status === 200) {\r\n      rtt = (+new Date()) - t0;\r\n      if (text) {\r\n        try {\r\n          info = JSON3.parse(text);\r\n        } catch (e) {\r\n          debug('bad json', text);\r\n        }\r\n      }\r\n\r\n      if (!objectUtils.isObject(info)) {\r\n        info = {};\r\n      }\r\n    }\r\n    self.emit('finish', info, rtt);\r\n    self.removeAllListeners();\r\n  });\r\n}\r\n\r\ninherits(InfoAjax, EventEmitter);\r\n\r\nInfoAjax.prototype.close = function() {\r\n  this.removeAllListeners();\r\n  this.xo.close();\r\n};\r\n\r\nmodule.exports = InfoAjax;\r\n\r\n}).call(this,{ env: {} })\r\n\r\n},{\"./utils/object\":49,\"debug\":54,\"events\":3,\"inherits\":56,\"json3\":57}],10:[function(require,module,exports){\r\n'use strict';\r\n\r\nvar inherits = require('inherits')\r\n  , EventEmitter = require('events').EventEmitter\r\n  , JSON3 = require('json3')\r\n  , XHRLocalObject = require('./transport/sender/xhr-local')\r\n  , InfoAjax = require('./info-ajax')\r\n  ;\r\n\r\nfunction InfoReceiverIframe(transUrl) {\r\n  var self = this;\r\n  EventEmitter.call(this);\r\n\r\n  this.ir = new InfoAjax(transUrl, XHRLocalObject);\r\n  this.ir.once('finish', function(info, rtt) {\r\n    self.ir = null;\r\n    self.emit('message', JSON3.stringify([info, rtt]));\r\n  });\r\n}\r\n\r\ninherits(InfoReceiverIframe, EventEmitter);\r\n\r\nInfoReceiverIframe.transportName = 'iframe-info-receiver';\r\n\r\nInfoReceiverIframe.prototype.close = function() {\r\n  if (this.ir) {\r\n    this.ir.close();\r\n    this.ir = null;\r\n  }\r\n  this.removeAllListeners();\r\n};\r\n\r\nmodule.exports = InfoReceiverIframe;\r\n\r\n},{\"./info-ajax\":9,\"./transport/sender/xhr-local\":37,\"events\":3,\"inherits\":56,\"json3\":57}],11:[function(require,module,exports){\r\n(function (process,global){\r\n'use strict';\r\n\r\nvar EventEmitter = require('events').EventEmitter\r\n  , inherits = require('inherits')\r\n  , JSON3 = require('json3')\r\n  , utils = require('./utils/event')\r\n  , IframeTransport = require('./transport/iframe')\r\n  , InfoReceiverIframe = require('./info-iframe-receiver')\r\n  ;\r\n\r\nvar debug = function() {};\r\nif (process.env.NODE_ENV !== 'production') {\r\n  debug = require('debug')('sockjs-client:info-iframe');\r\n}\r\n\r\nfunction InfoIframe(baseUrl, url) {\r\n  var self = this;\r\n  EventEmitter.call(this);\r\n\r\n  var go = function() {\r\n    var ifr = self.ifr = new IframeTransport(InfoReceiverIframe.transportName, url, baseUrl);\r\n\r\n    ifr.once('message', function(msg) {\r\n      if (msg) {\r\n        var d;\r\n        try {\r\n          d = JSON3.parse(msg);\r\n        } catch (e) {\r\n          debug('bad json', msg);\r\n          self.emit('finish');\r\n          self.close();\r\n          return;\r\n        }\r\n\r\n        var info = d[0], rtt = d[1];\r\n        self.emit('finish', info, rtt);\r\n      }\r\n      self.close();\r\n    });\r\n\r\n    ifr.once('close', function() {\r\n      self.emit('finish');\r\n      self.close();\r\n    });\r\n  };\r\n\r\n  // TODO this seems the same as the 'needBody' from transports\r\n  if (!global.document.body) {\r\n    utils.attachEvent('load', go);\r\n  } else {\r\n    go();\r\n  }\r\n}\r\n\r\ninherits(InfoIframe, EventEmitter);\r\n\r\nInfoIframe.enabled = function() {\r\n  return IframeTransport.enabled();\r\n};\r\n\r\nInfoIframe.prototype.close = function() {\r\n  if (this.ifr) {\r\n    this.ifr.close();\r\n  }\r\n  this.removeAllListeners();\r\n  this.ifr = null;\r\n};\r\n\r\nmodule.exports = InfoIframe;\r\n\r\n}).call(this,{ env: {} },typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\r\n\r\n},{\"./info-iframe-receiver\":10,\"./transport/iframe\":22,\"./utils/event\":46,\"debug\":54,\"events\":3,\"inherits\":56,\"json3\":57}],12:[function(require,module,exports){\r\n(function (process){\r\n'use strict';\r\n\r\nvar EventEmitter = require('events').EventEmitter\r\n  , inherits = require('inherits')\r\n  , urlUtils = require('./utils/url')\r\n  , XDR = require('./transport/sender/xdr')\r\n  , XHRCors = require('./transport/sender/xhr-cors')\r\n  , XHRLocal = require('./transport/sender/xhr-local')\r\n  , XHRFake = require('./transport/sender/xhr-fake')\r\n  , InfoIframe = require('./info-iframe')\r\n  , InfoAjax = require('./info-ajax')\r\n  ;\r\n\r\nvar debug = function() {};\r\nif (process.env.NODE_ENV !== 'production') {\r\n  debug = require('debug')('sockjs-client:info-receiver');\r\n}\r\n\r\nfunction InfoReceiver(baseUrl, urlInfo) {\r\n  debug(baseUrl);\r\n  var self = this;\r\n  EventEmitter.call(this);\r\n\r\n  setTimeout(function() {\r\n    self.doXhr(baseUrl, urlInfo);\r\n  }, 0);\r\n}\r\n\r\ninherits(InfoReceiver, EventEmitter);\r\n\r\n// TODO this is currently ignoring the list of available transports and the whitelist\r\n\r\nInfoReceiver._getReceiver = function(baseUrl, url, urlInfo) {\r\n  // determine method of CORS support (if needed)\r\n  if (urlInfo.sameOrigin) {\r\n    return new InfoAjax(url, XHRLocal);\r\n  }\r\n  if (XHRCors.enabled) {\r\n    return new InfoAjax(url, XHRCors);\r\n  }\r\n  if (XDR.enabled && urlInfo.sameScheme) {\r\n    return new InfoAjax(url, XDR);\r\n  }\r\n  if (InfoIframe.enabled()) {\r\n    return new InfoIframe(baseUrl, url);\r\n  }\r\n  return new InfoAjax(url, XHRFake);\r\n};\r\n\r\nInfoReceiver.prototype.doXhr = function(baseUrl, urlInfo) {\r\n  var self = this\r\n    , url = urlUtils.addPath(baseUrl, '/info')\r\n    ;\r\n  debug('doXhr', url);\r\n\r\n  this.xo = InfoReceiver._getReceiver(baseUrl, url, urlInfo);\r\n\r\n  this.timeoutRef = setTimeout(function() {\r\n    debug('timeout');\r\n    self._cleanup(false);\r\n    self.emit('finish');\r\n  }, InfoReceiver.timeout);\r\n\r\n  this.xo.once('finish', function(info, rtt) {\r\n    debug('finish', info, rtt);\r\n    self._cleanup(true);\r\n    self.emit('finish', info, rtt);\r\n  });\r\n};\r\n\r\nInfoReceiver.prototype._cleanup = function(wasClean) {\r\n  debug('_cleanup');\r\n  clearTimeout(this.timeoutRef);\r\n  this.timeoutRef = null;\r\n  if (!wasClean && this.xo) {\r\n    this.xo.close();\r\n  }\r\n  this.xo = null;\r\n};\r\n\r\nInfoReceiver.prototype.close = function() {\r\n  debug('close');\r\n  this.removeAllListeners();\r\n  this._cleanup(false);\r\n};\r\n\r\nInfoReceiver.timeout = 8000;\r\n\r\nmodule.exports = InfoReceiver;\r\n\r\n}).call(this,{ env: {} })\r\n\r\n},{\"./info-ajax\":9,\"./info-iframe\":11,\"./transport/sender/xdr\":34,\"./transport/sender/xhr-cors\":35,\"./transport/sender/xhr-fake\":36,\"./transport/sender/xhr-local\":37,\"./utils/url\":52,\"debug\":54,\"events\":3,\"inherits\":56}],13:[function(require,module,exports){\r\n(function (global){\r\n'use strict';\r\n\r\nmodule.exports = global.location || {\r\n  origin: 'http://localhost:80'\r\n, protocol: 'http'\r\n, host: 'localhost'\r\n, port: 80\r\n, href: 'http://localhost/'\r\n, hash: ''\r\n};\r\n\r\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\r\n\r\n},{}],14:[function(require,module,exports){\r\n(function (process,global){\r\n'use strict';\r\n\r\nrequire('./shims');\r\n\r\nvar URL = require('url-parse')\r\n  , inherits = require('inherits')\r\n  , JSON3 = require('json3')\r\n  , random = require('./utils/random')\r\n  , escape = require('./utils/escape')\r\n  , urlUtils = require('./utils/url')\r\n  , eventUtils = require('./utils/event')\r\n  , transport = require('./utils/transport')\r\n  , objectUtils = require('./utils/object')\r\n  , browser = require('./utils/browser')\r\n  , log = require('./utils/log')\r\n  , Event = require('./event/event')\r\n  , EventTarget = require('./event/eventtarget')\r\n  , loc = require('./location')\r\n  , CloseEvent = require('./event/close')\r\n  , TransportMessageEvent = require('./event/trans-message')\r\n  , InfoReceiver = require('./info-receiver')\r\n  ;\r\n\r\nvar debug = function() {};\r\nif (process.env.NODE_ENV !== 'production') {\r\n  debug = require('debug')('sockjs-client:main');\r\n}\r\n\r\nvar transports;\r\n\r\n// follow constructor steps defined at http://dev.w3.org/html5/websockets/#the-websocket-interface\r\nfunction SockJS(url, protocols, options) {\r\n  if (!(this instanceof SockJS)) {\r\n    return new SockJS(url, protocols, options);\r\n  }\r\n  if (arguments.length < 1) {\r\n    throw new TypeError(\"Failed to construct 'SockJS: 1 argument required, but only 0 present\");\r\n  }\r\n  EventTarget.call(this);\r\n\r\n  this.readyState = SockJS.CONNECTING;\r\n  this.extensions = '';\r\n  this.protocol = '';\r\n\r\n  // non-standard extension\r\n  options = options || {};\r\n  if (options.protocols_whitelist) {\r\n    log.warn(\"'protocols_whitelist' is DEPRECATED. Use 'transports' instead.\");\r\n  }\r\n  this._transportsWhitelist = options.transports;\r\n  this._transportOptions = options.transportOptions || {};\r\n\r\n  var sessionId = options.sessionId || 8;\r\n  if (typeof sessionId === 'function') {\r\n    this._generateSessionId = sessionId;\r\n  } else if (typeof sessionId === 'number') {\r\n    this._generateSessionId = function() {\r\n      return random.string(sessionId);\r\n    };\r\n  } else {\r\n    throw new TypeError('If sessionId is used in the options, it needs to be a number or a function.');\r\n  }\r\n\r\n  this._server = options.server || random.numberString(1000);\r\n\r\n  // Step 1 of WS spec - parse and validate the url. Issue #8\r\n  var parsedUrl = new URL(url);\r\n  if (!parsedUrl.host || !parsedUrl.protocol) {\r\n    throw new SyntaxError(\"The URL '\" + url + \"' is invalid\");\r\n  } else if (parsedUrl.hash) {\r\n    throw new SyntaxError('The URL must not contain a fragment');\r\n  } else if (parsedUrl.protocol !== 'http:' && parsedUrl.protocol !== 'https:') {\r\n    throw new SyntaxError(\"The URL's scheme must be either 'http:' or 'https:'. '\" + parsedUrl.protocol + \"' is not allowed.\");\r\n  }\r\n\r\n  var secure = parsedUrl.protocol === 'https:';\r\n  // Step 2 - don't allow secure origin with an insecure protocol\r\n  if (loc.protocol === 'https' && !secure) {\r\n    throw new Error('SecurityError: An insecure SockJS connection may not be initiated from a page loaded over HTTPS');\r\n  }\r\n\r\n  // Step 3 - check port access - no need here\r\n  // Step 4 - parse protocols argument\r\n  if (!protocols) {\r\n    protocols = [];\r\n  } else if (!Array.isArray(protocols)) {\r\n    protocols = [protocols];\r\n  }\r\n\r\n  // Step 5 - check protocols argument\r\n  var sortedProtocols = protocols.sort();\r\n  sortedProtocols.forEach(function(proto, i) {\r\n    if (!proto) {\r\n      throw new SyntaxError(\"The protocols entry '\" + proto + \"' is invalid.\");\r\n    }\r\n    if (i < (sortedProtocols.length - 1) && proto === sortedProtocols[i + 1]) {\r\n      throw new SyntaxError(\"The protocols entry '\" + proto + \"' is duplicated.\");\r\n    }\r\n  });\r\n\r\n  // Step 6 - convert origin\r\n  var o = urlUtils.getOrigin(loc.href);\r\n  this._origin = o ? o.toLowerCase() : null;\r\n\r\n  // remove the trailing slash\r\n  parsedUrl.set('pathname', parsedUrl.pathname.replace(/\\/+$/, ''));\r\n\r\n  // store the sanitized url\r\n  this.url = parsedUrl.href;\r\n  debug('using url', this.url);\r\n\r\n  // Step 7 - start connection in background\r\n  // obtain server info\r\n  // http://sockjs.github.io/sockjs-protocol/sockjs-protocol-0.3.3.html#section-26\r\n  this._urlInfo = {\r\n    nullOrigin: !browser.hasDomain()\r\n  , sameOrigin: urlUtils.isOriginEqual(this.url, loc.href)\r\n  , sameScheme: urlUtils.isSchemeEqual(this.url, loc.href)\r\n  };\r\n\r\n  this._ir = new InfoReceiver(this.url, this._urlInfo);\r\n  this._ir.once('finish', this._receiveInfo.bind(this));\r\n}\r\n\r\ninherits(SockJS, EventTarget);\r\n\r\nfunction userSetCode(code) {\r\n  return code === 1000 || (code >= 3000 && code <= 4999);\r\n}\r\n\r\nSockJS.prototype.close = function(code, reason) {\r\n  // Step 1\r\n  if (code && !userSetCode(code)) {\r\n    throw new Error('InvalidAccessError: Invalid code');\r\n  }\r\n  // Step 2.4 states the max is 123 bytes, but we are just checking length\r\n  if (reason && reason.length > 123) {\r\n    throw new SyntaxError('reason argument has an invalid length');\r\n  }\r\n\r\n  // Step 3.1\r\n  if (this.readyState === SockJS.CLOSING || this.readyState === SockJS.CLOSED) {\r\n    return;\r\n  }\r\n\r\n  // TODO look at docs to determine how to set this\r\n  var wasClean = true;\r\n  this._close(code || 1000, reason || 'Normal closure', wasClean);\r\n};\r\n\r\nSockJS.prototype.send = function(data) {\r\n  // #13 - convert anything non-string to string\r\n  // TODO this currently turns objects into [object Object]\r\n  if (typeof data !== 'string') {\r\n    data = '' + data;\r\n  }\r\n  if (this.readyState === SockJS.CONNECTING) {\r\n    throw new Error('InvalidStateError: The connection has not been established yet');\r\n  }\r\n  if (this.readyState !== SockJS.OPEN) {\r\n    return;\r\n  }\r\n  this._transport.send(escape.quote(data));\r\n};\r\n\r\nSockJS.version = require('./version');\r\n\r\nSockJS.CONNECTING = 0;\r\nSockJS.OPEN = 1;\r\nSockJS.CLOSING = 2;\r\nSockJS.CLOSED = 3;\r\n\r\nSockJS.prototype._receiveInfo = function(info, rtt) {\r\n  debug('_receiveInfo', rtt);\r\n  this._ir = null;\r\n  if (!info) {\r\n    this._close(1002, 'Cannot connect to server');\r\n    return;\r\n  }\r\n\r\n  // establish a round-trip timeout (RTO) based on the\r\n  // round-trip time (RTT)\r\n  this._rto = this.countRTO(rtt);\r\n  // allow server to override url used for the actual transport\r\n  this._transUrl = info.base_url ? info.base_url : this.url;\r\n  info = objectUtils.extend(info, this._urlInfo);\r\n  debug('info', info);\r\n  // determine list of desired and supported transports\r\n  var enabledTransports = transports.filterToEnabled(this._transportsWhitelist, info);\r\n  this._transports = enabledTransports.main;\r\n  debug(this._transports.length + ' enabled transports');\r\n\r\n  this._connect();\r\n};\r\n\r\nSockJS.prototype._connect = function() {\r\n  for (var Transport = this._transports.shift(); Transport; Transport = this._transports.shift()) {\r\n    debug('attempt', Transport.transportName);\r\n    if (Transport.needBody) {\r\n      if (!global.document.body ||\r\n          (typeof global.document.readyState !== 'undefined' &&\r\n            global.document.readyState !== 'complete' &&\r\n            global.document.readyState !== 'interactive')) {\r\n        debug('waiting for body');\r\n        this._transports.unshift(Transport);\r\n        eventUtils.attachEvent('load', this._connect.bind(this));\r\n        return;\r\n      }\r\n    }\r\n\r\n    // calculate timeout based on RTO and round trips. Default to 5s\r\n    var timeoutMs = (this._rto * Transport.roundTrips) || 5000;\r\n    this._transportTimeoutId = setTimeout(this._transportTimeout.bind(this), timeoutMs);\r\n    debug('using timeout', timeoutMs);\r\n\r\n    var transportUrl = urlUtils.addPath(this._transUrl, '/' + this._server + '/' + this._generateSessionId());\r\n    var options = this._transportOptions[Transport.transportName];\r\n    debug('transport url', transportUrl);\r\n    var transportObj = new Transport(transportUrl, this._transUrl, options);\r\n    transportObj.on('message', this._transportMessage.bind(this));\r\n    transportObj.once('close', this._transportClose.bind(this));\r\n    transportObj.transportName = Transport.transportName;\r\n    this._transport = transportObj;\r\n\r\n    return;\r\n  }\r\n  this._close(2000, 'All transports failed', false);\r\n};\r\n\r\nSockJS.prototype._transportTimeout = function() {\r\n  debug('_transportTimeout');\r\n  if (this.readyState === SockJS.CONNECTING) {\r\n    this._transportClose(2007, 'Transport timed out');\r\n  }\r\n};\r\n\r\nSockJS.prototype._transportMessage = function(msg) {\r\n  debug('_transportMessage', msg);\r\n  var self = this\r\n    , type = msg.slice(0, 1)\r\n    , content = msg.slice(1)\r\n    , payload\r\n    ;\r\n\r\n  // first check for messages that don't need a payload\r\n  switch (type) {\r\n    case 'o':\r\n      this._open();\r\n      return;\r\n    case 'h':\r\n      this.dispatchEvent(new Event('heartbeat'));\r\n      debug('heartbeat', this.transport);\r\n      return;\r\n  }\r\n\r\n  if (content) {\r\n    try {\r\n      payload = JSON3.parse(content);\r\n    } catch (e) {\r\n      debug('bad json', content);\r\n    }\r\n  }\r\n\r\n  if (typeof payload === 'undefined') {\r\n    debug('empty payload', content);\r\n    return;\r\n  }\r\n\r\n  switch (type) {\r\n    case 'a':\r\n      if (Array.isArray(payload)) {\r\n        payload.forEach(function(p) {\r\n          debug('message', self.transport, p);\r\n          self.dispatchEvent(new TransportMessageEvent(p));\r\n        });\r\n      }\r\n      break;\r\n    case 'm':\r\n      debug('message', this.transport, payload);\r\n      this.dispatchEvent(new TransportMessageEvent(payload));\r\n      break;\r\n    case 'c':\r\n      if (Array.isArray(payload) && payload.length === 2) {\r\n        this._close(payload[0], payload[1], true);\r\n      }\r\n      break;\r\n  }\r\n};\r\n\r\nSockJS.prototype._transportClose = function(code, reason) {\r\n  debug('_transportClose', this.transport, code, reason);\r\n  if (this._transport) {\r\n    this._transport.removeAllListeners();\r\n    this._transport = null;\r\n    this.transport = null;\r\n  }\r\n\r\n  if (!userSetCode(code) && code !== 2000 && this.readyState === SockJS.CONNECTING) {\r\n    this._connect();\r\n    return;\r\n  }\r\n\r\n  this._close(code, reason);\r\n};\r\n\r\nSockJS.prototype._open = function() {\r\n  debug('_open', this._transport.transportName, this.readyState);\r\n  if (this.readyState === SockJS.CONNECTING) {\r\n    if (this._transportTimeoutId) {\r\n      clearTimeout(this._transportTimeoutId);\r\n      this._transportTimeoutId = null;\r\n    }\r\n    this.readyState = SockJS.OPEN;\r\n    this.transport = this._transport.transportName;\r\n    this.dispatchEvent(new Event('open'));\r\n    debug('connected', this.transport);\r\n  } else {\r\n    // The server might have been restarted, and lost track of our\r\n    // connection.\r\n    this._close(1006, 'Server lost session');\r\n  }\r\n};\r\n\r\nSockJS.prototype._close = function(code, reason, wasClean) {\r\n  debug('_close', this.transport, code, reason, wasClean, this.readyState);\r\n  var forceFail = false;\r\n\r\n  if (this._ir) {\r\n    forceFail = true;\r\n    this._ir.close();\r\n    this._ir = null;\r\n  }\r\n  if (this._transport) {\r\n    this._transport.close();\r\n    this._transport = null;\r\n    this.transport = null;\r\n  }\r\n\r\n  if (this.readyState === SockJS.CLOSED) {\r\n    throw new Error('InvalidStateError: SockJS has already been closed');\r\n  }\r\n\r\n  this.readyState = SockJS.CLOSING;\r\n  setTimeout(function() {\r\n    this.readyState = SockJS.CLOSED;\r\n\r\n    if (forceFail) {\r\n      this.dispatchEvent(new Event('error'));\r\n    }\r\n\r\n    var e = new CloseEvent('close');\r\n    e.wasClean = wasClean || false;\r\n    e.code = code || 1000;\r\n    e.reason = reason;\r\n\r\n    this.dispatchEvent(e);\r\n    this.onmessage = this.onclose = this.onerror = null;\r\n    debug('disconnected');\r\n  }.bind(this), 0);\r\n};\r\n\r\n// See: http://www.erg.abdn.ac.uk/~gerrit/dccp/notes/ccid2/rto_estimator/\r\n// and RFC 2988.\r\nSockJS.prototype.countRTO = function(rtt) {\r\n  // In a local environment, when using IE8/9 and the `jsonp-polling`\r\n  // transport the time needed to establish a connection (the time that pass\r\n  // from the opening of the transport to the call of `_dispatchOpen`) is\r\n  // around 200msec (the lower bound used in the article above) and this\r\n  // causes spurious timeouts. For this reason we calculate a value slightly\r\n  // larger than that used in the article.\r\n  if (rtt > 100) {\r\n    return 4 * rtt; // rto > 400msec\r\n  }\r\n  return 300 + rtt; // 300msec < rto <= 400msec\r\n};\r\n\r\nmodule.exports = function(availableTransports) {\r\n  transports = transport(availableTransports);\r\n  require('./iframe-bootstrap')(SockJS, availableTransports);\r\n  return SockJS;\r\n};\r\n\r\n}).call(this,{ env: {} },typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\r\n\r\n},{\"./event/close\":2,\"./event/event\":4,\"./event/eventtarget\":5,\"./event/trans-message\":6,\"./iframe-bootstrap\":8,\"./info-receiver\":12,\"./location\":13,\"./shims\":15,\"./utils/browser\":44,\"./utils/escape\":45,\"./utils/event\":46,\"./utils/log\":48,\"./utils/object\":49,\"./utils/random\":50,\"./utils/transport\":51,\"./utils/url\":52,\"./version\":53,\"debug\":54,\"inherits\":56,\"json3\":57,\"url-parse\":61}],15:[function(require,module,exports){\r\n/* eslint-disable */\r\n/* jscs: disable */\r\n'use strict';\r\n\r\n// pulled specific shims from https://github.com/es-shims/es5-shim\r\n\r\nvar ArrayPrototype = Array.prototype;\r\nvar ObjectPrototype = Object.prototype;\r\nvar FunctionPrototype = Function.prototype;\r\nvar StringPrototype = String.prototype;\r\nvar array_slice = ArrayPrototype.slice;\r\n\r\nvar _toString = ObjectPrototype.toString;\r\nvar isFunction = function (val) {\r\n    return ObjectPrototype.toString.call(val) === '[object Function]';\r\n};\r\nvar isArray = function isArray(obj) {\r\n    return _toString.call(obj) === '[object Array]';\r\n};\r\nvar isString = function isString(obj) {\r\n    return _toString.call(obj) === '[object String]';\r\n};\r\n\r\nvar supportsDescriptors = Object.defineProperty && (function () {\r\n    try {\r\n        Object.defineProperty({}, 'x', {});\r\n        return true;\r\n    } catch (e) { /* this is ES3 */\r\n        return false;\r\n    }\r\n}());\r\n\r\n// Define configurable, writable and non-enumerable props\r\n// if they don't exist.\r\nvar defineProperty;\r\nif (supportsDescriptors) {\r\n    defineProperty = function (object, name, method, forceAssign) {\r\n        if (!forceAssign && (name in object)) { return; }\r\n        Object.defineProperty(object, name, {\r\n            configurable: true,\r\n            enumerable: false,\r\n            writable: true,\r\n            value: method\r\n        });\r\n    };\r\n} else {\r\n    defineProperty = function (object, name, method, forceAssign) {\r\n        if (!forceAssign && (name in object)) { return; }\r\n        object[name] = method;\r\n    };\r\n}\r\nvar defineProperties = function (object, map, forceAssign) {\r\n    for (var name in map) {\r\n        if (ObjectPrototype.hasOwnProperty.call(map, name)) {\r\n          defineProperty(object, name, map[name], forceAssign);\r\n        }\r\n    }\r\n};\r\n\r\nvar toObject = function (o) {\r\n    if (o == null) { // this matches both null and undefined\r\n        throw new TypeError(\"can't convert \" + o + ' to object');\r\n    }\r\n    return Object(o);\r\n};\r\n\r\n//\r\n// Util\r\n// ======\r\n//\r\n\r\n// ES5 9.4\r\n// http://es5.github.com/#x9.4\r\n// http://jsperf.com/to-integer\r\n\r\nfunction toInteger(num) {\r\n    var n = +num;\r\n    if (n !== n) { // isNaN\r\n        n = 0;\r\n    } else if (n !== 0 && n !== (1 / 0) && n !== -(1 / 0)) {\r\n        n = (n > 0 || -1) * Math.floor(Math.abs(n));\r\n    }\r\n    return n;\r\n}\r\n\r\nfunction ToUint32(x) {\r\n    return x >>> 0;\r\n}\r\n\r\n//\r\n// Function\r\n// ========\r\n//\r\n\r\n// ES-5 15.3.4.5\r\n// http://es5.github.com/#x15.3.4.5\r\n\r\nfunction Empty() {}\r\n\r\ndefineProperties(FunctionPrototype, {\r\n    bind: function bind(that) { // .length is 1\r\n        // 1. Let Target be the this value.\r\n        var target = this;\r\n        // 2. If IsCallable(Target) is false, throw a TypeError exception.\r\n        if (!isFunction(target)) {\r\n            throw new TypeError('Function.prototype.bind called on incompatible ' + target);\r\n        }\r\n        // 3. Let A be a new (possibly empty) internal list of all of the\r\n        //   argument values provided after thisArg (arg1, arg2 etc), in order.\r\n        // XXX slicedArgs will stand in for \"A\" if used\r\n        var args = array_slice.call(arguments, 1); // for normal call\r\n        // 4. Let F be a new native ECMAScript object.\r\n        // 11. Set the [[Prototype]] internal property of F to the standard\r\n        //   built-in Function prototype object as specified in 15.3.3.1.\r\n        // 12. Set the [[Call]] internal property of F as described in\r\n        //   15.3.4.5.1.\r\n        // 13. Set the [[Construct]] internal property of F as described in\r\n        //   15.3.4.5.2.\r\n        // 14. Set the [[HasInstance]] internal property of F as described in\r\n        //   15.3.4.5.3.\r\n        var binder = function () {\r\n\r\n            if (this instanceof bound) {\r\n                // 15.3.4.5.2 [[Construct]]\r\n                // When the [[Construct]] internal method of a function object,\r\n                // F that was created using the bind function is called with a\r\n                // list of arguments ExtraArgs, the following steps are taken:\r\n                // 1. Let target be the value of F's [[TargetFunction]]\r\n                //   internal property.\r\n                // 2. If target has no [[Construct]] internal method, a\r\n                //   TypeError exception is thrown.\r\n                // 3. Let boundArgs be the value of F's [[BoundArgs]] internal\r\n                //   property.\r\n                // 4. Let args be a new list containing the same values as the\r\n                //   list boundArgs in the same order followed by the same\r\n                //   values as the list ExtraArgs in the same order.\r\n                // 5. Return the result of calling the [[Construct]] internal\r\n                //   method of target providing args as the arguments.\r\n\r\n                var result = target.apply(\r\n                    this,\r\n                    args.concat(array_slice.call(arguments))\r\n                );\r\n                if (Object(result) === result) {\r\n                    return result;\r\n                }\r\n                return this;\r\n\r\n            } else {\r\n                // 15.3.4.5.1 [[Call]]\r\n                // When the [[Call]] internal method of a function object, F,\r\n                // which was created using the bind function is called with a\r\n                // this value and a list of arguments ExtraArgs, the following\r\n                // steps are taken:\r\n                // 1. Let boundArgs be the value of F's [[BoundArgs]] internal\r\n                //   property.\r\n                // 2. Let boundThis be the value of F's [[BoundThis]] internal\r\n                //   property.\r\n                // 3. Let target be the value of F's [[TargetFunction]] internal\r\n                //   property.\r\n                // 4. Let args be a new list containing the same values as the\r\n                //   list boundArgs in the same order followed by the same\r\n                //   values as the list ExtraArgs in the same order.\r\n                // 5. Return the result of calling the [[Call]] internal method\r\n                //   of target providing boundThis as the this value and\r\n                //   providing args as the arguments.\r\n\r\n                // equiv: target.call(this, ...boundArgs, ...args)\r\n                return target.apply(\r\n                    that,\r\n                    args.concat(array_slice.call(arguments))\r\n                );\r\n\r\n            }\r\n\r\n        };\r\n\r\n        // 15. If the [[Class]] internal property of Target is \"Function\", then\r\n        //     a. Let L be the length property of Target minus the length of A.\r\n        //     b. Set the length own property of F to either 0 or L, whichever is\r\n        //       larger.\r\n        // 16. Else set the length own property of F to 0.\r\n\r\n        var boundLength = Math.max(0, target.length - args.length);\r\n\r\n        // 17. Set the attributes of the length own property of F to the values\r\n        //   specified in 15.3.5.1.\r\n        var boundArgs = [];\r\n        for (var i = 0; i < boundLength; i++) {\r\n            boundArgs.push('$' + i);\r\n        }\r\n\r\n        // XXX Build a dynamic function with desired amount of arguments is the only\r\n        // way to set the length property of a function.\r\n        // In environments where Content Security Policies enabled (Chrome extensions,\r\n        // for ex.) all use of eval or Function costructor throws an exception.\r\n        // However in all of these environments Function.prototype.bind exists\r\n        // and so this code will never be executed.\r\n        var bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this, arguments); }')(binder);\r\n\r\n        if (target.prototype) {\r\n            Empty.prototype = target.prototype;\r\n            bound.prototype = new Empty();\r\n            // Clean up dangling references.\r\n            Empty.prototype = null;\r\n        }\r\n\r\n        // TODO\r\n        // 18. Set the [[Extensible]] internal property of F to true.\r\n\r\n        // TODO\r\n        // 19. Let thrower be the [[ThrowTypeError]] function Object (13.2.3).\r\n        // 20. Call the [[DefineOwnProperty]] internal method of F with\r\n        //   arguments \"caller\", PropertyDescriptor {[[Get]]: thrower, [[Set]]:\r\n        //   thrower, [[Enumerable]]: false, [[Configurable]]: false}, and\r\n        //   false.\r\n        // 21. Call the [[DefineOwnProperty]] internal method of F with\r\n        //   arguments \"arguments\", PropertyDescriptor {[[Get]]: thrower,\r\n        //   [[Set]]: thrower, [[Enumerable]]: false, [[Configurable]]: false},\r\n        //   and false.\r\n\r\n        // TODO\r\n        // NOTE Function objects created using Function.prototype.bind do not\r\n        // have a prototype property or the [[Code]], [[FormalParameters]], and\r\n        // [[Scope]] internal properties.\r\n        // XXX can't delete prototype in pure-js.\r\n\r\n        // 22. Return F.\r\n        return bound;\r\n    }\r\n});\r\n\r\n//\r\n// Array\r\n// =====\r\n//\r\n\r\n// ES5 15.4.3.2\r\n// http://es5.github.com/#x15.4.3.2\r\n// https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/isArray\r\ndefineProperties(Array, { isArray: isArray });\r\n\r\n\r\nvar boxedString = Object('a');\r\nvar splitString = boxedString[0] !== 'a' || !(0 in boxedString);\r\n\r\nvar properlyBoxesContext = function properlyBoxed(method) {\r\n    // Check node 0.6.21 bug where third parameter is not boxed\r\n    var properlyBoxesNonStrict = true;\r\n    var properlyBoxesStrict = true;\r\n    if (method) {\r\n        method.call('foo', function (_, __, context) {\r\n            if (typeof context !== 'object') { properlyBoxesNonStrict = false; }\r\n        });\r\n\r\n        method.call([1], function () {\r\n            'use strict';\r\n            properlyBoxesStrict = typeof this === 'string';\r\n        }, 'x');\r\n    }\r\n    return !!method && properlyBoxesNonStrict && properlyBoxesStrict;\r\n};\r\n\r\ndefineProperties(ArrayPrototype, {\r\n    forEach: function forEach(fun /*, thisp*/) {\r\n        var object = toObject(this),\r\n            self = splitString && isString(this) ? this.split('') : object,\r\n            thisp = arguments[1],\r\n            i = -1,\r\n            length = self.length >>> 0;\r\n\r\n        // If no callback function or if callback is not a callable function\r\n        if (!isFunction(fun)) {\r\n            throw new TypeError(); // TODO message\r\n        }\r\n\r\n        while (++i < length) {\r\n            if (i in self) {\r\n                // Invoke the callback function with call, passing arguments:\r\n                // context, property value, property key, thisArg object\r\n                // context\r\n                fun.call(thisp, self[i], i, object);\r\n            }\r\n        }\r\n    }\r\n}, !properlyBoxesContext(ArrayPrototype.forEach));\r\n\r\n// ES5 15.4.4.14\r\n// http://es5.github.com/#x15.4.4.14\r\n// https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/indexOf\r\nvar hasFirefox2IndexOfBug = Array.prototype.indexOf && [0, 1].indexOf(1, 2) !== -1;\r\ndefineProperties(ArrayPrototype, {\r\n    indexOf: function indexOf(sought /*, fromIndex */ ) {\r\n        var self = splitString && isString(this) ? this.split('') : toObject(this),\r\n            length = self.length >>> 0;\r\n\r\n        if (!length) {\r\n            return -1;\r\n        }\r\n\r\n        var i = 0;\r\n        if (arguments.length > 1) {\r\n            i = toInteger(arguments[1]);\r\n        }\r\n\r\n        // handle negative indices\r\n        i = i >= 0 ? i : Math.max(0, length + i);\r\n        for (; i < length; i++) {\r\n            if (i in self && self[i] === sought) {\r\n                return i;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n}, hasFirefox2IndexOfBug);\r\n\r\n//\r\n// String\r\n// ======\r\n//\r\n\r\n// ES5 15.5.4.14\r\n// http://es5.github.com/#x15.5.4.14\r\n\r\n// [bugfix, IE lt 9, firefox 4, Konqueror, Opera, obscure browsers]\r\n// Many browsers do not split properly with regular expressions or they\r\n// do not perform the split correctly under obscure conditions.\r\n// See http://blog.stevenlevithan.com/archives/cross-browser-split\r\n// I've tested in many browsers and this seems to cover the deviant ones:\r\n//    'ab'.split(/(?:ab)*/) should be [\"\", \"\"], not [\"\"]\r\n//    '.'.split(/(.?)(.?)/) should be [\"\", \".\", \"\", \"\"], not [\"\", \"\"]\r\n//    'tesst'.split(/(s)*/) should be [\"t\", undefined, \"e\", \"s\", \"t\"], not\r\n//       [undefined, \"t\", undefined, \"e\", ...]\r\n//    ''.split(/.?/) should be [], not [\"\"]\r\n//    '.'.split(/()()/) should be [\".\"], not [\"\", \"\", \".\"]\r\n\r\nvar string_split = StringPrototype.split;\r\nif (\r\n    'ab'.split(/(?:ab)*/).length !== 2 ||\r\n    '.'.split(/(.?)(.?)/).length !== 4 ||\r\n    'tesst'.split(/(s)*/)[1] === 't' ||\r\n    'test'.split(/(?:)/, -1).length !== 4 ||\r\n    ''.split(/.?/).length ||\r\n    '.'.split(/()()/).length > 1\r\n) {\r\n    (function () {\r\n        var compliantExecNpcg = /()??/.exec('')[1] === void 0; // NPCG: nonparticipating capturing group\r\n\r\n        StringPrototype.split = function (separator, limit) {\r\n            var string = this;\r\n            if (separator === void 0 && limit === 0) {\r\n                return [];\r\n            }\r\n\r\n            // If `separator` is not a regex, use native split\r\n            if (_toString.call(separator) !== '[object RegExp]') {\r\n                return string_split.call(this, separator, limit);\r\n            }\r\n\r\n            var output = [],\r\n                flags = (separator.ignoreCase ? 'i' : '') +\r\n                        (separator.multiline  ? 'm' : '') +\r\n                        (separator.extended   ? 'x' : '') + // Proposed for ES6\r\n                        (separator.sticky     ? 'y' : ''), // Firefox 3+\r\n                lastLastIndex = 0,\r\n                // Make `global` and avoid `lastIndex` issues by working with a copy\r\n                separator2, match, lastIndex, lastLength;\r\n            separator = new RegExp(separator.source, flags + 'g');\r\n            string += ''; // Type-convert\r\n            if (!compliantExecNpcg) {\r\n                // Doesn't need flags gy, but they don't hurt\r\n                separator2 = new RegExp('^' + separator.source + '$(?!\\\\s)', flags);\r\n            }\r\n            /* Values for `limit`, per the spec:\r\n             * If undefined: 4294967295 // Math.pow(2, 32) - 1\r\n             * If 0, Infinity, or NaN: 0\r\n             * If positive number: limit = Math.floor(limit); if (limit > 4294967295) limit -= 4294967296;\r\n             * If negative number: 4294967296 - Math.floor(Math.abs(limit))\r\n             * If other: Type-convert, then use the above rules\r\n             */\r\n            limit = limit === void 0 ?\r\n                -1 >>> 0 : // Math.pow(2, 32) - 1\r\n                ToUint32(limit);\r\n            while (match = separator.exec(string)) {\r\n                // `separator.lastIndex` is not reliable cross-browser\r\n                lastIndex = match.index + match[0].length;\r\n                if (lastIndex > lastLastIndex) {\r\n                    output.push(string.slice(lastLastIndex, match.index));\r\n                    // Fix browsers whose `exec` methods don't consistently return `undefined` for\r\n                    // nonparticipating capturing groups\r\n                    if (!compliantExecNpcg && match.length > 1) {\r\n                        match[0].replace(separator2, function () {\r\n                            for (var i = 1; i < arguments.length - 2; i++) {\r\n                                if (arguments[i] === void 0) {\r\n                                    match[i] = void 0;\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                    if (match.length > 1 && match.index < string.length) {\r\n                        ArrayPrototype.push.apply(output, match.slice(1));\r\n                    }\r\n                    lastLength = match[0].length;\r\n                    lastLastIndex = lastIndex;\r\n                    if (output.length >= limit) {\r\n                        break;\r\n                    }\r\n                }\r\n                if (separator.lastIndex === match.index) {\r\n                    separator.lastIndex++; // Avoid an infinite loop\r\n                }\r\n            }\r\n            if (lastLastIndex === string.length) {\r\n                if (lastLength || !separator.test('')) {\r\n                    output.push('');\r\n                }\r\n            } else {\r\n                output.push(string.slice(lastLastIndex));\r\n            }\r\n            return output.length > limit ? output.slice(0, limit) : output;\r\n        };\r\n    }());\r\n\r\n// [bugfix, chrome]\r\n// If separator is undefined, then the result array contains just one String,\r\n// which is the this value (converted to a String). If limit is not undefined,\r\n// then the output array is truncated so that it contains no more than limit\r\n// elements.\r\n// \"0\".split(undefined, 0) -> []\r\n} else if ('0'.split(void 0, 0).length) {\r\n    StringPrototype.split = function split(separator, limit) {\r\n        if (separator === void 0 && limit === 0) { return []; }\r\n        return string_split.call(this, separator, limit);\r\n    };\r\n}\r\n\r\n// ECMA-262, 3rd B.2.3\r\n// Not an ECMAScript standard, although ECMAScript 3rd Edition has a\r\n// non-normative section suggesting uniform semantics and it should be\r\n// normalized across all browsers\r\n// [bugfix, IE lt 9] IE < 9 substr() with negative value not working in IE\r\nvar string_substr = StringPrototype.substr;\r\nvar hasNegativeSubstrBug = ''.substr && '0b'.substr(-1) !== 'b';\r\ndefineProperties(StringPrototype, {\r\n    substr: function substr(start, length) {\r\n        return string_substr.call(\r\n            this,\r\n            start < 0 ? ((start = this.length + start) < 0 ? 0 : start) : start,\r\n            length\r\n        );\r\n    }\r\n}, hasNegativeSubstrBug);\r\n\r\n},{}],16:[function(require,module,exports){\r\n'use strict';\r\n\r\nmodule.exports = [\r\n  // streaming transports\r\n  require('./transport/websocket')\r\n, require('./transport/xhr-streaming')\r\n, require('./transport/xdr-streaming')\r\n, require('./transport/eventsource')\r\n, require('./transport/lib/iframe-wrap')(require('./transport/eventsource'))\r\n\r\n  // polling transports\r\n, require('./transport/htmlfile')\r\n, require('./transport/lib/iframe-wrap')(require('./transport/htmlfile'))\r\n, require('./transport/xhr-polling')\r\n, require('./transport/xdr-polling')\r\n, require('./transport/lib/iframe-wrap')(require('./transport/xhr-polling'))\r\n, require('./transport/jsonp-polling')\r\n];\r\n\r\n},{\"./transport/eventsource\":20,\"./transport/htmlfile\":21,\"./transport/jsonp-polling\":23,\"./transport/lib/iframe-wrap\":26,\"./transport/websocket\":38,\"./transport/xdr-polling\":39,\"./transport/xdr-streaming\":40,\"./transport/xhr-polling\":41,\"./transport/xhr-streaming\":42}],17:[function(require,module,exports){\r\n(function (process,global){\r\n'use strict';\r\n\r\nvar EventEmitter = require('events').EventEmitter\r\n  , inherits = require('inherits')\r\n  , utils = require('../../utils/event')\r\n  , urlUtils = require('../../utils/url')\r\n  , XHR = global.XMLHttpRequest\r\n  ;\r\n\r\nvar debug = function() {};\r\nif (process.env.NODE_ENV !== 'production') {\r\n  debug = require('debug')('sockjs-client:browser:xhr');\r\n}\r\n\r\nfunction AbstractXHRObject(method, url, payload, opts) {\r\n  debug(method, url);\r\n  var self = this;\r\n  EventEmitter.call(this);\r\n\r\n  setTimeout(function () {\r\n    self._start(method, url, payload, opts);\r\n  }, 0);\r\n}\r\n\r\ninherits(AbstractXHRObject, EventEmitter);\r\n\r\nAbstractXHRObject.prototype._start = function(method, url, payload, opts) {\r\n  var self = this;\r\n\r\n  try {\r\n    this.xhr = new XHR();\r\n  } catch (x) {\r\n    // intentionally empty\r\n  }\r\n\r\n  if (!this.xhr) {\r\n    debug('no xhr');\r\n    this.emit('finish', 0, 'no xhr support');\r\n    this._cleanup();\r\n    return;\r\n  }\r\n\r\n  // several browsers cache POSTs\r\n  url = urlUtils.addQuery(url, 't=' + (+new Date()));\r\n\r\n  // Explorer tends to keep connection open, even after the\r\n  // tab gets closed: http://bugs.jquery.com/ticket/5280\r\n  this.unloadRef = utils.unloadAdd(function() {\r\n    debug('unload cleanup');\r\n    self._cleanup(true);\r\n  });\r\n  try {\r\n    this.xhr.open(method, url, true);\r\n    if (this.timeout && 'timeout' in this.xhr) {\r\n      this.xhr.timeout = this.timeout;\r\n      this.xhr.ontimeout = function() {\r\n        debug('xhr timeout');\r\n        self.emit('finish', 0, '');\r\n        self._cleanup(false);\r\n      };\r\n    }\r\n  } catch (e) {\r\n    debug('exception', e);\r\n    // IE raises an exception on wrong port.\r\n    this.emit('finish', 0, '');\r\n    this._cleanup(false);\r\n    return;\r\n  }\r\n\r\n  if ((!opts || !opts.noCredentials) && AbstractXHRObject.supportsCORS) {\r\n    debug('withCredentials');\r\n    // Mozilla docs says https://developer.mozilla.org/en/XMLHttpRequest :\r\n    // \"This never affects same-site requests.\"\r\n\r\n    this.xhr.withCredentials = 'true';\r\n  }\r\n  if (opts && opts.headers) {\r\n    for (var key in opts.headers) {\r\n      this.xhr.setRequestHeader(key, opts.headers[key]);\r\n    }\r\n  }\r\n\r\n  this.xhr.onreadystatechange = function() {\r\n    if (self.xhr) {\r\n      var x = self.xhr;\r\n      var text, status;\r\n      debug('readyState', x.readyState);\r\n      switch (x.readyState) {\r\n      case 3:\r\n        // IE doesn't like peeking into responseText or status\r\n        // on Microsoft.XMLHTTP and readystate=3\r\n        try {\r\n          status = x.status;\r\n          text = x.responseText;\r\n        } catch (e) {\r\n          // intentionally empty\r\n        }\r\n        debug('status', status);\r\n        // IE returns 1223 for 204: http://bugs.jquery.com/ticket/1450\r\n        if (status === 1223) {\r\n          status = 204;\r\n        }\r\n\r\n        // IE does return readystate == 3 for 404 answers.\r\n        if (status === 200 && text && text.length > 0) {\r\n          debug('chunk');\r\n          self.emit('chunk', status, text);\r\n        }\r\n        break;\r\n      case 4:\r\n        status = x.status;\r\n        debug('status', status);\r\n        // IE returns 1223 for 204: http://bugs.jquery.com/ticket/1450\r\n        if (status === 1223) {\r\n          status = 204;\r\n        }\r\n        // IE returns this for a bad port\r\n        // http://msdn.microsoft.com/en-us/library/windows/desktop/aa383770(v=vs.85).aspx\r\n        if (status === 12005 || status === 12029) {\r\n          status = 0;\r\n        }\r\n\r\n        debug('finish', status, x.responseText);\r\n        self.emit('finish', status, x.responseText);\r\n        self._cleanup(false);\r\n        break;\r\n      }\r\n    }\r\n  };\r\n\r\n  try {\r\n    self.xhr.send(payload);\r\n  } catch (e) {\r\n    self.emit('finish', 0, '');\r\n    self._cleanup(false);\r\n  }\r\n};\r\n\r\nAbstractXHRObject.prototype._cleanup = function(abort) {\r\n  debug('cleanup');\r\n  if (!this.xhr) {\r\n    return;\r\n  }\r\n  this.removeAllListeners();\r\n  utils.unloadDel(this.unloadRef);\r\n\r\n  // IE needs this field to be a function\r\n  this.xhr.onreadystatechange = function() {};\r\n  if (this.xhr.ontimeout) {\r\n    this.xhr.ontimeout = null;\r\n  }\r\n\r\n  if (abort) {\r\n    try {\r\n      this.xhr.abort();\r\n    } catch (x) {\r\n      // intentionally empty\r\n    }\r\n  }\r\n  this.unloadRef = this.xhr = null;\r\n};\r\n\r\nAbstractXHRObject.prototype.close = function() {\r\n  debug('close');\r\n  this._cleanup(true);\r\n};\r\n\r\nAbstractXHRObject.enabled = !!XHR;\r\n// override XMLHttpRequest for IE6/7\r\n// obfuscate to avoid firewalls\r\nvar axo = ['Active'].concat('Object').join('X');\r\nif (!AbstractXHRObject.enabled && (axo in global)) {\r\n  debug('overriding xmlhttprequest');\r\n  XHR = function() {\r\n    try {\r\n      return new global[axo]('Microsoft.XMLHTTP');\r\n    } catch (e) {\r\n      return null;\r\n    }\r\n  };\r\n  AbstractXHRObject.enabled = !!new XHR();\r\n}\r\n\r\nvar cors = false;\r\ntry {\r\n  cors = 'withCredentials' in new XHR();\r\n} catch (ignored) {\r\n  // intentionally empty\r\n}\r\n\r\nAbstractXHRObject.supportsCORS = cors;\r\n\r\nmodule.exports = AbstractXHRObject;\r\n\r\n}).call(this,{ env: {} },typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\r\n\r\n},{\"../../utils/event\":46,\"../../utils/url\":52,\"debug\":54,\"events\":3,\"inherits\":56}],18:[function(require,module,exports){\r\n(function (global){\r\nmodule.exports = global.EventSource;\r\n\r\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\r\n\r\n},{}],19:[function(require,module,exports){\r\n(function (global){\r\n'use strict';\r\n\r\nvar Driver = global.WebSocket || global.MozWebSocket;\r\nif (Driver) {\r\n\tmodule.exports = function WebSocketBrowserDriver(url) {\r\n\t\treturn new Driver(url);\r\n\t};\r\n} else {\r\n\tmodule.exports = undefined;\r\n}\r\n\r\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\r\n\r\n},{}],20:[function(require,module,exports){\r\n'use strict';\r\n\r\nvar inherits = require('inherits')\r\n  , AjaxBasedTransport = require('./lib/ajax-based')\r\n  , EventSourceReceiver = require('./receiver/eventsource')\r\n  , XHRCorsObject = require('./sender/xhr-cors')\r\n  , EventSourceDriver = require('eventsource')\r\n  ;\r\n\r\nfunction EventSourceTransport(transUrl) {\r\n  if (!EventSourceTransport.enabled()) {\r\n    throw new Error('Transport created when disabled');\r\n  }\r\n\r\n  AjaxBasedTransport.call(this, transUrl, '/eventsource', EventSourceReceiver, XHRCorsObject);\r\n}\r\n\r\ninherits(EventSourceTransport, AjaxBasedTransport);\r\n\r\nEventSourceTransport.enabled = function() {\r\n  return !!EventSourceDriver;\r\n};\r\n\r\nEventSourceTransport.transportName = 'eventsource';\r\nEventSourceTransport.roundTrips = 2;\r\n\r\nmodule.exports = EventSourceTransport;\r\n\r\n},{\"./lib/ajax-based\":24,\"./receiver/eventsource\":29,\"./sender/xhr-cors\":35,\"eventsource\":18,\"inherits\":56}],21:[function(require,module,exports){\r\n'use strict';\r\n\r\nvar inherits = require('inherits')\r\n  , HtmlfileReceiver = require('./receiver/htmlfile')\r\n  , XHRLocalObject = require('./sender/xhr-local')\r\n  , AjaxBasedTransport = require('./lib/ajax-based')\r\n  ;\r\n\r\nfunction HtmlFileTransport(transUrl) {\r\n  if (!HtmlfileReceiver.enabled) {\r\n    throw new Error('Transport created when disabled');\r\n  }\r\n  AjaxBasedTransport.call(this, transUrl, '/htmlfile', HtmlfileReceiver, XHRLocalObject);\r\n}\r\n\r\ninherits(HtmlFileTransport, AjaxBasedTransport);\r\n\r\nHtmlFileTransport.enabled = function(info) {\r\n  return HtmlfileReceiver.enabled && info.sameOrigin;\r\n};\r\n\r\nHtmlFileTransport.transportName = 'htmlfile';\r\nHtmlFileTransport.roundTrips = 2;\r\n\r\nmodule.exports = HtmlFileTransport;\r\n\r\n},{\"./lib/ajax-based\":24,\"./receiver/htmlfile\":30,\"./sender/xhr-local\":37,\"inherits\":56}],22:[function(require,module,exports){\r\n(function (process){\r\n'use strict';\r\n\r\n// Few cool transports do work only for same-origin. In order to make\r\n// them work cross-domain we shall use iframe, served from the\r\n// remote domain. New browsers have capabilities to communicate with\r\n// cross domain iframe using postMessage(). In IE it was implemented\r\n// from IE 8+, but of course, IE got some details wrong:\r\n//    http://msdn.microsoft.com/en-us/library/cc197015(v=VS.85).aspx\r\n//    http://stevesouders.com/misc/test-postmessage.php\r\n\r\nvar inherits = require('inherits')\r\n  , JSON3 = require('json3')\r\n  , EventEmitter = require('events').EventEmitter\r\n  , version = require('../version')\r\n  , urlUtils = require('../utils/url')\r\n  , iframeUtils = require('../utils/iframe')\r\n  , eventUtils = require('../utils/event')\r\n  , random = require('../utils/random')\r\n  ;\r\n\r\nvar debug = function() {};\r\nif (process.env.NODE_ENV !== 'production') {\r\n  debug = require('debug')('sockjs-client:transport:iframe');\r\n}\r\n\r\nfunction IframeTransport(transport, transUrl, baseUrl) {\r\n  if (!IframeTransport.enabled()) {\r\n    throw new Error('Transport created when disabled');\r\n  }\r\n  EventEmitter.call(this);\r\n\r\n  var self = this;\r\n  this.origin = urlUtils.getOrigin(baseUrl);\r\n  this.baseUrl = baseUrl;\r\n  this.transUrl = transUrl;\r\n  this.transport = transport;\r\n  this.windowId = random.string(8);\r\n\r\n  var iframeUrl = urlUtils.addPath(baseUrl, '/iframe.html') + '#' + this.windowId;\r\n  debug(transport, transUrl, iframeUrl);\r\n\r\n  this.iframeObj = iframeUtils.createIframe(iframeUrl, function(r) {\r\n    debug('err callback');\r\n    self.emit('close', 1006, 'Unable to load an iframe (' + r + ')');\r\n    self.close();\r\n  });\r\n\r\n  this.onmessageCallback = this._message.bind(this);\r\n  eventUtils.attachEvent('message', this.onmessageCallback);\r\n}\r\n\r\ninherits(IframeTransport, EventEmitter);\r\n\r\nIframeTransport.prototype.close = function() {\r\n  debug('close');\r\n  this.removeAllListeners();\r\n  if (this.iframeObj) {\r\n    eventUtils.detachEvent('message', this.onmessageCallback);\r\n    try {\r\n      // When the iframe is not loaded, IE raises an exception\r\n      // on 'contentWindow'.\r\n      this.postMessage('c');\r\n    } catch (x) {\r\n      // intentionally empty\r\n    }\r\n    this.iframeObj.cleanup();\r\n    this.iframeObj = null;\r\n    this.onmessageCallback = this.iframeObj = null;\r\n  }\r\n};\r\n\r\nIframeTransport.prototype._message = function(e) {\r\n  debug('message', e.data);\r\n  if (!urlUtils.isOriginEqual(e.origin, this.origin)) {\r\n    debug('not same origin', e.origin, this.origin);\r\n    return;\r\n  }\r\n\r\n  var iframeMessage;\r\n  try {\r\n    iframeMessage = JSON3.parse(e.data);\r\n  } catch (ignored) {\r\n    debug('bad json', e.data);\r\n    return;\r\n  }\r\n\r\n  if (iframeMessage.windowId !== this.windowId) {\r\n    debug('mismatched window id', iframeMessage.windowId, this.windowId);\r\n    return;\r\n  }\r\n\r\n  switch (iframeMessage.type) {\r\n  case 's':\r\n    this.iframeObj.loaded();\r\n    // window global dependency\r\n    this.postMessage('s', JSON3.stringify([\r\n      version\r\n    , this.transport\r\n    , this.transUrl\r\n    , this.baseUrl\r\n    ]));\r\n    break;\r\n  case 't':\r\n    this.emit('message', iframeMessage.data);\r\n    break;\r\n  case 'c':\r\n    var cdata;\r\n    try {\r\n      cdata = JSON3.parse(iframeMessage.data);\r\n    } catch (ignored) {\r\n      debug('bad json', iframeMessage.data);\r\n      return;\r\n    }\r\n    this.emit('close', cdata[0], cdata[1]);\r\n    this.close();\r\n    break;\r\n  }\r\n};\r\n\r\nIframeTransport.prototype.postMessage = function(type, data) {\r\n  debug('postMessage', type, data);\r\n  this.iframeObj.post(JSON3.stringify({\r\n    windowId: this.windowId\r\n  , type: type\r\n  , data: data || ''\r\n  }), this.origin);\r\n};\r\n\r\nIframeTransport.prototype.send = function(message) {\r\n  debug('send', message);\r\n  this.postMessage('m', message);\r\n};\r\n\r\nIframeTransport.enabled = function() {\r\n  return iframeUtils.iframeEnabled;\r\n};\r\n\r\nIframeTransport.transportName = 'iframe';\r\nIframeTransport.roundTrips = 2;\r\n\r\nmodule.exports = IframeTransport;\r\n\r\n}).call(this,{ env: {} })\r\n\r\n},{\"../utils/event\":46,\"../utils/iframe\":47,\"../utils/random\":50,\"../utils/url\":52,\"../version\":53,\"debug\":54,\"events\":3,\"inherits\":56,\"json3\":57}],23:[function(require,module,exports){\r\n(function (global){\r\n'use strict';\r\n\r\n// The simplest and most robust transport, using the well-know cross\r\n// domain hack - JSONP. This transport is quite inefficient - one\r\n// message could use up to one http request. But at least it works almost\r\n// everywhere.\r\n// Known limitations:\r\n//   o you will get a spinning cursor\r\n//   o for Konqueror a dumb timer is needed to detect errors\r\n\r\nvar inherits = require('inherits')\r\n  , SenderReceiver = require('./lib/sender-receiver')\r\n  , JsonpReceiver = require('./receiver/jsonp')\r\n  , jsonpSender = require('./sender/jsonp')\r\n  ;\r\n\r\nfunction JsonPTransport(transUrl) {\r\n  if (!JsonPTransport.enabled()) {\r\n    throw new Error('Transport created when disabled');\r\n  }\r\n  SenderReceiver.call(this, transUrl, '/jsonp', jsonpSender, JsonpReceiver);\r\n}\r\n\r\ninherits(JsonPTransport, SenderReceiver);\r\n\r\nJsonPTransport.enabled = function() {\r\n  return !!global.document;\r\n};\r\n\r\nJsonPTransport.transportName = 'jsonp-polling';\r\nJsonPTransport.roundTrips = 1;\r\nJsonPTransport.needBody = true;\r\n\r\nmodule.exports = JsonPTransport;\r\n\r\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\r\n\r\n},{\"./lib/sender-receiver\":28,\"./receiver/jsonp\":31,\"./sender/jsonp\":33,\"inherits\":56}],24:[function(require,module,exports){\r\n(function (process){\r\n'use strict';\r\n\r\nvar inherits = require('inherits')\r\n  , urlUtils = require('../../utils/url')\r\n  , SenderReceiver = require('./sender-receiver')\r\n  ;\r\n\r\nvar debug = function() {};\r\nif (process.env.NODE_ENV !== 'production') {\r\n  debug = require('debug')('sockjs-client:ajax-based');\r\n}\r\n\r\nfunction createAjaxSender(AjaxObject) {\r\n  return function(url, payload, callback) {\r\n    debug('create ajax sender', url, payload);\r\n    var opt = {};\r\n    if (typeof payload === 'string') {\r\n      opt.headers = {'Content-type': 'text/plain'};\r\n    }\r\n    var ajaxUrl = urlUtils.addPath(url, '/xhr_send');\r\n    var xo = new AjaxObject('POST', ajaxUrl, payload, opt);\r\n    xo.once('finish', function(status) {\r\n      debug('finish', status);\r\n      xo = null;\r\n\r\n      if (status !== 200 && status !== 204) {\r\n        return callback(new Error('http status ' + status));\r\n      }\r\n      callback();\r\n    });\r\n    return function() {\r\n      debug('abort');\r\n      xo.close();\r\n      xo = null;\r\n\r\n      var err = new Error('Aborted');\r\n      err.code = 1000;\r\n      callback(err);\r\n    };\r\n  };\r\n}\r\n\r\nfunction AjaxBasedTransport(transUrl, urlSuffix, Receiver, AjaxObject) {\r\n  SenderReceiver.call(this, transUrl, urlSuffix, createAjaxSender(AjaxObject), Receiver, AjaxObject);\r\n}\r\n\r\ninherits(AjaxBasedTransport, SenderReceiver);\r\n\r\nmodule.exports = AjaxBasedTransport;\r\n\r\n}).call(this,{ env: {} })\r\n\r\n},{\"../../utils/url\":52,\"./sender-receiver\":28,\"debug\":54,\"inherits\":56}],25:[function(require,module,exports){\r\n(function (process){\r\n'use strict';\r\n\r\nvar inherits = require('inherits')\r\n  , EventEmitter = require('events').EventEmitter\r\n  ;\r\n\r\nvar debug = function() {};\r\nif (process.env.NODE_ENV !== 'production') {\r\n  debug = require('debug')('sockjs-client:buffered-sender');\r\n}\r\n\r\nfunction BufferedSender(url, sender) {\r\n  debug(url);\r\n  EventEmitter.call(this);\r\n  this.sendBuffer = [];\r\n  this.sender = sender;\r\n  this.url = url;\r\n}\r\n\r\ninherits(BufferedSender, EventEmitter);\r\n\r\nBufferedSender.prototype.send = function(message) {\r\n  debug('send', message);\r\n  this.sendBuffer.push(message);\r\n  if (!this.sendStop) {\r\n    this.sendSchedule();\r\n  }\r\n};\r\n\r\n// For polling transports in a situation when in the message callback,\r\n// new message is being send. If the sending connection was started\r\n// before receiving one, it is possible to saturate the network and\r\n// timeout due to the lack of receiving socket. To avoid that we delay\r\n// sending messages by some small time, in order to let receiving\r\n// connection be started beforehand. This is only a halfmeasure and\r\n// does not fix the big problem, but it does make the tests go more\r\n// stable on slow networks.\r\nBufferedSender.prototype.sendScheduleWait = function() {\r\n  debug('sendScheduleWait');\r\n  var self = this;\r\n  var tref;\r\n  this.sendStop = function() {\r\n    debug('sendStop');\r\n    self.sendStop = null;\r\n    clearTimeout(tref);\r\n  };\r\n  tref = setTimeout(function() {\r\n    debug('timeout');\r\n    self.sendStop = null;\r\n    self.sendSchedule();\r\n  }, 25);\r\n};\r\n\r\nBufferedSender.prototype.sendSchedule = function() {\r\n  debug('sendSchedule', this.sendBuffer.length);\r\n  var self = this;\r\n  if (this.sendBuffer.length > 0) {\r\n    var payload = '[' + this.sendBuffer.join(',') + ']';\r\n    this.sendStop = this.sender(this.url, payload, function(err) {\r\n      self.sendStop = null;\r\n      if (err) {\r\n        debug('error', err);\r\n        self.emit('close', err.code || 1006, 'Sending error: ' + err);\r\n        self.close();\r\n      } else {\r\n        self.sendScheduleWait();\r\n      }\r\n    });\r\n    this.sendBuffer = [];\r\n  }\r\n};\r\n\r\nBufferedSender.prototype._cleanup = function() {\r\n  debug('_cleanup');\r\n  this.removeAllListeners();\r\n};\r\n\r\nBufferedSender.prototype.close = function() {\r\n  debug('close');\r\n  this._cleanup();\r\n  if (this.sendStop) {\r\n    this.sendStop();\r\n    this.sendStop = null;\r\n  }\r\n};\r\n\r\nmodule.exports = BufferedSender;\r\n\r\n}).call(this,{ env: {} })\r\n\r\n},{\"debug\":54,\"events\":3,\"inherits\":56}],26:[function(require,module,exports){\r\n(function (global){\r\n'use strict';\r\n\r\nvar inherits = require('inherits')\r\n  , IframeTransport = require('../iframe')\r\n  , objectUtils = require('../../utils/object')\r\n  ;\r\n\r\nmodule.exports = function(transport) {\r\n\r\n  function IframeWrapTransport(transUrl, baseUrl) {\r\n    IframeTransport.call(this, transport.transportName, transUrl, baseUrl);\r\n  }\r\n\r\n  inherits(IframeWrapTransport, IframeTransport);\r\n\r\n  IframeWrapTransport.enabled = function(url, info) {\r\n    if (!global.document) {\r\n      return false;\r\n    }\r\n\r\n    var iframeInfo = objectUtils.extend({}, info);\r\n    iframeInfo.sameOrigin = true;\r\n    return transport.enabled(iframeInfo) && IframeTransport.enabled();\r\n  };\r\n\r\n  IframeWrapTransport.transportName = 'iframe-' + transport.transportName;\r\n  IframeWrapTransport.needBody = true;\r\n  IframeWrapTransport.roundTrips = IframeTransport.roundTrips + transport.roundTrips - 1; // html, javascript (2) + transport - no CORS (1)\r\n\r\n  IframeWrapTransport.facadeTransport = transport;\r\n\r\n  return IframeWrapTransport;\r\n};\r\n\r\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\r\n\r\n},{\"../../utils/object\":49,\"../iframe\":22,\"inherits\":56}],27:[function(require,module,exports){\r\n(function (process){\r\n'use strict';\r\n\r\nvar inherits = require('inherits')\r\n  , EventEmitter = require('events').EventEmitter\r\n  ;\r\n\r\nvar debug = function() {};\r\nif (process.env.NODE_ENV !== 'production') {\r\n  debug = require('debug')('sockjs-client:polling');\r\n}\r\n\r\nfunction Polling(Receiver, receiveUrl, AjaxObject) {\r\n  debug(receiveUrl);\r\n  EventEmitter.call(this);\r\n  this.Receiver = Receiver;\r\n  this.receiveUrl = receiveUrl;\r\n  this.AjaxObject = AjaxObject;\r\n  this._scheduleReceiver();\r\n}\r\n\r\ninherits(Polling, EventEmitter);\r\n\r\nPolling.prototype._scheduleReceiver = function() {\r\n  debug('_scheduleReceiver');\r\n  var self = this;\r\n  var poll = this.poll = new this.Receiver(this.receiveUrl, this.AjaxObject);\r\n\r\n  poll.on('message', function(msg) {\r\n    debug('message', msg);\r\n    self.emit('message', msg);\r\n  });\r\n\r\n  poll.once('close', function(code, reason) {\r\n    debug('close', code, reason, self.pollIsClosing);\r\n    self.poll = poll = null;\r\n\r\n    if (!self.pollIsClosing) {\r\n      if (reason === 'network') {\r\n        self._scheduleReceiver();\r\n      } else {\r\n        self.emit('close', code || 1006, reason);\r\n        self.removeAllListeners();\r\n      }\r\n    }\r\n  });\r\n};\r\n\r\nPolling.prototype.abort = function() {\r\n  debug('abort');\r\n  this.removeAllListeners();\r\n  this.pollIsClosing = true;\r\n  if (this.poll) {\r\n    this.poll.abort();\r\n  }\r\n};\r\n\r\nmodule.exports = Polling;\r\n\r\n}).call(this,{ env: {} })\r\n\r\n},{\"debug\":54,\"events\":3,\"inherits\":56}],28:[function(require,module,exports){\r\n(function (process){\r\n'use strict';\r\n\r\nvar inherits = require('inherits')\r\n  , urlUtils = require('../../utils/url')\r\n  , BufferedSender = require('./buffered-sender')\r\n  , Polling = require('./polling')\r\n  ;\r\n\r\nvar debug = function() {};\r\nif (process.env.NODE_ENV !== 'production') {\r\n  debug = require('debug')('sockjs-client:sender-receiver');\r\n}\r\n\r\nfunction SenderReceiver(transUrl, urlSuffix, senderFunc, Receiver, AjaxObject) {\r\n  var pollUrl = urlUtils.addPath(transUrl, urlSuffix);\r\n  debug(pollUrl);\r\n  var self = this;\r\n  BufferedSender.call(this, transUrl, senderFunc);\r\n\r\n  this.poll = new Polling(Receiver, pollUrl, AjaxObject);\r\n  this.poll.on('message', function(msg) {\r\n    debug('poll message', msg);\r\n    self.emit('message', msg);\r\n  });\r\n  this.poll.once('close', function(code, reason) {\r\n    debug('poll close', code, reason);\r\n    self.poll = null;\r\n    self.emit('close', code, reason);\r\n    self.close();\r\n  });\r\n}\r\n\r\ninherits(SenderReceiver, BufferedSender);\r\n\r\nSenderReceiver.prototype.close = function() {\r\n  BufferedSender.prototype.close.call(this);\r\n  debug('close');\r\n  this.removeAllListeners();\r\n  if (this.poll) {\r\n    this.poll.abort();\r\n    this.poll = null;\r\n  }\r\n};\r\n\r\nmodule.exports = SenderReceiver;\r\n\r\n}).call(this,{ env: {} })\r\n\r\n},{\"../../utils/url\":52,\"./buffered-sender\":25,\"./polling\":27,\"debug\":54,\"inherits\":56}],29:[function(require,module,exports){\r\n(function (process){\r\n'use strict';\r\n\r\nvar inherits = require('inherits')\r\n  , EventEmitter = require('events').EventEmitter\r\n  , EventSourceDriver = require('eventsource')\r\n  ;\r\n\r\nvar debug = function() {};\r\nif (process.env.NODE_ENV !== 'production') {\r\n  debug = require('debug')('sockjs-client:receiver:eventsource');\r\n}\r\n\r\nfunction EventSourceReceiver(url) {\r\n  debug(url);\r\n  EventEmitter.call(this);\r\n\r\n  var self = this;\r\n  var es = this.es = new EventSourceDriver(url);\r\n  es.onmessage = function(e) {\r\n    debug('message', e.data);\r\n    self.emit('message', decodeURI(e.data));\r\n  };\r\n  es.onerror = function(e) {\r\n    debug('error', es.readyState, e);\r\n    // ES on reconnection has readyState = 0 or 1.\r\n    // on network error it's CLOSED = 2\r\n    var reason = (es.readyState !== 2 ? 'network' : 'permanent');\r\n    self._cleanup();\r\n    self._close(reason);\r\n  };\r\n}\r\n\r\ninherits(EventSourceReceiver, EventEmitter);\r\n\r\nEventSourceReceiver.prototype.abort = function() {\r\n  debug('abort');\r\n  this._cleanup();\r\n  this._close('user');\r\n};\r\n\r\nEventSourceReceiver.prototype._cleanup = function() {\r\n  debug('cleanup');\r\n  var es = this.es;\r\n  if (es) {\r\n    es.onmessage = es.onerror = null;\r\n    es.close();\r\n    this.es = null;\r\n  }\r\n};\r\n\r\nEventSourceReceiver.prototype._close = function(reason) {\r\n  debug('close', reason);\r\n  var self = this;\r\n  // Safari and chrome < 15 crash if we close window before\r\n  // waiting for ES cleanup. See:\r\n  // https://code.google.com/p/chromium/issues/detail?id=89155\r\n  setTimeout(function() {\r\n    self.emit('close', null, reason);\r\n    self.removeAllListeners();\r\n  }, 200);\r\n};\r\n\r\nmodule.exports = EventSourceReceiver;\r\n\r\n}).call(this,{ env: {} })\r\n\r\n},{\"debug\":54,\"events\":3,\"eventsource\":18,\"inherits\":56}],30:[function(require,module,exports){\r\n(function (process,global){\r\n'use strict';\r\n\r\nvar inherits = require('inherits')\r\n  , iframeUtils = require('../../utils/iframe')\r\n  , urlUtils = require('../../utils/url')\r\n  , EventEmitter = require('events').EventEmitter\r\n  , random = require('../../utils/random')\r\n  ;\r\n\r\nvar debug = function() {};\r\nif (process.env.NODE_ENV !== 'production') {\r\n  debug = require('debug')('sockjs-client:receiver:htmlfile');\r\n}\r\n\r\nfunction HtmlfileReceiver(url) {\r\n  debug(url);\r\n  EventEmitter.call(this);\r\n  var self = this;\r\n  iframeUtils.polluteGlobalNamespace();\r\n\r\n  this.id = 'a' + random.string(6);\r\n  url = urlUtils.addQuery(url, 'c=' + decodeURIComponent(iframeUtils.WPrefix + '.' + this.id));\r\n\r\n  debug('using htmlfile', HtmlfileReceiver.htmlfileEnabled);\r\n  var constructFunc = HtmlfileReceiver.htmlfileEnabled ?\r\n      iframeUtils.createHtmlfile : iframeUtils.createIframe;\r\n\r\n  global[iframeUtils.WPrefix][this.id] = {\r\n    start: function() {\r\n      debug('start');\r\n      self.iframeObj.loaded();\r\n    }\r\n  , message: function(data) {\r\n      debug('message', data);\r\n      self.emit('message', data);\r\n    }\r\n  , stop: function() {\r\n      debug('stop');\r\n      self._cleanup();\r\n      self._close('network');\r\n    }\r\n  };\r\n  this.iframeObj = constructFunc(url, function() {\r\n    debug('callback');\r\n    self._cleanup();\r\n    self._close('permanent');\r\n  });\r\n}\r\n\r\ninherits(HtmlfileReceiver, EventEmitter);\r\n\r\nHtmlfileReceiver.prototype.abort = function() {\r\n  debug('abort');\r\n  this._cleanup();\r\n  this._close('user');\r\n};\r\n\r\nHtmlfileReceiver.prototype._cleanup = function() {\r\n  debug('_cleanup');\r\n  if (this.iframeObj) {\r\n    this.iframeObj.cleanup();\r\n    this.iframeObj = null;\r\n  }\r\n  delete global[iframeUtils.WPrefix][this.id];\r\n};\r\n\r\nHtmlfileReceiver.prototype._close = function(reason) {\r\n  debug('_close', reason);\r\n  this.emit('close', null, reason);\r\n  this.removeAllListeners();\r\n};\r\n\r\nHtmlfileReceiver.htmlfileEnabled = false;\r\n\r\n// obfuscate to avoid firewalls\r\nvar axo = ['Active'].concat('Object').join('X');\r\nif (axo in global) {\r\n  try {\r\n    HtmlfileReceiver.htmlfileEnabled = !!new global[axo]('htmlfile');\r\n  } catch (x) {\r\n    // intentionally empty\r\n  }\r\n}\r\n\r\nHtmlfileReceiver.enabled = HtmlfileReceiver.htmlfileEnabled || iframeUtils.iframeEnabled;\r\n\r\nmodule.exports = HtmlfileReceiver;\r\n\r\n}).call(this,{ env: {} },typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\r\n\r\n},{\"../../utils/iframe\":47,\"../../utils/random\":50,\"../../utils/url\":52,\"debug\":54,\"events\":3,\"inherits\":56}],31:[function(require,module,exports){\r\n(function (process,global){\r\n'use strict';\r\n\r\nvar utils = require('../../utils/iframe')\r\n  , random = require('../../utils/random')\r\n  , browser = require('../../utils/browser')\r\n  , urlUtils = require('../../utils/url')\r\n  , inherits = require('inherits')\r\n  , EventEmitter = require('events').EventEmitter\r\n  ;\r\n\r\nvar debug = function() {};\r\nif (process.env.NODE_ENV !== 'production') {\r\n  debug = require('debug')('sockjs-client:receiver:jsonp');\r\n}\r\n\r\nfunction JsonpReceiver(url) {\r\n  debug(url);\r\n  var self = this;\r\n  EventEmitter.call(this);\r\n\r\n  utils.polluteGlobalNamespace();\r\n\r\n  this.id = 'a' + random.string(6);\r\n  var urlWithId = urlUtils.addQuery(url, 'c=' + encodeURIComponent(utils.WPrefix + '.' + this.id));\r\n\r\n  global[utils.WPrefix][this.id] = this._callback.bind(this);\r\n  this._createScript(urlWithId);\r\n\r\n  // Fallback mostly for Konqueror - stupid timer, 35 seconds shall be plenty.\r\n  this.timeoutId = setTimeout(function() {\r\n    debug('timeout');\r\n    self._abort(new Error('JSONP script loaded abnormally (timeout)'));\r\n  }, JsonpReceiver.timeout);\r\n}\r\n\r\ninherits(JsonpReceiver, EventEmitter);\r\n\r\nJsonpReceiver.prototype.abort = function() {\r\n  debug('abort');\r\n  if (global[utils.WPrefix][this.id]) {\r\n    var err = new Error('JSONP user aborted read');\r\n    err.code = 1000;\r\n    this._abort(err);\r\n  }\r\n};\r\n\r\nJsonpReceiver.timeout = 35000;\r\nJsonpReceiver.scriptErrorTimeout = 1000;\r\n\r\nJsonpReceiver.prototype._callback = function(data) {\r\n  debug('_callback', data);\r\n  this._cleanup();\r\n\r\n  if (this.aborting) {\r\n    return;\r\n  }\r\n\r\n  if (data) {\r\n    debug('message', data);\r\n    this.emit('message', data);\r\n  }\r\n  this.emit('close', null, 'network');\r\n  this.removeAllListeners();\r\n};\r\n\r\nJsonpReceiver.prototype._abort = function(err) {\r\n  debug('_abort', err);\r\n  this._cleanup();\r\n  this.aborting = true;\r\n  this.emit('close', err.code, err.message);\r\n  this.removeAllListeners();\r\n};\r\n\r\nJsonpReceiver.prototype._cleanup = function() {\r\n  debug('_cleanup');\r\n  clearTimeout(this.timeoutId);\r\n  if (this.script2) {\r\n    this.script2.parentNode.removeChild(this.script2);\r\n    this.script2 = null;\r\n  }\r\n  if (this.script) {\r\n    var script = this.script;\r\n    // Unfortunately, you can't really abort script loading of\r\n    // the script.\r\n    script.parentNode.removeChild(script);\r\n    script.onreadystatechange = script.onerror =\r\n        script.onload = script.onclick = null;\r\n    this.script = null;\r\n  }\r\n  delete global[utils.WPrefix][this.id];\r\n};\r\n\r\nJsonpReceiver.prototype._scriptError = function() {\r\n  debug('_scriptError');\r\n  var self = this;\r\n  if (this.errorTimer) {\r\n    return;\r\n  }\r\n\r\n  this.errorTimer = setTimeout(function() {\r\n    if (!self.loadedOkay) {\r\n      self._abort(new Error('JSONP script loaded abnormally (onerror)'));\r\n    }\r\n  }, JsonpReceiver.scriptErrorTimeout);\r\n};\r\n\r\nJsonpReceiver.prototype._createScript = function(url) {\r\n  debug('_createScript', url);\r\n  var self = this;\r\n  var script = this.script = global.document.createElement('script');\r\n  var script2;  // Opera synchronous load trick.\r\n\r\n  script.id = 'a' + random.string(8);\r\n  script.src = url;\r\n  script.type = 'text/javascript';\r\n  script.charset = 'UTF-8';\r\n  script.onerror = this._scriptError.bind(this);\r\n  script.onload = function() {\r\n    debug('onload');\r\n    self._abort(new Error('JSONP script loaded abnormally (onload)'));\r\n  };\r\n\r\n  // IE9 fires 'error' event after onreadystatechange or before, in random order.\r\n  // Use loadedOkay to determine if actually errored\r\n  script.onreadystatechange = function() {\r\n    debug('onreadystatechange', script.readyState);\r\n    if (/loaded|closed/.test(script.readyState)) {\r\n      if (script && script.htmlFor && script.onclick) {\r\n        self.loadedOkay = true;\r\n        try {\r\n          // In IE, actually execute the script.\r\n          script.onclick();\r\n        } catch (x) {\r\n          // intentionally empty\r\n        }\r\n      }\r\n      if (script) {\r\n        self._abort(new Error('JSONP script loaded abnormally (onreadystatechange)'));\r\n      }\r\n    }\r\n  };\r\n  // IE: event/htmlFor/onclick trick.\r\n  // One can't rely on proper order for onreadystatechange. In order to\r\n  // make sure, set a 'htmlFor' and 'event' properties, so that\r\n  // script code will be installed as 'onclick' handler for the\r\n  // script object. Later, onreadystatechange, manually execute this\r\n  // code. FF and Chrome doesn't work with 'event' and 'htmlFor'\r\n  // set. For reference see:\r\n  //   http://jaubourg.net/2010/07/loading-script-as-onclick-handler-of.html\r\n  // Also, read on that about script ordering:\r\n  //   http://wiki.whatwg.org/wiki/Dynamic_Script_Execution_Order\r\n  if (typeof script.async === 'undefined' && global.document.attachEvent) {\r\n    // According to mozilla docs, in recent browsers script.async defaults\r\n    // to 'true', so we may use it to detect a good browser:\r\n    // https://developer.mozilla.org/en/HTML/Element/script\r\n    if (!browser.isOpera()) {\r\n      // Naively assume we're in IE\r\n      try {\r\n        script.htmlFor = script.id;\r\n        script.event = 'onclick';\r\n      } catch (x) {\r\n        // intentionally empty\r\n      }\r\n      script.async = true;\r\n    } else {\r\n      // Opera, second sync script hack\r\n      script2 = this.script2 = global.document.createElement('script');\r\n      script2.text = \"try{var a = document.getElementById('\" + script.id + \"'); if(a)a.onerror();}catch(x){};\";\r\n      script.async = script2.async = false;\r\n    }\r\n  }\r\n  if (typeof script.async !== 'undefined') {\r\n    script.async = true;\r\n  }\r\n\r\n  var head = global.document.getElementsByTagName('head')[0];\r\n  head.insertBefore(script, head.firstChild);\r\n  if (script2) {\r\n    head.insertBefore(script2, head.firstChild);\r\n  }\r\n};\r\n\r\nmodule.exports = JsonpReceiver;\r\n\r\n}).call(this,{ env: {} },typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\r\n\r\n},{\"../../utils/browser\":44,\"../../utils/iframe\":47,\"../../utils/random\":50,\"../../utils/url\":52,\"debug\":54,\"events\":3,\"inherits\":56}],32:[function(require,module,exports){\r\n(function (process){\r\n'use strict';\r\n\r\nvar inherits = require('inherits')\r\n  , EventEmitter = require('events').EventEmitter\r\n  ;\r\n\r\nvar debug = function() {};\r\nif (process.env.NODE_ENV !== 'production') {\r\n  debug = require('debug')('sockjs-client:receiver:xhr');\r\n}\r\n\r\nfunction XhrReceiver(url, AjaxObject) {\r\n  debug(url);\r\n  EventEmitter.call(this);\r\n  var self = this;\r\n\r\n  this.bufferPosition = 0;\r\n\r\n  this.xo = new AjaxObject('POST', url, null);\r\n  this.xo.on('chunk', this._chunkHandler.bind(this));\r\n  this.xo.once('finish', function(status, text) {\r\n    debug('finish', status, text);\r\n    self._chunkHandler(status, text);\r\n    self.xo = null;\r\n    var reason = status === 200 ? 'network' : 'permanent';\r\n    debug('close', reason);\r\n    self.emit('close', null, reason);\r\n    self._cleanup();\r\n  });\r\n}\r\n\r\ninherits(XhrReceiver, EventEmitter);\r\n\r\nXhrReceiver.prototype._chunkHandler = function(status, text) {\r\n  debug('_chunkHandler', status);\r\n  if (status !== 200 || !text) {\r\n    return;\r\n  }\r\n\r\n  for (var idx = -1; ; this.bufferPosition += idx + 1) {\r\n    var buf = text.slice(this.bufferPosition);\r\n    idx = buf.indexOf('\\n');\r\n    if (idx === -1) {\r\n      break;\r\n    }\r\n    var msg = buf.slice(0, idx);\r\n    if (msg) {\r\n      debug('message', msg);\r\n      this.emit('message', msg);\r\n    }\r\n  }\r\n};\r\n\r\nXhrReceiver.prototype._cleanup = function() {\r\n  debug('_cleanup');\r\n  this.removeAllListeners();\r\n};\r\n\r\nXhrReceiver.prototype.abort = function() {\r\n  debug('abort');\r\n  if (this.xo) {\r\n    this.xo.close();\r\n    debug('close');\r\n    this.emit('close', null, 'user');\r\n    this.xo = null;\r\n  }\r\n  this._cleanup();\r\n};\r\n\r\nmodule.exports = XhrReceiver;\r\n\r\n}).call(this,{ env: {} })\r\n\r\n},{\"debug\":54,\"events\":3,\"inherits\":56}],33:[function(require,module,exports){\r\n(function (process,global){\r\n'use strict';\r\n\r\nvar random = require('../../utils/random')\r\n  , urlUtils = require('../../utils/url')\r\n  ;\r\n\r\nvar debug = function() {};\r\nif (process.env.NODE_ENV !== 'production') {\r\n  debug = require('debug')('sockjs-client:sender:jsonp');\r\n}\r\n\r\nvar form, area;\r\n\r\nfunction createIframe(id) {\r\n  debug('createIframe', id);\r\n  try {\r\n    // ie6 dynamic iframes with target=\"\" support (thanks Chris Lambacher)\r\n    return global.document.createElement('<iframe name=\"' + id + '\">');\r\n  } catch (x) {\r\n    var iframe = global.document.createElement('iframe');\r\n    iframe.name = id;\r\n    return iframe;\r\n  }\r\n}\r\n\r\nfunction createForm() {\r\n  debug('createForm');\r\n  form = global.document.createElement('form');\r\n  form.style.display = 'none';\r\n  form.style.position = 'absolute';\r\n  form.method = 'POST';\r\n  form.enctype = 'application/x-www-form-urlencoded';\r\n  form.acceptCharset = 'UTF-8';\r\n\r\n  area = global.document.createElement('textarea');\r\n  area.name = 'd';\r\n  form.appendChild(area);\r\n\r\n  global.document.body.appendChild(form);\r\n}\r\n\r\nmodule.exports = function(url, payload, callback) {\r\n  debug(url, payload);\r\n  if (!form) {\r\n    createForm();\r\n  }\r\n  var id = 'a' + random.string(8);\r\n  form.target = id;\r\n  form.action = urlUtils.addQuery(urlUtils.addPath(url, '/jsonp_send'), 'i=' + id);\r\n\r\n  var iframe = createIframe(id);\r\n  iframe.id = id;\r\n  iframe.style.display = 'none';\r\n  form.appendChild(iframe);\r\n\r\n  try {\r\n    area.value = payload;\r\n  } catch (e) {\r\n    // seriously broken browsers get here\r\n  }\r\n  form.submit();\r\n\r\n  var completed = function(err) {\r\n    debug('completed', id, err);\r\n    if (!iframe.onerror) {\r\n      return;\r\n    }\r\n    iframe.onreadystatechange = iframe.onerror = iframe.onload = null;\r\n    // Opera mini doesn't like if we GC iframe\r\n    // immediately, thus this timeout.\r\n    setTimeout(function() {\r\n      debug('cleaning up', id);\r\n      iframe.parentNode.removeChild(iframe);\r\n      iframe = null;\r\n    }, 500);\r\n    area.value = '';\r\n    // It is not possible to detect if the iframe succeeded or\r\n    // failed to submit our form.\r\n    callback(err);\r\n  };\r\n  iframe.onerror = function() {\r\n    debug('onerror', id);\r\n    completed();\r\n  };\r\n  iframe.onload = function() {\r\n    debug('onload', id);\r\n    completed();\r\n  };\r\n  iframe.onreadystatechange = function(e) {\r\n    debug('onreadystatechange', id, iframe.readyState, e);\r\n    if (iframe.readyState === 'complete') {\r\n      completed();\r\n    }\r\n  };\r\n  return function() {\r\n    debug('aborted', id);\r\n    completed(new Error('Aborted'));\r\n  };\r\n};\r\n\r\n}).call(this,{ env: {} },typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\r\n\r\n},{\"../../utils/random\":50,\"../../utils/url\":52,\"debug\":54}],34:[function(require,module,exports){\r\n(function (process,global){\r\n'use strict';\r\n\r\nvar EventEmitter = require('events').EventEmitter\r\n  , inherits = require('inherits')\r\n  , eventUtils = require('../../utils/event')\r\n  , browser = require('../../utils/browser')\r\n  , urlUtils = require('../../utils/url')\r\n  ;\r\n\r\nvar debug = function() {};\r\nif (process.env.NODE_ENV !== 'production') {\r\n  debug = require('debug')('sockjs-client:sender:xdr');\r\n}\r\n\r\n// References:\r\n//   http://ajaxian.com/archives/100-line-ajax-wrapper\r\n//   http://msdn.microsoft.com/en-us/library/cc288060(v=VS.85).aspx\r\n\r\nfunction XDRObject(method, url, payload) {\r\n  debug(method, url);\r\n  var self = this;\r\n  EventEmitter.call(this);\r\n\r\n  setTimeout(function() {\r\n    self._start(method, url, payload);\r\n  }, 0);\r\n}\r\n\r\ninherits(XDRObject, EventEmitter);\r\n\r\nXDRObject.prototype._start = function(method, url, payload) {\r\n  debug('_start');\r\n  var self = this;\r\n  var xdr = new global.XDomainRequest();\r\n  // IE caches even POSTs\r\n  url = urlUtils.addQuery(url, 't=' + (+new Date()));\r\n\r\n  xdr.onerror = function() {\r\n    debug('onerror');\r\n    self._error();\r\n  };\r\n  xdr.ontimeout = function() {\r\n    debug('ontimeout');\r\n    self._error();\r\n  };\r\n  xdr.onprogress = function() {\r\n    debug('progress', xdr.responseText);\r\n    self.emit('chunk', 200, xdr.responseText);\r\n  };\r\n  xdr.onload = function() {\r\n    debug('load');\r\n    self.emit('finish', 200, xdr.responseText);\r\n    self._cleanup(false);\r\n  };\r\n  this.xdr = xdr;\r\n  this.unloadRef = eventUtils.unloadAdd(function() {\r\n    self._cleanup(true);\r\n  });\r\n  try {\r\n    // Fails with AccessDenied if port number is bogus\r\n    this.xdr.open(method, url);\r\n    if (this.timeout) {\r\n      this.xdr.timeout = this.timeout;\r\n    }\r\n    this.xdr.send(payload);\r\n  } catch (x) {\r\n    this._error();\r\n  }\r\n};\r\n\r\nXDRObject.prototype._error = function() {\r\n  this.emit('finish', 0, '');\r\n  this._cleanup(false);\r\n};\r\n\r\nXDRObject.prototype._cleanup = function(abort) {\r\n  debug('cleanup', abort);\r\n  if (!this.xdr) {\r\n    return;\r\n  }\r\n  this.removeAllListeners();\r\n  eventUtils.unloadDel(this.unloadRef);\r\n\r\n  this.xdr.ontimeout = this.xdr.onerror = this.xdr.onprogress = this.xdr.onload = null;\r\n  if (abort) {\r\n    try {\r\n      this.xdr.abort();\r\n    } catch (x) {\r\n      // intentionally empty\r\n    }\r\n  }\r\n  this.unloadRef = this.xdr = null;\r\n};\r\n\r\nXDRObject.prototype.close = function() {\r\n  debug('close');\r\n  this._cleanup(true);\r\n};\r\n\r\n// IE 8/9 if the request target uses the same scheme - #79\r\nXDRObject.enabled = !!(global.XDomainRequest && browser.hasDomain());\r\n\r\nmodule.exports = XDRObject;\r\n\r\n}).call(this,{ env: {} },typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\r\n\r\n},{\"../../utils/browser\":44,\"../../utils/event\":46,\"../../utils/url\":52,\"debug\":54,\"events\":3,\"inherits\":56}],35:[function(require,module,exports){\r\n'use strict';\r\n\r\nvar inherits = require('inherits')\r\n  , XhrDriver = require('../driver/xhr')\r\n  ;\r\n\r\nfunction XHRCorsObject(method, url, payload, opts) {\r\n  XhrDriver.call(this, method, url, payload, opts);\r\n}\r\n\r\ninherits(XHRCorsObject, XhrDriver);\r\n\r\nXHRCorsObject.enabled = XhrDriver.enabled && XhrDriver.supportsCORS;\r\n\r\nmodule.exports = XHRCorsObject;\r\n\r\n},{\"../driver/xhr\":17,\"inherits\":56}],36:[function(require,module,exports){\r\n'use strict';\r\n\r\nvar EventEmitter = require('events').EventEmitter\r\n  , inherits = require('inherits')\r\n  ;\r\n\r\nfunction XHRFake(/* method, url, payload, opts */) {\r\n  var self = this;\r\n  EventEmitter.call(this);\r\n\r\n  this.to = setTimeout(function() {\r\n    self.emit('finish', 200, '{}');\r\n  }, XHRFake.timeout);\r\n}\r\n\r\ninherits(XHRFake, EventEmitter);\r\n\r\nXHRFake.prototype.close = function() {\r\n  clearTimeout(this.to);\r\n};\r\n\r\nXHRFake.timeout = 2000;\r\n\r\nmodule.exports = XHRFake;\r\n\r\n},{\"events\":3,\"inherits\":56}],37:[function(require,module,exports){\r\n'use strict';\r\n\r\nvar inherits = require('inherits')\r\n  , XhrDriver = require('../driver/xhr')\r\n  ;\r\n\r\nfunction XHRLocalObject(method, url, payload /*, opts */) {\r\n  XhrDriver.call(this, method, url, payload, {\r\n    noCredentials: true\r\n  });\r\n}\r\n\r\ninherits(XHRLocalObject, XhrDriver);\r\n\r\nXHRLocalObject.enabled = XhrDriver.enabled;\r\n\r\nmodule.exports = XHRLocalObject;\r\n\r\n},{\"../driver/xhr\":17,\"inherits\":56}],38:[function(require,module,exports){\r\n(function (process){\r\n'use strict';\r\n\r\nvar utils = require('../utils/event')\r\n  , urlUtils = require('../utils/url')\r\n  , inherits = require('inherits')\r\n  , EventEmitter = require('events').EventEmitter\r\n  , WebsocketDriver = require('./driver/websocket')\r\n  ;\r\n\r\nvar debug = function() {};\r\nif (process.env.NODE_ENV !== 'production') {\r\n  debug = require('debug')('sockjs-client:websocket');\r\n}\r\n\r\nfunction WebSocketTransport(transUrl, ignore, options) {\r\n  if (!WebSocketTransport.enabled()) {\r\n    throw new Error('Transport created when disabled');\r\n  }\r\n\r\n  EventEmitter.call(this);\r\n  debug('constructor', transUrl);\r\n\r\n  var self = this;\r\n  var url = urlUtils.addPath(transUrl, '/websocket');\r\n  if (url.slice(0, 5) === 'https') {\r\n    url = 'wss' + url.slice(5);\r\n  } else {\r\n    url = 'ws' + url.slice(4);\r\n  }\r\n  this.url = url;\r\n\r\n  this.ws = new WebsocketDriver(this.url, [], options);\r\n  this.ws.onmessage = function(e) {\r\n    debug('message event', e.data);\r\n    self.emit('message', e.data);\r\n  };\r\n  // Firefox has an interesting bug. If a websocket connection is\r\n  // created after onunload, it stays alive even when user\r\n  // navigates away from the page. In such situation let's lie -\r\n  // let's not open the ws connection at all. See:\r\n  // https://github.com/sockjs/sockjs-client/issues/28\r\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=696085\r\n  this.unloadRef = utils.unloadAdd(function() {\r\n    debug('unload');\r\n    self.ws.close();\r\n  });\r\n  this.ws.onclose = function(e) {\r\n    debug('close event', e.code, e.reason);\r\n    self.emit('close', e.code, e.reason);\r\n    self._cleanup();\r\n  };\r\n  this.ws.onerror = function(e) {\r\n    debug('error event', e);\r\n    self.emit('close', 1006, 'WebSocket connection broken');\r\n    self._cleanup();\r\n  };\r\n}\r\n\r\ninherits(WebSocketTransport, EventEmitter);\r\n\r\nWebSocketTransport.prototype.send = function(data) {\r\n  var msg = '[' + data + ']';\r\n  debug('send', msg);\r\n  this.ws.send(msg);\r\n};\r\n\r\nWebSocketTransport.prototype.close = function() {\r\n  debug('close');\r\n  var ws = this.ws;\r\n  this._cleanup();\r\n  if (ws) {\r\n    ws.close();\r\n  }\r\n};\r\n\r\nWebSocketTransport.prototype._cleanup = function() {\r\n  debug('_cleanup');\r\n  var ws = this.ws;\r\n  if (ws) {\r\n    ws.onmessage = ws.onclose = ws.onerror = null;\r\n  }\r\n  utils.unloadDel(this.unloadRef);\r\n  this.unloadRef = this.ws = null;\r\n  this.removeAllListeners();\r\n};\r\n\r\nWebSocketTransport.enabled = function() {\r\n  debug('enabled');\r\n  return !!WebsocketDriver;\r\n};\r\nWebSocketTransport.transportName = 'websocket';\r\n\r\n// In theory, ws should require 1 round trip. But in chrome, this is\r\n// not very stable over SSL. Most likely a ws connection requires a\r\n// separate SSL connection, in which case 2 round trips are an\r\n// absolute minumum.\r\nWebSocketTransport.roundTrips = 2;\r\n\r\nmodule.exports = WebSocketTransport;\r\n\r\n}).call(this,{ env: {} })\r\n\r\n},{\"../utils/event\":46,\"../utils/url\":52,\"./driver/websocket\":19,\"debug\":54,\"events\":3,\"inherits\":56}],39:[function(require,module,exports){\r\n'use strict';\r\n\r\nvar inherits = require('inherits')\r\n  , AjaxBasedTransport = require('./lib/ajax-based')\r\n  , XdrStreamingTransport = require('./xdr-streaming')\r\n  , XhrReceiver = require('./receiver/xhr')\r\n  , XDRObject = require('./sender/xdr')\r\n  ;\r\n\r\nfunction XdrPollingTransport(transUrl) {\r\n  if (!XDRObject.enabled) {\r\n    throw new Error('Transport created when disabled');\r\n  }\r\n  AjaxBasedTransport.call(this, transUrl, '/xhr', XhrReceiver, XDRObject);\r\n}\r\n\r\ninherits(XdrPollingTransport, AjaxBasedTransport);\r\n\r\nXdrPollingTransport.enabled = XdrStreamingTransport.enabled;\r\nXdrPollingTransport.transportName = 'xdr-polling';\r\nXdrPollingTransport.roundTrips = 2; // preflight, ajax\r\n\r\nmodule.exports = XdrPollingTransport;\r\n\r\n},{\"./lib/ajax-based\":24,\"./receiver/xhr\":32,\"./sender/xdr\":34,\"./xdr-streaming\":40,\"inherits\":56}],40:[function(require,module,exports){\r\n'use strict';\r\n\r\nvar inherits = require('inherits')\r\n  , AjaxBasedTransport = require('./lib/ajax-based')\r\n  , XhrReceiver = require('./receiver/xhr')\r\n  , XDRObject = require('./sender/xdr')\r\n  ;\r\n\r\n// According to:\r\n//   http://stackoverflow.com/questions/1641507/detect-browser-support-for-cross-domain-xmlhttprequests\r\n//   http://hacks.mozilla.org/2009/07/cross-site-xmlhttprequest-with-cors/\r\n\r\nfunction XdrStreamingTransport(transUrl) {\r\n  if (!XDRObject.enabled) {\r\n    throw new Error('Transport created when disabled');\r\n  }\r\n  AjaxBasedTransport.call(this, transUrl, '/xhr_streaming', XhrReceiver, XDRObject);\r\n}\r\n\r\ninherits(XdrStreamingTransport, AjaxBasedTransport);\r\n\r\nXdrStreamingTransport.enabled = function(info) {\r\n  if (info.cookie_needed || info.nullOrigin) {\r\n    return false;\r\n  }\r\n  return XDRObject.enabled && info.sameScheme;\r\n};\r\n\r\nXdrStreamingTransport.transportName = 'xdr-streaming';\r\nXdrStreamingTransport.roundTrips = 2; // preflight, ajax\r\n\r\nmodule.exports = XdrStreamingTransport;\r\n\r\n},{\"./lib/ajax-based\":24,\"./receiver/xhr\":32,\"./sender/xdr\":34,\"inherits\":56}],41:[function(require,module,exports){\r\n'use strict';\r\n\r\nvar inherits = require('inherits')\r\n  , AjaxBasedTransport = require('./lib/ajax-based')\r\n  , XhrReceiver = require('./receiver/xhr')\r\n  , XHRCorsObject = require('./sender/xhr-cors')\r\n  , XHRLocalObject = require('./sender/xhr-local')\r\n  ;\r\n\r\nfunction XhrPollingTransport(transUrl) {\r\n  if (!XHRLocalObject.enabled && !XHRCorsObject.enabled) {\r\n    throw new Error('Transport created when disabled');\r\n  }\r\n  AjaxBasedTransport.call(this, transUrl, '/xhr', XhrReceiver, XHRCorsObject);\r\n}\r\n\r\ninherits(XhrPollingTransport, AjaxBasedTransport);\r\n\r\nXhrPollingTransport.enabled = function(info) {\r\n  if (info.nullOrigin) {\r\n    return false;\r\n  }\r\n\r\n  if (XHRLocalObject.enabled && info.sameOrigin) {\r\n    return true;\r\n  }\r\n  return XHRCorsObject.enabled;\r\n};\r\n\r\nXhrPollingTransport.transportName = 'xhr-polling';\r\nXhrPollingTransport.roundTrips = 2; // preflight, ajax\r\n\r\nmodule.exports = XhrPollingTransport;\r\n\r\n},{\"./lib/ajax-based\":24,\"./receiver/xhr\":32,\"./sender/xhr-cors\":35,\"./sender/xhr-local\":37,\"inherits\":56}],42:[function(require,module,exports){\r\n(function (global){\r\n'use strict';\r\n\r\nvar inherits = require('inherits')\r\n  , AjaxBasedTransport = require('./lib/ajax-based')\r\n  , XhrReceiver = require('./receiver/xhr')\r\n  , XHRCorsObject = require('./sender/xhr-cors')\r\n  , XHRLocalObject = require('./sender/xhr-local')\r\n  , browser = require('../utils/browser')\r\n  ;\r\n\r\nfunction XhrStreamingTransport(transUrl) {\r\n  if (!XHRLocalObject.enabled && !XHRCorsObject.enabled) {\r\n    throw new Error('Transport created when disabled');\r\n  }\r\n  AjaxBasedTransport.call(this, transUrl, '/xhr_streaming', XhrReceiver, XHRCorsObject);\r\n}\r\n\r\ninherits(XhrStreamingTransport, AjaxBasedTransport);\r\n\r\nXhrStreamingTransport.enabled = function(info) {\r\n  if (info.nullOrigin) {\r\n    return false;\r\n  }\r\n  // Opera doesn't support xhr-streaming #60\r\n  // But it might be able to #92\r\n  if (browser.isOpera()) {\r\n    return false;\r\n  }\r\n\r\n  return XHRCorsObject.enabled;\r\n};\r\n\r\nXhrStreamingTransport.transportName = 'xhr-streaming';\r\nXhrStreamingTransport.roundTrips = 2; // preflight, ajax\r\n\r\n// Safari gets confused when a streaming ajax request is started\r\n// before onload. This causes the load indicator to spin indefinetely.\r\n// Only require body when used in a browser\r\nXhrStreamingTransport.needBody = !!global.document;\r\n\r\nmodule.exports = XhrStreamingTransport;\r\n\r\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\r\n\r\n},{\"../utils/browser\":44,\"./lib/ajax-based\":24,\"./receiver/xhr\":32,\"./sender/xhr-cors\":35,\"./sender/xhr-local\":37,\"inherits\":56}],43:[function(require,module,exports){\r\n(function (global){\r\n'use strict';\r\n\r\nif (global.crypto && global.crypto.getRandomValues) {\r\n  module.exports.randomBytes = function(length) {\r\n    var bytes = new Uint8Array(length);\r\n    global.crypto.getRandomValues(bytes);\r\n    return bytes;\r\n  };\r\n} else {\r\n  module.exports.randomBytes = function(length) {\r\n    var bytes = new Array(length);\r\n    for (var i = 0; i < length; i++) {\r\n      bytes[i] = Math.floor(Math.random() * 256);\r\n    }\r\n    return bytes;\r\n  };\r\n}\r\n\r\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\r\n\r\n},{}],44:[function(require,module,exports){\r\n(function (global){\r\n'use strict';\r\n\r\nmodule.exports = {\r\n  isOpera: function() {\r\n    return global.navigator &&\r\n      /opera/i.test(global.navigator.userAgent);\r\n  }\r\n\r\n, isKonqueror: function() {\r\n    return global.navigator &&\r\n      /konqueror/i.test(global.navigator.userAgent);\r\n  }\r\n\r\n  // #187 wrap document.domain in try/catch because of WP8 from file:///\r\n, hasDomain: function () {\r\n    // non-browser client always has a domain\r\n    if (!global.document) {\r\n      return true;\r\n    }\r\n\r\n    try {\r\n      return !!global.document.domain;\r\n    } catch (e) {\r\n      return false;\r\n    }\r\n  }\r\n};\r\n\r\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\r\n\r\n},{}],45:[function(require,module,exports){\r\n'use strict';\r\n\r\nvar JSON3 = require('json3');\r\n\r\n// Some extra characters that Chrome gets wrong, and substitutes with\r\n// something else on the wire.\r\n// eslint-disable-next-line no-control-regex\r\nvar extraEscapable = /[\\x00-\\x1f\\ud800-\\udfff\\ufffe\\uffff\\u0300-\\u0333\\u033d-\\u0346\\u034a-\\u034c\\u0350-\\u0352\\u0357-\\u0358\\u035c-\\u0362\\u0374\\u037e\\u0387\\u0591-\\u05af\\u05c4\\u0610-\\u0617\\u0653-\\u0654\\u0657-\\u065b\\u065d-\\u065e\\u06df-\\u06e2\\u06eb-\\u06ec\\u0730\\u0732-\\u0733\\u0735-\\u0736\\u073a\\u073d\\u073f-\\u0741\\u0743\\u0745\\u0747\\u07eb-\\u07f1\\u0951\\u0958-\\u095f\\u09dc-\\u09dd\\u09df\\u0a33\\u0a36\\u0a59-\\u0a5b\\u0a5e\\u0b5c-\\u0b5d\\u0e38-\\u0e39\\u0f43\\u0f4d\\u0f52\\u0f57\\u0f5c\\u0f69\\u0f72-\\u0f76\\u0f78\\u0f80-\\u0f83\\u0f93\\u0f9d\\u0fa2\\u0fa7\\u0fac\\u0fb9\\u1939-\\u193a\\u1a17\\u1b6b\\u1cda-\\u1cdb\\u1dc0-\\u1dcf\\u1dfc\\u1dfe\\u1f71\\u1f73\\u1f75\\u1f77\\u1f79\\u1f7b\\u1f7d\\u1fbb\\u1fbe\\u1fc9\\u1fcb\\u1fd3\\u1fdb\\u1fe3\\u1feb\\u1fee-\\u1fef\\u1ff9\\u1ffb\\u1ffd\\u2000-\\u2001\\u20d0-\\u20d1\\u20d4-\\u20d7\\u20e7-\\u20e9\\u2126\\u212a-\\u212b\\u2329-\\u232a\\u2adc\\u302b-\\u302c\\uaab2-\\uaab3\\uf900-\\ufa0d\\ufa10\\ufa12\\ufa15-\\ufa1e\\ufa20\\ufa22\\ufa25-\\ufa26\\ufa2a-\\ufa2d\\ufa30-\\ufa6d\\ufa70-\\ufad9\\ufb1d\\ufb1f\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40-\\ufb41\\ufb43-\\ufb44\\ufb46-\\ufb4e\\ufff0-\\uffff]/g\r\n  , extraLookup;\r\n\r\n// This may be quite slow, so let's delay until user actually uses bad\r\n// characters.\r\nvar unrollLookup = function(escapable) {\r\n  var i;\r\n  var unrolled = {};\r\n  var c = [];\r\n  for (i = 0; i < 65536; i++) {\r\n    c.push( String.fromCharCode(i) );\r\n  }\r\n  escapable.lastIndex = 0;\r\n  c.join('').replace(escapable, function(a) {\r\n    unrolled[ a ] = '\\\\u' + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);\r\n    return '';\r\n  });\r\n  escapable.lastIndex = 0;\r\n  return unrolled;\r\n};\r\n\r\n// Quote string, also taking care of unicode characters that browsers\r\n// often break. Especially, take care of unicode surrogates:\r\n// http://en.wikipedia.org/wiki/Mapping_of_Unicode_characters#Surrogates\r\nmodule.exports = {\r\n  quote: function(string) {\r\n    var quoted = JSON3.stringify(string);\r\n\r\n    // In most cases this should be very fast and good enough.\r\n    extraEscapable.lastIndex = 0;\r\n    if (!extraEscapable.test(quoted)) {\r\n      return quoted;\r\n    }\r\n\r\n    if (!extraLookup) {\r\n      extraLookup = unrollLookup(extraEscapable);\r\n    }\r\n\r\n    return quoted.replace(extraEscapable, function(a) {\r\n      return extraLookup[a];\r\n    });\r\n  }\r\n};\r\n\r\n},{\"json3\":57}],46:[function(require,module,exports){\r\n(function (global){\r\n'use strict';\r\n\r\nvar random = require('./random');\r\n\r\nvar onUnload = {}\r\n  , afterUnload = false\r\n    // detect google chrome packaged apps because they don't allow the 'unload' event\r\n  , isChromePackagedApp = global.chrome && global.chrome.app && global.chrome.app.runtime\r\n  ;\r\n\r\nmodule.exports = {\r\n  attachEvent: function(event, listener) {\r\n    if (typeof global.addEventListener !== 'undefined') {\r\n      global.addEventListener(event, listener, false);\r\n    } else if (global.document && global.attachEvent) {\r\n      // IE quirks.\r\n      // According to: http://stevesouders.com/misc/test-postmessage.php\r\n      // the message gets delivered only to 'document', not 'window'.\r\n      global.document.attachEvent('on' + event, listener);\r\n      // I get 'window' for ie8.\r\n      global.attachEvent('on' + event, listener);\r\n    }\r\n  }\r\n\r\n, detachEvent: function(event, listener) {\r\n    if (typeof global.addEventListener !== 'undefined') {\r\n      global.removeEventListener(event, listener, false);\r\n    } else if (global.document && global.detachEvent) {\r\n      global.document.detachEvent('on' + event, listener);\r\n      global.detachEvent('on' + event, listener);\r\n    }\r\n  }\r\n\r\n, unloadAdd: function(listener) {\r\n    if (isChromePackagedApp) {\r\n      return null;\r\n    }\r\n\r\n    var ref = random.string(8);\r\n    onUnload[ref] = listener;\r\n    if (afterUnload) {\r\n      setTimeout(this.triggerUnloadCallbacks, 0);\r\n    }\r\n    return ref;\r\n  }\r\n\r\n, unloadDel: function(ref) {\r\n    if (ref in onUnload) {\r\n      delete onUnload[ref];\r\n    }\r\n  }\r\n\r\n, triggerUnloadCallbacks: function() {\r\n    for (var ref in onUnload) {\r\n      onUnload[ref]();\r\n      delete onUnload[ref];\r\n    }\r\n  }\r\n};\r\n\r\nvar unloadTriggered = function() {\r\n  if (afterUnload) {\r\n    return;\r\n  }\r\n  afterUnload = true;\r\n  module.exports.triggerUnloadCallbacks();\r\n};\r\n\r\n// 'unload' alone is not reliable in opera within an iframe, but we\r\n// can't use `beforeunload` as IE fires it on javascript: links.\r\nif (!isChromePackagedApp) {\r\n  module.exports.attachEvent('unload', unloadTriggered);\r\n}\r\n\r\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\r\n\r\n},{\"./random\":50}],47:[function(require,module,exports){\r\n(function (process,global){\r\n'use strict';\r\n\r\nvar eventUtils = require('./event')\r\n  , JSON3 = require('json3')\r\n  , browser = require('./browser')\r\n  ;\r\n\r\nvar debug = function() {};\r\nif (process.env.NODE_ENV !== 'production') {\r\n  debug = require('debug')('sockjs-client:utils:iframe');\r\n}\r\n\r\nmodule.exports = {\r\n  WPrefix: '_jp'\r\n, currentWindowId: null\r\n\r\n, polluteGlobalNamespace: function() {\r\n    if (!(module.exports.WPrefix in global)) {\r\n      global[module.exports.WPrefix] = {};\r\n    }\r\n  }\r\n\r\n, postMessage: function(type, data) {\r\n    if (global.parent !== global) {\r\n      global.parent.postMessage(JSON3.stringify({\r\n        windowId: module.exports.currentWindowId\r\n      , type: type\r\n      , data: data || ''\r\n      }), '*');\r\n    } else {\r\n      debug('Cannot postMessage, no parent window.', type, data);\r\n    }\r\n  }\r\n\r\n, createIframe: function(iframeUrl, errorCallback) {\r\n    var iframe = global.document.createElement('iframe');\r\n    var tref, unloadRef;\r\n    var unattach = function() {\r\n      debug('unattach');\r\n      clearTimeout(tref);\r\n      // Explorer had problems with that.\r\n      try {\r\n        iframe.onload = null;\r\n      } catch (x) {\r\n        // intentionally empty\r\n      }\r\n      iframe.onerror = null;\r\n    };\r\n    var cleanup = function() {\r\n      debug('cleanup');\r\n      if (iframe) {\r\n        unattach();\r\n        // This timeout makes chrome fire onbeforeunload event\r\n        // within iframe. Without the timeout it goes straight to\r\n        // onunload.\r\n        setTimeout(function() {\r\n          if (iframe) {\r\n            iframe.parentNode.removeChild(iframe);\r\n          }\r\n          iframe = null;\r\n        }, 0);\r\n        eventUtils.unloadDel(unloadRef);\r\n      }\r\n    };\r\n    var onerror = function(err) {\r\n      debug('onerror', err);\r\n      if (iframe) {\r\n        cleanup();\r\n        errorCallback(err);\r\n      }\r\n    };\r\n    var post = function(msg, origin) {\r\n      debug('post', msg, origin);\r\n      try {\r\n        // When the iframe is not loaded, IE raises an exception\r\n        // on 'contentWindow'.\r\n        setTimeout(function() {\r\n          if (iframe && iframe.contentWindow) {\r\n            iframe.contentWindow.postMessage(msg, origin);\r\n          }\r\n        }, 0);\r\n      } catch (x) {\r\n        // intentionally empty\r\n      }\r\n    };\r\n\r\n    iframe.src = iframeUrl;\r\n    iframe.style.display = 'none';\r\n    iframe.style.position = 'absolute';\r\n    iframe.onerror = function() {\r\n      onerror('onerror');\r\n    };\r\n    iframe.onload = function() {\r\n      debug('onload');\r\n      // `onload` is triggered before scripts on the iframe are\r\n      // executed. Give it few seconds to actually load stuff.\r\n      clearTimeout(tref);\r\n      tref = setTimeout(function() {\r\n        onerror('onload timeout');\r\n      }, 2000);\r\n    };\r\n    global.document.body.appendChild(iframe);\r\n    tref = setTimeout(function() {\r\n      onerror('timeout');\r\n    }, 15000);\r\n    unloadRef = eventUtils.unloadAdd(cleanup);\r\n    return {\r\n      post: post\r\n    , cleanup: cleanup\r\n    , loaded: unattach\r\n    };\r\n  }\r\n\r\n/* eslint no-undef: \"off\", new-cap: \"off\" */\r\n, createHtmlfile: function(iframeUrl, errorCallback) {\r\n    var axo = ['Active'].concat('Object').join('X');\r\n    var doc = new global[axo]('htmlfile');\r\n    var tref, unloadRef;\r\n    var iframe;\r\n    var unattach = function() {\r\n      clearTimeout(tref);\r\n      iframe.onerror = null;\r\n    };\r\n    var cleanup = function() {\r\n      if (doc) {\r\n        unattach();\r\n        eventUtils.unloadDel(unloadRef);\r\n        iframe.parentNode.removeChild(iframe);\r\n        iframe = doc = null;\r\n        CollectGarbage();\r\n      }\r\n    };\r\n    var onerror = function(r) {\r\n      debug('onerror', r);\r\n      if (doc) {\r\n        cleanup();\r\n        errorCallback(r);\r\n      }\r\n    };\r\n    var post = function(msg, origin) {\r\n      try {\r\n        // When the iframe is not loaded, IE raises an exception\r\n        // on 'contentWindow'.\r\n        setTimeout(function() {\r\n          if (iframe && iframe.contentWindow) {\r\n              iframe.contentWindow.postMessage(msg, origin);\r\n          }\r\n        }, 0);\r\n      } catch (x) {\r\n        // intentionally empty\r\n      }\r\n    };\r\n\r\n    doc.open();\r\n    doc.write('<html><s' + 'cript>' +\r\n              'document.domain=\"' + global.document.domain + '\";' +\r\n              '</s' + 'cript></html>');\r\n    doc.close();\r\n    doc.parentWindow[module.exports.WPrefix] = global[module.exports.WPrefix];\r\n    var c = doc.createElement('div');\r\n    doc.body.appendChild(c);\r\n    iframe = doc.createElement('iframe');\r\n    c.appendChild(iframe);\r\n    iframe.src = iframeUrl;\r\n    iframe.onerror = function() {\r\n      onerror('onerror');\r\n    };\r\n    tref = setTimeout(function() {\r\n      onerror('timeout');\r\n    }, 15000);\r\n    unloadRef = eventUtils.unloadAdd(cleanup);\r\n    return {\r\n      post: post\r\n    , cleanup: cleanup\r\n    , loaded: unattach\r\n    };\r\n  }\r\n};\r\n\r\nmodule.exports.iframeEnabled = false;\r\nif (global.document) {\r\n  // postMessage misbehaves in konqueror 4.6.5 - the messages are delivered with\r\n  // huge delay, or not at all.\r\n  module.exports.iframeEnabled = (typeof global.postMessage === 'function' ||\r\n    typeof global.postMessage === 'object') && (!browser.isKonqueror());\r\n}\r\n\r\n}).call(this,{ env: {} },typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\r\n\r\n},{\"./browser\":44,\"./event\":46,\"debug\":54,\"json3\":57}],48:[function(require,module,exports){\r\n(function (global){\r\n'use strict';\r\n\r\nvar logObject = {};\r\n['log', 'debug', 'warn'].forEach(function (level) {\r\n  var levelExists;\r\n\r\n  try {\r\n    levelExists = global.console && global.console[level] && global.console[level].apply;\r\n  } catch(e) {\r\n    // do nothing\r\n  }\r\n\r\n  logObject[level] = levelExists ? function () {\r\n    return global.console[level].apply(global.console, arguments);\r\n  } : (level === 'log' ? function () {} : logObject.log);\r\n});\r\n\r\nmodule.exports = logObject;\r\n\r\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\r\n\r\n},{}],49:[function(require,module,exports){\r\n'use strict';\r\n\r\nmodule.exports = {\r\n  isObject: function(obj) {\r\n    var type = typeof obj;\r\n    return type === 'function' || type === 'object' && !!obj;\r\n  }\r\n\r\n, extend: function(obj) {\r\n    if (!this.isObject(obj)) {\r\n      return obj;\r\n    }\r\n    var source, prop;\r\n    for (var i = 1, length = arguments.length; i < length; i++) {\r\n      source = arguments[i];\r\n      for (prop in source) {\r\n        if (Object.prototype.hasOwnProperty.call(source, prop)) {\r\n          obj[prop] = source[prop];\r\n        }\r\n      }\r\n    }\r\n    return obj;\r\n  }\r\n};\r\n\r\n},{}],50:[function(require,module,exports){\r\n'use strict';\r\n\r\n/* global crypto:true */\r\nvar crypto = require('crypto');\r\n\r\n// This string has length 32, a power of 2, so the modulus doesn't introduce a\r\n// bias.\r\nvar _randomStringChars = 'abcdefghijklmnopqrstuvwxyz012345';\r\nmodule.exports = {\r\n  string: function(length) {\r\n    var max = _randomStringChars.length;\r\n    var bytes = crypto.randomBytes(length);\r\n    var ret = [];\r\n    for (var i = 0; i < length; i++) {\r\n      ret.push(_randomStringChars.substr(bytes[i] % max, 1));\r\n    }\r\n    return ret.join('');\r\n  }\r\n\r\n, number: function(max) {\r\n    return Math.floor(Math.random() * max);\r\n  }\r\n\r\n, numberString: function(max) {\r\n    var t = ('' + (max - 1)).length;\r\n    var p = new Array(t + 1).join('0');\r\n    return (p + this.number(max)).slice(-t);\r\n  }\r\n};\r\n\r\n},{\"crypto\":43}],51:[function(require,module,exports){\r\n(function (process){\r\n'use strict';\r\n\r\nvar debug = function() {};\r\nif (process.env.NODE_ENV !== 'production') {\r\n  debug = require('debug')('sockjs-client:utils:transport');\r\n}\r\n\r\nmodule.exports = function(availableTransports) {\r\n  return {\r\n    filterToEnabled: function(transportsWhitelist, info) {\r\n      var transports = {\r\n        main: []\r\n      , facade: []\r\n      };\r\n      if (!transportsWhitelist) {\r\n        transportsWhitelist = [];\r\n      } else if (typeof transportsWhitelist === 'string') {\r\n        transportsWhitelist = [transportsWhitelist];\r\n      }\r\n\r\n      availableTransports.forEach(function(trans) {\r\n        if (!trans) {\r\n          return;\r\n        }\r\n\r\n        if (trans.transportName === 'websocket' && info.websocket === false) {\r\n          debug('disabled from server', 'websocket');\r\n          return;\r\n        }\r\n\r\n        if (transportsWhitelist.length &&\r\n            transportsWhitelist.indexOf(trans.transportName) === -1) {\r\n          debug('not in whitelist', trans.transportName);\r\n          return;\r\n        }\r\n\r\n        if (trans.enabled(info)) {\r\n          debug('enabled', trans.transportName);\r\n          transports.main.push(trans);\r\n          if (trans.facadeTransport) {\r\n            transports.facade.push(trans.facadeTransport);\r\n          }\r\n        } else {\r\n          debug('disabled', trans.transportName);\r\n        }\r\n      });\r\n      return transports;\r\n    }\r\n  };\r\n};\r\n\r\n}).call(this,{ env: {} })\r\n\r\n},{\"debug\":54}],52:[function(require,module,exports){\r\n(function (process){\r\n'use strict';\r\n\r\nvar URL = require('url-parse');\r\n\r\nvar debug = function() {};\r\nif (process.env.NODE_ENV !== 'production') {\r\n  debug = require('debug')('sockjs-client:utils:url');\r\n}\r\n\r\nmodule.exports = {\r\n  getOrigin: function(url) {\r\n    if (!url) {\r\n      return null;\r\n    }\r\n\r\n    var p = new URL(url);\r\n    if (p.protocol === 'file:') {\r\n      return null;\r\n    }\r\n\r\n    var port = p.port;\r\n    if (!port) {\r\n      port = (p.protocol === 'https:') ? '443' : '80';\r\n    }\r\n\r\n    return p.protocol + '//' + p.hostname + ':' + port;\r\n  }\r\n\r\n, isOriginEqual: function(a, b) {\r\n    var res = this.getOrigin(a) === this.getOrigin(b);\r\n    debug('same', a, b, res);\r\n    return res;\r\n  }\r\n\r\n, isSchemeEqual: function(a, b) {\r\n    return (a.split(':')[0] === b.split(':')[0]);\r\n  }\r\n\r\n, addPath: function (url, path) {\r\n    var qs = url.split('?');\r\n    return qs[0] + path + (qs[1] ? '?' + qs[1] : '');\r\n  }\r\n\r\n, addQuery: function (url, q) {\r\n    return url + (url.indexOf('?') === -1 ? ('?' + q) : ('&' + q));\r\n  }\r\n};\r\n\r\n}).call(this,{ env: {} })\r\n\r\n},{\"debug\":54,\"url-parse\":61}],53:[function(require,module,exports){\r\nmodule.exports = '1.1.2';\r\n\r\n},{}],54:[function(require,module,exports){\r\n(function (process){\r\n/**\r\n * This is the web browser implementation of `debug()`.\r\n *\r\n * Expose `debug()` as the module.\r\n */\r\n\r\nexports = module.exports = require('./debug');\r\nexports.log = log;\r\nexports.formatArgs = formatArgs;\r\nexports.save = save;\r\nexports.load = load;\r\nexports.useColors = useColors;\r\nexports.storage = 'undefined' != typeof chrome\r\n               && 'undefined' != typeof chrome.storage\r\n                  ? chrome.storage.local\r\n                  : localstorage();\r\n\r\n/**\r\n * Colors.\r\n */\r\n\r\nexports.colors = [\r\n  'lightseagreen',\r\n  'forestgreen',\r\n  'goldenrod',\r\n  'dodgerblue',\r\n  'darkorchid',\r\n  'crimson'\r\n];\r\n\r\n/**\r\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\r\n * and the Firebug extension (any Firefox version) are known\r\n * to support \"%c\" CSS customizations.\r\n *\r\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\r\n */\r\n\r\nfunction useColors() {\r\n  // NB: In an Electron preload script, document will be defined but not fully\r\n  // initialized. Since we know we're in Chrome, we'll just detect this case\r\n  // explicitly\r\n  if (typeof window !== 'undefined' && window && typeof window.process !== 'undefined' && window.process.type === 'renderer') {\r\n    return true;\r\n  }\r\n\r\n  // is webkit? http://stackoverflow.com/a/16459606/376773\r\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\r\n  return (typeof document !== 'undefined' && document && 'WebkitAppearance' in document.documentElement.style) ||\r\n    // is firebug? http://stackoverflow.com/a/398120/376773\r\n    (typeof window !== 'undefined' && window && window.console && (console.firebug || (console.exception && console.table))) ||\r\n    // is firefox >= v31?\r\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\r\n    (typeof navigator !== 'undefined' && navigator && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\r\n    // double check webkit in userAgent just in case we are in a worker\r\n    (typeof navigator !== 'undefined' && navigator && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\r\n}\r\n\r\n/**\r\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\r\n */\r\n\r\nexports.formatters.j = function(v) {\r\n  try {\r\n    return JSON.stringify(v);\r\n  } catch (err) {\r\n    return '[UnexpectedJSONParseError]: ' + err.message;\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * Colorize log arguments if enabled.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction formatArgs(args) {\r\n  var useColors = this.useColors;\r\n\r\n  args[0] = (useColors ? '%c' : '')\r\n    + this.namespace\r\n    + (useColors ? ' %c' : ' ')\r\n    + args[0]\r\n    + (useColors ? '%c ' : ' ')\r\n    + '+' + exports.humanize(this.diff);\r\n\r\n  if (!useColors) return;\r\n\r\n  var c = 'color: ' + this.color;\r\n  args.splice(1, 0, c, 'color: inherit')\r\n\r\n  // the final \"%c\" is somewhat tricky, because there could be other\r\n  // arguments passed either before or after the %c, so we need to\r\n  // figure out the correct index to insert the CSS into\r\n  var index = 0;\r\n  var lastC = 0;\r\n  args[0].replace(/%[a-zA-Z%]/g, function(match) {\r\n    if ('%%' === match) return;\r\n    index++;\r\n    if ('%c' === match) {\r\n      // we only are interested in the *last* %c\r\n      // (the user may have provided their own)\r\n      lastC = index;\r\n    }\r\n  });\r\n\r\n  args.splice(lastC, 0, c);\r\n}\r\n\r\n/**\r\n * Invokes `console.log()` when available.\r\n * No-op when `console.log` is not a \"function\".\r\n *\r\n * @api public\r\n */\r\n\r\nfunction log() {\r\n  // this hackery is required for IE8/9, where\r\n  // the `console.log` function doesn't have 'apply'\r\n  return 'object' === typeof console\r\n    && console.log\r\n    && Function.prototype.apply.call(console.log, console, arguments);\r\n}\r\n\r\n/**\r\n * Save `namespaces`.\r\n *\r\n * @param {String} namespaces\r\n * @api private\r\n */\r\n\r\nfunction save(namespaces) {\r\n  try {\r\n    if (null == namespaces) {\r\n      exports.storage.removeItem('debug');\r\n    } else {\r\n      exports.storage.debug = namespaces;\r\n    }\r\n  } catch(e) {}\r\n}\r\n\r\n/**\r\n * Load `namespaces`.\r\n *\r\n * @return {String} returns the previously persisted debug modes\r\n * @api private\r\n */\r\n\r\nfunction load() {\r\n  try {\r\n    return exports.storage.debug;\r\n  } catch(e) {}\r\n\r\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\r\n  if (typeof process !== 'undefined' && 'env' in process) {\r\n    return process.env.DEBUG;\r\n  }\r\n}\r\n\r\n/**\r\n * Enable namespaces listed in `localStorage.debug` initially.\r\n */\r\n\r\nexports.enable(load());\r\n\r\n/**\r\n * Localstorage attempts to return the localstorage.\r\n *\r\n * This is necessary because safari throws\r\n * when a user disables cookies/localstorage\r\n * and you attempt to access it.\r\n *\r\n * @return {LocalStorage}\r\n * @api private\r\n */\r\n\r\nfunction localstorage() {\r\n  try {\r\n    return window.localStorage;\r\n  } catch (e) {}\r\n}\r\n\r\n}).call(this,{ env: {} })\r\n\r\n},{\"./debug\":55}],55:[function(require,module,exports){\r\n\r\n/**\r\n * This is the common logic for both the Node.js and web browser\r\n * implementations of `debug()`.\r\n *\r\n * Expose `debug()` as the module.\r\n */\r\n\r\nexports = module.exports = createDebug.debug = createDebug.default = createDebug;\r\nexports.coerce = coerce;\r\nexports.disable = disable;\r\nexports.enable = enable;\r\nexports.enabled = enabled;\r\nexports.humanize = require('ms');\r\n\r\n/**\r\n * The currently active debug mode names, and names to skip.\r\n */\r\n\r\nexports.names = [];\r\nexports.skips = [];\r\n\r\n/**\r\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\r\n *\r\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\r\n */\r\n\r\nexports.formatters = {};\r\n\r\n/**\r\n * Previous log timestamp.\r\n */\r\n\r\nvar prevTime;\r\n\r\n/**\r\n * Select a color.\r\n * @param {String} namespace\r\n * @return {Number}\r\n * @api private\r\n */\r\n\r\nfunction selectColor(namespace) {\r\n  var hash = 0, i;\r\n\r\n  for (i in namespace) {\r\n    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\r\n    hash |= 0; // Convert to 32bit integer\r\n  }\r\n\r\n  return exports.colors[Math.abs(hash) % exports.colors.length];\r\n}\r\n\r\n/**\r\n * Create a debugger with the given `namespace`.\r\n *\r\n * @param {String} namespace\r\n * @return {Function}\r\n * @api public\r\n */\r\n\r\nfunction createDebug(namespace) {\r\n\r\n  function debug() {\r\n    // disabled?\r\n    if (!debug.enabled) return;\r\n\r\n    var self = debug;\r\n\r\n    // set `diff` timestamp\r\n    var curr = +new Date();\r\n    var ms = curr - (prevTime || curr);\r\n    self.diff = ms;\r\n    self.prev = prevTime;\r\n    self.curr = curr;\r\n    prevTime = curr;\r\n\r\n    // turn the `arguments` into a proper Array\r\n    var args = new Array(arguments.length);\r\n    for (var i = 0; i < args.length; i++) {\r\n      args[i] = arguments[i];\r\n    }\r\n\r\n    args[0] = exports.coerce(args[0]);\r\n\r\n    if ('string' !== typeof args[0]) {\r\n      // anything else let's inspect with %O\r\n      args.unshift('%O');\r\n    }\r\n\r\n    // apply any `formatters` transformations\r\n    var index = 0;\r\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\r\n      // if we encounter an escaped % then don't increase the array index\r\n      if (match === '%%') return match;\r\n      index++;\r\n      var formatter = exports.formatters[format];\r\n      if ('function' === typeof formatter) {\r\n        var val = args[index];\r\n        match = formatter.call(self, val);\r\n\r\n        // now we need to remove `args[index]` since it's inlined in the `format`\r\n        args.splice(index, 1);\r\n        index--;\r\n      }\r\n      return match;\r\n    });\r\n\r\n    // apply env-specific formatting (colors, etc.)\r\n    exports.formatArgs.call(self, args);\r\n\r\n    var logFn = debug.log || exports.log || console.log.bind(console);\r\n    logFn.apply(self, args);\r\n  }\r\n\r\n  debug.namespace = namespace;\r\n  debug.enabled = exports.enabled(namespace);\r\n  debug.useColors = exports.useColors();\r\n  debug.color = selectColor(namespace);\r\n\r\n  // env-specific initialization logic for debug instances\r\n  if ('function' === typeof exports.init) {\r\n    exports.init(debug);\r\n  }\r\n\r\n  return debug;\r\n}\r\n\r\n/**\r\n * Enables a debug mode by namespaces. This can include modes\r\n * separated by a colon and wildcards.\r\n *\r\n * @param {String} namespaces\r\n * @api public\r\n */\r\n\r\nfunction enable(namespaces) {\r\n  exports.save(namespaces);\r\n\r\n  var split = (namespaces || '').split(/[\\s,]+/);\r\n  var len = split.length;\r\n\r\n  for (var i = 0; i < len; i++) {\r\n    if (!split[i]) continue; // ignore empty strings\r\n    namespaces = split[i].replace(/\\*/g, '.*?');\r\n    if (namespaces[0] === '-') {\r\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\r\n    } else {\r\n      exports.names.push(new RegExp('^' + namespaces + '$'));\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Disable debug output.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction disable() {\r\n  exports.enable('');\r\n}\r\n\r\n/**\r\n * Returns true if the given mode name is enabled, false otherwise.\r\n *\r\n * @param {String} name\r\n * @return {Boolean}\r\n * @api public\r\n */\r\n\r\nfunction enabled(name) {\r\n  var i, len;\r\n  for (i = 0, len = exports.skips.length; i < len; i++) {\r\n    if (exports.skips[i].test(name)) {\r\n      return false;\r\n    }\r\n  }\r\n  for (i = 0, len = exports.names.length; i < len; i++) {\r\n    if (exports.names[i].test(name)) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\n/**\r\n * Coerce `val`.\r\n *\r\n * @param {Mixed} val\r\n * @return {Mixed}\r\n * @api private\r\n */\r\n\r\nfunction coerce(val) {\r\n  if (val instanceof Error) return val.stack || val.message;\r\n  return val;\r\n}\r\n\r\n},{\"ms\":58}],56:[function(require,module,exports){\r\nif (typeof Object.create === 'function') {\r\n  // implementation from standard node.js 'util' module\r\n  module.exports = function inherits(ctor, superCtor) {\r\n    ctor.super_ = superCtor\r\n    ctor.prototype = Object.create(superCtor.prototype, {\r\n      constructor: {\r\n        value: ctor,\r\n        enumerable: false,\r\n        writable: true,\r\n        configurable: true\r\n      }\r\n    });\r\n  };\r\n} else {\r\n  // old school shim for old browsers\r\n  module.exports = function inherits(ctor, superCtor) {\r\n    ctor.super_ = superCtor\r\n    var TempCtor = function () {}\r\n    TempCtor.prototype = superCtor.prototype\r\n    ctor.prototype = new TempCtor()\r\n    ctor.prototype.constructor = ctor\r\n  }\r\n}\r\n\r\n},{}],57:[function(require,module,exports){\r\n(function (global){\r\n/*! JSON v3.3.2 | http://bestiejs.github.io/json3 | Copyright 2012-2014, Kit Cambridge | http://kit.mit-license.org */\r\n;(function () {\r\n  // Detect the `define` function exposed by asynchronous module loaders. The\r\n  // strict `define` check is necessary for compatibility with `r.js`.\r\n  var isLoader = typeof define === \"function\" && define.amd;\r\n\r\n  // A set of types used to distinguish objects from primitives.\r\n  var objectTypes = {\r\n    \"function\": true,\r\n    \"object\": true\r\n  };\r\n\r\n  // Detect the `exports` object exposed by CommonJS implementations.\r\n  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;\r\n\r\n  // Use the `global` object exposed by Node (including Browserify via\r\n  // `insert-module-globals`), Narwhal, and Ringo as the default context,\r\n  // and the `window` object in browsers. Rhino exports a `global` function\r\n  // instead.\r\n  var root = objectTypes[typeof window] && window || this,\r\n      freeGlobal = freeExports && objectTypes[typeof module] && module && !module.nodeType && typeof global == \"object\" && global;\r\n\r\n  if (freeGlobal && (freeGlobal[\"global\"] === freeGlobal || freeGlobal[\"window\"] === freeGlobal || freeGlobal[\"self\"] === freeGlobal)) {\r\n    root = freeGlobal;\r\n  }\r\n\r\n  // Public: Initializes JSON 3 using the given `context` object, attaching the\r\n  // `stringify` and `parse` functions to the specified `exports` object.\r\n  function runInContext(context, exports) {\r\n    context || (context = root[\"Object\"]());\r\n    exports || (exports = root[\"Object\"]());\r\n\r\n    // Native constructor aliases.\r\n    var Number = context[\"Number\"] || root[\"Number\"],\r\n        String = context[\"String\"] || root[\"String\"],\r\n        Object = context[\"Object\"] || root[\"Object\"],\r\n        Date = context[\"Date\"] || root[\"Date\"],\r\n        SyntaxError = context[\"SyntaxError\"] || root[\"SyntaxError\"],\r\n        TypeError = context[\"TypeError\"] || root[\"TypeError\"],\r\n        Math = context[\"Math\"] || root[\"Math\"],\r\n        nativeJSON = context[\"JSON\"] || root[\"JSON\"];\r\n\r\n    // Delegate to the native `stringify` and `parse` implementations.\r\n    if (typeof nativeJSON == \"object\" && nativeJSON) {\r\n      exports.stringify = nativeJSON.stringify;\r\n      exports.parse = nativeJSON.parse;\r\n    }\r\n\r\n    // Convenience aliases.\r\n    var objectProto = Object.prototype,\r\n        getClass = objectProto.toString,\r\n        isProperty, forEach, undef;\r\n\r\n    // Test the `Date#getUTC*` methods. Based on work by @Yaffle.\r\n    var isExtended = new Date(-3509827334573292);\r\n    try {\r\n      // The `getUTCFullYear`, `Month`, and `Date` methods return nonsensical\r\n      // results for certain dates in Opera >= 10.53.\r\n      isExtended = isExtended.getUTCFullYear() == -109252 && isExtended.getUTCMonth() === 0 && isExtended.getUTCDate() === 1 &&\r\n        // Safari < 2.0.2 stores the internal millisecond time value correctly,\r\n        // but clips the values returned by the date methods to the range of\r\n        // signed 32-bit integers ([-2 ** 31, 2 ** 31 - 1]).\r\n        isExtended.getUTCHours() == 10 && isExtended.getUTCMinutes() == 37 && isExtended.getUTCSeconds() == 6 && isExtended.getUTCMilliseconds() == 708;\r\n    } catch (exception) {}\r\n\r\n    // Internal: Determines whether the native `JSON.stringify` and `parse`\r\n    // implementations are spec-compliant. Based on work by Ken Snyder.\r\n    function has(name) {\r\n      if (has[name] !== undef) {\r\n        // Return cached feature test result.\r\n        return has[name];\r\n      }\r\n      var isSupported;\r\n      if (name == \"bug-string-char-index\") {\r\n        // IE <= 7 doesn't support accessing string characters using square\r\n        // bracket notation. IE 8 only supports this for primitives.\r\n        isSupported = \"a\"[0] != \"a\";\r\n      } else if (name == \"json\") {\r\n        // Indicates whether both `JSON.stringify` and `JSON.parse` are\r\n        // supported.\r\n        isSupported = has(\"json-stringify\") && has(\"json-parse\");\r\n      } else {\r\n        var value, serialized = '{\"a\":[1,true,false,null,\"\\\\u0000\\\\b\\\\n\\\\f\\\\r\\\\t\"]}';\r\n        // Test `JSON.stringify`.\r\n        if (name == \"json-stringify\") {\r\n          var stringify = exports.stringify, stringifySupported = typeof stringify == \"function\" && isExtended;\r\n          if (stringifySupported) {\r\n            // A test function object with a custom `toJSON` method.\r\n            (value = function () {\r\n              return 1;\r\n            }).toJSON = value;\r\n            try {\r\n              stringifySupported =\r\n                // Firefox 3.1b1 and b2 serialize string, number, and boolean\r\n                // primitives as object literals.\r\n                stringify(0) === \"0\" &&\r\n                // FF 3.1b1, b2, and JSON 2 serialize wrapped primitives as object\r\n                // literals.\r\n                stringify(new Number()) === \"0\" &&\r\n                stringify(new String()) == '\"\"' &&\r\n                // FF 3.1b1, 2 throw an error if the value is `null`, `undefined`, or\r\n                // does not define a canonical JSON representation (this applies to\r\n                // objects with `toJSON` properties as well, *unless* they are nested\r\n                // within an object or array).\r\n                stringify(getClass) === undef &&\r\n                // IE 8 serializes `undefined` as `\"undefined\"`. Safari <= 5.1.7 and\r\n                // FF 3.1b3 pass this test.\r\n                stringify(undef) === undef &&\r\n                // Safari <= 5.1.7 and FF 3.1b3 throw `Error`s and `TypeError`s,\r\n                // respectively, if the value is omitted entirely.\r\n                stringify() === undef &&\r\n                // FF 3.1b1, 2 throw an error if the given value is not a number,\r\n                // string, array, object, Boolean, or `null` literal. This applies to\r\n                // objects with custom `toJSON` methods as well, unless they are nested\r\n                // inside object or array literals. YUI 3.0.0b1 ignores custom `toJSON`\r\n                // methods entirely.\r\n                stringify(value) === \"1\" &&\r\n                stringify([value]) == \"[1]\" &&\r\n                // Prototype <= 1.6.1 serializes `[undefined]` as `\"[]\"` instead of\r\n                // `\"[null]\"`.\r\n                stringify([undef]) == \"[null]\" &&\r\n                // YUI 3.0.0b1 fails to serialize `null` literals.\r\n                stringify(null) == \"null\" &&\r\n                // FF 3.1b1, 2 halts serialization if an array contains a function:\r\n                // `[1, true, getClass, 1]` serializes as \"[1,true,],\". FF 3.1b3\r\n                // elides non-JSON values from objects and arrays, unless they\r\n                // define custom `toJSON` methods.\r\n                stringify([undef, getClass, null]) == \"[null,null,null]\" &&\r\n                // Simple serialization test. FF 3.1b1 uses Unicode escape sequences\r\n                // where character escape codes are expected (e.g., `\\b` => `\\u0008`).\r\n                stringify({ \"a\": [value, true, false, null, \"\\x00\\b\\n\\f\\r\\t\"] }) == serialized &&\r\n                // FF 3.1b1 and b2 ignore the `filter` and `width` arguments.\r\n                stringify(null, value) === \"1\" &&\r\n                stringify([1, 2], null, 1) == \"[\\n 1,\\n 2\\n]\" &&\r\n                // JSON 2, Prototype <= 1.7, and older WebKit builds incorrectly\r\n                // serialize extended years.\r\n                stringify(new Date(-8.64e15)) == '\"-271821-04-20T00:00:00.000Z\"' &&\r\n                // The milliseconds are optional in ES 5, but required in 5.1.\r\n                stringify(new Date(8.64e15)) == '\"+275760-09-13T00:00:00.000Z\"' &&\r\n                // Firefox <= 11.0 incorrectly serializes years prior to 0 as negative\r\n                // four-digit years instead of six-digit years. Credits: @Yaffle.\r\n                stringify(new Date(-621987552e5)) == '\"-000001-01-01T00:00:00.000Z\"' &&\r\n                // Safari <= 5.1.5 and Opera >= 10.53 incorrectly serialize millisecond\r\n                // values less than 1000. Credits: @Yaffle.\r\n                stringify(new Date(-1)) == '\"1969-12-31T23:59:59.999Z\"';\r\n            } catch (exception) {\r\n              stringifySupported = false;\r\n            }\r\n          }\r\n          isSupported = stringifySupported;\r\n        }\r\n        // Test `JSON.parse`.\r\n        if (name == \"json-parse\") {\r\n          var parse = exports.parse;\r\n          if (typeof parse == \"function\") {\r\n            try {\r\n              // FF 3.1b1, b2 will throw an exception if a bare literal is provided.\r\n              // Conforming implementations should also coerce the initial argument to\r\n              // a string prior to parsing.\r\n              if (parse(\"0\") === 0 && !parse(false)) {\r\n                // Simple parsing test.\r\n                value = parse(serialized);\r\n                var parseSupported = value[\"a\"].length == 5 && value[\"a\"][0] === 1;\r\n                if (parseSupported) {\r\n                  try {\r\n                    // Safari <= 5.1.2 and FF 3.1b1 allow unescaped tabs in strings.\r\n                    parseSupported = !parse('\"\\t\"');\r\n                  } catch (exception) {}\r\n                  if (parseSupported) {\r\n                    try {\r\n                      // FF 4.0 and 4.0.1 allow leading `+` signs and leading\r\n                      // decimal points. FF 4.0, 4.0.1, and IE 9-10 also allow\r\n                      // certain octal literals.\r\n                      parseSupported = parse(\"01\") !== 1;\r\n                    } catch (exception) {}\r\n                  }\r\n                  if (parseSupported) {\r\n                    try {\r\n                      // FF 4.0, 4.0.1, and Rhino 1.7R3-R4 allow trailing decimal\r\n                      // points. These environments, along with FF 3.1b1 and 2,\r\n                      // also allow trailing commas in JSON objects and arrays.\r\n                      parseSupported = parse(\"1.\") !== 1;\r\n                    } catch (exception) {}\r\n                  }\r\n                }\r\n              }\r\n            } catch (exception) {\r\n              parseSupported = false;\r\n            }\r\n          }\r\n          isSupported = parseSupported;\r\n        }\r\n      }\r\n      return has[name] = !!isSupported;\r\n    }\r\n\r\n    if (!has(\"json\")) {\r\n      // Common `[[Class]]` name aliases.\r\n      var functionClass = \"[object Function]\",\r\n          dateClass = \"[object Date]\",\r\n          numberClass = \"[object Number]\",\r\n          stringClass = \"[object String]\",\r\n          arrayClass = \"[object Array]\",\r\n          booleanClass = \"[object Boolean]\";\r\n\r\n      // Detect incomplete support for accessing string characters by index.\r\n      var charIndexBuggy = has(\"bug-string-char-index\");\r\n\r\n      // Define additional utility methods if the `Date` methods are buggy.\r\n      if (!isExtended) {\r\n        var floor = Math.floor;\r\n        // A mapping between the months of the year and the number of days between\r\n        // January 1st and the first of the respective month.\r\n        var Months = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];\r\n        // Internal: Calculates the number of days between the Unix epoch and the\r\n        // first day of the given month.\r\n        var getDay = function (year, month) {\r\n          return Months[month] + 365 * (year - 1970) + floor((year - 1969 + (month = +(month > 1))) / 4) - floor((year - 1901 + month) / 100) + floor((year - 1601 + month) / 400);\r\n        };\r\n      }\r\n\r\n      // Internal: Determines if a property is a direct property of the given\r\n      // object. Delegates to the native `Object#hasOwnProperty` method.\r\n      if (!(isProperty = objectProto.hasOwnProperty)) {\r\n        isProperty = function (property) {\r\n          var members = {}, constructor;\r\n          if ((members.__proto__ = null, members.__proto__ = {\r\n            // The *proto* property cannot be set multiple times in recent\r\n            // versions of Firefox and SeaMonkey.\r\n            \"toString\": 1\r\n          }, members).toString != getClass) {\r\n            // Safari <= 2.0.3 doesn't implement `Object#hasOwnProperty`, but\r\n            // supports the mutable *proto* property.\r\n            isProperty = function (property) {\r\n              // Capture and break the object's prototype chain (see section 8.6.2\r\n              // of the ES 5.1 spec). The parenthesized expression prevents an\r\n              // unsafe transformation by the Closure Compiler.\r\n              var original = this.__proto__, result = property in (this.__proto__ = null, this);\r\n              // Restore the original prototype chain.\r\n              this.__proto__ = original;\r\n              return result;\r\n            };\r\n          } else {\r\n            // Capture a reference to the top-level `Object` constructor.\r\n            constructor = members.constructor;\r\n            // Use the `constructor` property to simulate `Object#hasOwnProperty` in\r\n            // other environments.\r\n            isProperty = function (property) {\r\n              var parent = (this.constructor || constructor).prototype;\r\n              return property in this && !(property in parent && this[property] === parent[property]);\r\n            };\r\n          }\r\n          members = null;\r\n          return isProperty.call(this, property);\r\n        };\r\n      }\r\n\r\n      // Internal: Normalizes the `for...in` iteration algorithm across\r\n      // environments. Each enumerated key is yielded to a `callback` function.\r\n      forEach = function (object, callback) {\r\n        var size = 0, Properties, members, property;\r\n\r\n        // Tests for bugs in the current environment's `for...in` algorithm. The\r\n        // `valueOf` property inherits the non-enumerable flag from\r\n        // `Object.prototype` in older versions of IE, Netscape, and Mozilla.\r\n        (Properties = function () {\r\n          this.valueOf = 0;\r\n        }).prototype.valueOf = 0;\r\n\r\n        // Iterate over a new instance of the `Properties` class.\r\n        members = new Properties();\r\n        for (property in members) {\r\n          // Ignore all properties inherited from `Object.prototype`.\r\n          if (isProperty.call(members, property)) {\r\n            size++;\r\n          }\r\n        }\r\n        Properties = members = null;\r\n\r\n        // Normalize the iteration algorithm.\r\n        if (!size) {\r\n          // A list of non-enumerable properties inherited from `Object.prototype`.\r\n          members = [\"valueOf\", \"toString\", \"toLocaleString\", \"propertyIsEnumerable\", \"isPrototypeOf\", \"hasOwnProperty\", \"constructor\"];\r\n          // IE <= 8, Mozilla 1.0, and Netscape 6.2 ignore shadowed non-enumerable\r\n          // properties.\r\n          forEach = function (object, callback) {\r\n            var isFunction = getClass.call(object) == functionClass, property, length;\r\n            var hasProperty = !isFunction && typeof object.constructor != \"function\" && objectTypes[typeof object.hasOwnProperty] && object.hasOwnProperty || isProperty;\r\n            for (property in object) {\r\n              // Gecko <= 1.0 enumerates the `prototype` property of functions under\r\n              // certain conditions; IE does not.\r\n              if (!(isFunction && property == \"prototype\") && hasProperty.call(object, property)) {\r\n                callback(property);\r\n              }\r\n            }\r\n            // Manually invoke the callback for each non-enumerable property.\r\n            for (length = members.length; property = members[--length]; hasProperty.call(object, property) && callback(property));\r\n          };\r\n        } else if (size == 2) {\r\n          // Safari <= 2.0.4 enumerates shadowed properties twice.\r\n          forEach = function (object, callback) {\r\n            // Create a set of iterated properties.\r\n            var members = {}, isFunction = getClass.call(object) == functionClass, property;\r\n            for (property in object) {\r\n              // Store each property name to prevent double enumeration. The\r\n              // `prototype` property of functions is not enumerated due to cross-\r\n              // environment inconsistencies.\r\n              if (!(isFunction && property == \"prototype\") && !isProperty.call(members, property) && (members[property] = 1) && isProperty.call(object, property)) {\r\n                callback(property);\r\n              }\r\n            }\r\n          };\r\n        } else {\r\n          // No bugs detected; use the standard `for...in` algorithm.\r\n          forEach = function (object, callback) {\r\n            var isFunction = getClass.call(object) == functionClass, property, isConstructor;\r\n            for (property in object) {\r\n              if (!(isFunction && property == \"prototype\") && isProperty.call(object, property) && !(isConstructor = property === \"constructor\")) {\r\n                callback(property);\r\n              }\r\n            }\r\n            // Manually invoke the callback for the `constructor` property due to\r\n            // cross-environment inconsistencies.\r\n            if (isConstructor || isProperty.call(object, (property = \"constructor\"))) {\r\n              callback(property);\r\n            }\r\n          };\r\n        }\r\n        return forEach(object, callback);\r\n      };\r\n\r\n      // Public: Serializes a JavaScript `value` as a JSON string. The optional\r\n      // `filter` argument may specify either a function that alters how object and\r\n      // array members are serialized, or an array of strings and numbers that\r\n      // indicates which properties should be serialized. The optional `width`\r\n      // argument may be either a string or number that specifies the indentation\r\n      // level of the output.\r\n      if (!has(\"json-stringify\")) {\r\n        // Internal: A map of control characters and their escaped equivalents.\r\n        var Escapes = {\r\n          92: \"\\\\\\\\\",\r\n          34: '\\\\\"',\r\n          8: \"\\\\b\",\r\n          12: \"\\\\f\",\r\n          10: \"\\\\n\",\r\n          13: \"\\\\r\",\r\n          9: \"\\\\t\"\r\n        };\r\n\r\n        // Internal: Converts `value` into a zero-padded string such that its\r\n        // length is at least equal to `width`. The `width` must be <= 6.\r\n        var leadingZeroes = \"000000\";\r\n        var toPaddedString = function (width, value) {\r\n          // The `|| 0` expression is necessary to work around a bug in\r\n          // Opera <= 7.54u2 where `0 == -0`, but `String(-0) !== \"0\"`.\r\n          return (leadingZeroes + (value || 0)).slice(-width);\r\n        };\r\n\r\n        // Internal: Double-quotes a string `value`, replacing all ASCII control\r\n        // characters (characters with code unit values between 0 and 31) with\r\n        // their escaped equivalents. This is an implementation of the\r\n        // `Quote(value)` operation defined in ES 5.1 section 15.12.3.\r\n        var unicodePrefix = \"\\\\u00\";\r\n        var quote = function (value) {\r\n          var result = '\"', index = 0, length = value.length, useCharIndex = !charIndexBuggy || length > 10;\r\n          var symbols = useCharIndex && (charIndexBuggy ? value.split(\"\") : value);\r\n          for (; index < length; index++) {\r\n            var charCode = value.charCodeAt(index);\r\n            // If the character is a control character, append its Unicode or\r\n            // shorthand escape sequence; otherwise, append the character as-is.\r\n            switch (charCode) {\r\n              case 8: case 9: case 10: case 12: case 13: case 34: case 92:\r\n                result += Escapes[charCode];\r\n                break;\r\n              default:\r\n                if (charCode < 32) {\r\n                  result += unicodePrefix + toPaddedString(2, charCode.toString(16));\r\n                  break;\r\n                }\r\n                result += useCharIndex ? symbols[index] : value.charAt(index);\r\n            }\r\n          }\r\n          return result + '\"';\r\n        };\r\n\r\n        // Internal: Recursively serializes an object. Implements the\r\n        // `Str(key, holder)`, `JO(value)`, and `JA(value)` operations.\r\n        var serialize = function (property, object, callback, properties, whitespace, indentation, stack) {\r\n          var value, className, year, month, date, time, hours, minutes, seconds, milliseconds, results, element, index, length, prefix, result;\r\n          try {\r\n            // Necessary for host object support.\r\n            value = object[property];\r\n          } catch (exception) {}\r\n          if (typeof value == \"object\" && value) {\r\n            className = getClass.call(value);\r\n            if (className == dateClass && !isProperty.call(value, \"toJSON\")) {\r\n              if (value > -1 / 0 && value < 1 / 0) {\r\n                // Dates are serialized according to the `Date#toJSON` method\r\n                // specified in ES 5.1 section 15.9.5.44. See section 15.9.1.15\r\n                // for the ISO 8601 date time string format.\r\n                if (getDay) {\r\n                  // Manually compute the year, month, date, hours, minutes,\r\n                  // seconds, and milliseconds if the `getUTC*` methods are\r\n                  // buggy. Adapted from @Yaffle's `date-shim` project.\r\n                  date = floor(value / 864e5);\r\n                  for (year = floor(date / 365.2425) + 1970 - 1; getDay(year + 1, 0) <= date; year++);\r\n                  for (month = floor((date - getDay(year, 0)) / 30.42); getDay(year, month + 1) <= date; month++);\r\n                  date = 1 + date - getDay(year, month);\r\n                  // The `time` value specifies the time within the day (see ES\r\n                  // 5.1 section 15.9.1.2). The formula `(A % B + B) % B` is used\r\n                  // to compute `A modulo B`, as the `%` operator does not\r\n                  // correspond to the `modulo` operation for negative numbers.\r\n                  time = (value % 864e5 + 864e5) % 864e5;\r\n                  // The hours, minutes, seconds, and milliseconds are obtained by\r\n                  // decomposing the time within the day. See section 15.9.1.10.\r\n                  hours = floor(time / 36e5) % 24;\r\n                  minutes = floor(time / 6e4) % 60;\r\n                  seconds = floor(time / 1e3) % 60;\r\n                  milliseconds = time % 1e3;\r\n                } else {\r\n                  year = value.getUTCFullYear();\r\n                  month = value.getUTCMonth();\r\n                  date = value.getUTCDate();\r\n                  hours = value.getUTCHours();\r\n                  minutes = value.getUTCMinutes();\r\n                  seconds = value.getUTCSeconds();\r\n                  milliseconds = value.getUTCMilliseconds();\r\n                }\r\n                // Serialize extended years correctly.\r\n                value = (year <= 0 || year >= 1e4 ? (year < 0 ? \"-\" : \"+\") + toPaddedString(6, year < 0 ? -year : year) : toPaddedString(4, year)) +\r\n                  \"-\" + toPaddedString(2, month + 1) + \"-\" + toPaddedString(2, date) +\r\n                  // Months, dates, hours, minutes, and seconds should have two\r\n                  // digits; milliseconds should have three.\r\n                  \"T\" + toPaddedString(2, hours) + \":\" + toPaddedString(2, minutes) + \":\" + toPaddedString(2, seconds) +\r\n                  // Milliseconds are optional in ES 5.0, but required in 5.1.\r\n                  \".\" + toPaddedString(3, milliseconds) + \"Z\";\r\n              } else {\r\n                value = null;\r\n              }\r\n            } else if (typeof value.toJSON == \"function\" && ((className != numberClass && className != stringClass && className != arrayClass) || isProperty.call(value, \"toJSON\"))) {\r\n              // Prototype <= 1.6.1 adds non-standard `toJSON` methods to the\r\n              // `Number`, `String`, `Date`, and `Array` prototypes. JSON 3\r\n              // ignores all `toJSON` methods on these objects unless they are\r\n              // defined directly on an instance.\r\n              value = value.toJSON(property);\r\n            }\r\n          }\r\n          if (callback) {\r\n            // If a replacement function was provided, call it to obtain the value\r\n            // for serialization.\r\n            value = callback.call(object, property, value);\r\n          }\r\n          if (value === null) {\r\n            return \"null\";\r\n          }\r\n          className = getClass.call(value);\r\n          if (className == booleanClass) {\r\n            // Booleans are represented literally.\r\n            return \"\" + value;\r\n          } else if (className == numberClass) {\r\n            // JSON numbers must be finite. `Infinity` and `NaN` are serialized as\r\n            // `\"null\"`.\r\n            return value > -1 / 0 && value < 1 / 0 ? \"\" + value : \"null\";\r\n          } else if (className == stringClass) {\r\n            // Strings are double-quoted and escaped.\r\n            return quote(\"\" + value);\r\n          }\r\n          // Recursively serialize objects and arrays.\r\n          if (typeof value == \"object\") {\r\n            // Check for cyclic structures. This is a linear search; performance\r\n            // is inversely proportional to the number of unique nested objects.\r\n            for (length = stack.length; length--;) {\r\n              if (stack[length] === value) {\r\n                // Cyclic structures cannot be serialized by `JSON.stringify`.\r\n                throw TypeError();\r\n              }\r\n            }\r\n            // Add the object to the stack of traversed objects.\r\n            stack.push(value);\r\n            results = [];\r\n            // Save the current indentation level and indent one additional level.\r\n            prefix = indentation;\r\n            indentation += whitespace;\r\n            if (className == arrayClass) {\r\n              // Recursively serialize array elements.\r\n              for (index = 0, length = value.length; index < length; index++) {\r\n                element = serialize(index, value, callback, properties, whitespace, indentation, stack);\r\n                results.push(element === undef ? \"null\" : element);\r\n              }\r\n              result = results.length ? (whitespace ? \"[\\n\" + indentation + results.join(\",\\n\" + indentation) + \"\\n\" + prefix + \"]\" : (\"[\" + results.join(\",\") + \"]\")) : \"[]\";\r\n            } else {\r\n              // Recursively serialize object members. Members are selected from\r\n              // either a user-specified list of property names, or the object\r\n              // itself.\r\n              forEach(properties || value, function (property) {\r\n                var element = serialize(property, value, callback, properties, whitespace, indentation, stack);\r\n                if (element !== undef) {\r\n                  // According to ES 5.1 section 15.12.3: \"If `gap` {whitespace}\r\n                  // is not the empty string, let `member` {quote(property) + \":\"}\r\n                  // be the concatenation of `member` and the `space` character.\"\r\n                  // The \"`space` character\" refers to the literal space\r\n                  // character, not the `space` {width} argument provided to\r\n                  // `JSON.stringify`.\r\n                  results.push(quote(property) + \":\" + (whitespace ? \" \" : \"\") + element);\r\n                }\r\n              });\r\n              result = results.length ? (whitespace ? \"{\\n\" + indentation + results.join(\",\\n\" + indentation) + \"\\n\" + prefix + \"}\" : (\"{\" + results.join(\",\") + \"}\")) : \"{}\";\r\n            }\r\n            // Remove the object from the traversed object stack.\r\n            stack.pop();\r\n            return result;\r\n          }\r\n        };\r\n\r\n        // Public: `JSON.stringify`. See ES 5.1 section 15.12.3.\r\n        exports.stringify = function (source, filter, width) {\r\n          var whitespace, callback, properties, className;\r\n          if (objectTypes[typeof filter] && filter) {\r\n            if ((className = getClass.call(filter)) == functionClass) {\r\n              callback = filter;\r\n            } else if (className == arrayClass) {\r\n              // Convert the property names array into a makeshift set.\r\n              properties = {};\r\n              for (var index = 0, length = filter.length, value; index < length; value = filter[index++], ((className = getClass.call(value)), className == stringClass || className == numberClass) && (properties[value] = 1));\r\n            }\r\n          }\r\n          if (width) {\r\n            if ((className = getClass.call(width)) == numberClass) {\r\n              // Convert the `width` to an integer and create a string containing\r\n              // `width` number of space characters.\r\n              if ((width -= width % 1) > 0) {\r\n                for (whitespace = \"\", width > 10 && (width = 10); whitespace.length < width; whitespace += \" \");\r\n              }\r\n            } else if (className == stringClass) {\r\n              whitespace = width.length <= 10 ? width : width.slice(0, 10);\r\n            }\r\n          }\r\n          // Opera <= 7.54u2 discards the values associated with empty string keys\r\n          // (`\"\"`) only if they are used directly within an object member list\r\n          // (e.g., `!(\"\" in { \"\": 1})`).\r\n          return serialize(\"\", (value = {}, value[\"\"] = source, value), callback, properties, whitespace, \"\", []);\r\n        };\r\n      }\r\n\r\n      // Public: Parses a JSON source string.\r\n      if (!has(\"json-parse\")) {\r\n        var fromCharCode = String.fromCharCode;\r\n\r\n        // Internal: A map of escaped control characters and their unescaped\r\n        // equivalents.\r\n        var Unescapes = {\r\n          92: \"\\\\\",\r\n          34: '\"',\r\n          47: \"/\",\r\n          98: \"\\b\",\r\n          116: \"\\t\",\r\n          110: \"\\n\",\r\n          102: \"\\f\",\r\n          114: \"\\r\"\r\n        };\r\n\r\n        // Internal: Stores the parser state.\r\n        var Index, Source;\r\n\r\n        // Internal: Resets the parser state and throws a `SyntaxError`.\r\n        var abort = function () {\r\n          Index = Source = null;\r\n          throw SyntaxError();\r\n        };\r\n\r\n        // Internal: Returns the next token, or `\"$\"` if the parser has reached\r\n        // the end of the source string. A token may be a string, number, `null`\r\n        // literal, or Boolean literal.\r\n        var lex = function () {\r\n          var source = Source, length = source.length, value, begin, position, isSigned, charCode;\r\n          while (Index < length) {\r\n            charCode = source.charCodeAt(Index);\r\n            switch (charCode) {\r\n              case 9: case 10: case 13: case 32:\r\n                // Skip whitespace tokens, including tabs, carriage returns, line\r\n                // feeds, and space characters.\r\n                Index++;\r\n                break;\r\n              case 123: case 125: case 91: case 93: case 58: case 44:\r\n                // Parse a punctuator token (`{`, `}`, `[`, `]`, `:`, or `,`) at\r\n                // the current position.\r\n                value = charIndexBuggy ? source.charAt(Index) : source[Index];\r\n                Index++;\r\n                return value;\r\n              case 34:\r\n                // `\"` delimits a JSON string; advance to the next character and\r\n                // begin parsing the string. String tokens are prefixed with the\r\n                // sentinel `@` character to distinguish them from punctuators and\r\n                // end-of-string tokens.\r\n                for (value = \"@\", Index++; Index < length;) {\r\n                  charCode = source.charCodeAt(Index);\r\n                  if (charCode < 32) {\r\n                    // Unescaped ASCII control characters (those with a code unit\r\n                    // less than the space character) are not permitted.\r\n                    abort();\r\n                  } else if (charCode == 92) {\r\n                    // A reverse solidus (`\\`) marks the beginning of an escaped\r\n                    // control character (including `\"`, `\\`, and `/`) or Unicode\r\n                    // escape sequence.\r\n                    charCode = source.charCodeAt(++Index);\r\n                    switch (charCode) {\r\n                      case 92: case 34: case 47: case 98: case 116: case 110: case 102: case 114:\r\n                        // Revive escaped control characters.\r\n                        value += Unescapes[charCode];\r\n                        Index++;\r\n                        break;\r\n                      case 117:\r\n                        // `\\u` marks the beginning of a Unicode escape sequence.\r\n                        // Advance to the first character and validate the\r\n                        // four-digit code point.\r\n                        begin = ++Index;\r\n                        for (position = Index + 4; Index < position; Index++) {\r\n                          charCode = source.charCodeAt(Index);\r\n                          // A valid sequence comprises four hexdigits (case-\r\n                          // insensitive) that form a single hexadecimal value.\r\n                          if (!(charCode >= 48 && charCode <= 57 || charCode >= 97 && charCode <= 102 || charCode >= 65 && charCode <= 70)) {\r\n                            // Invalid Unicode escape sequence.\r\n                            abort();\r\n                          }\r\n                        }\r\n                        // Revive the escaped character.\r\n                        value += fromCharCode(\"0x\" + source.slice(begin, Index));\r\n                        break;\r\n                      default:\r\n                        // Invalid escape sequence.\r\n                        abort();\r\n                    }\r\n                  } else {\r\n                    if (charCode == 34) {\r\n                      // An unescaped double-quote character marks the end of the\r\n                      // string.\r\n                      break;\r\n                    }\r\n                    charCode = source.charCodeAt(Index);\r\n                    begin = Index;\r\n                    // Optimize for the common case where a string is valid.\r\n                    while (charCode >= 32 && charCode != 92 && charCode != 34) {\r\n                      charCode = source.charCodeAt(++Index);\r\n                    }\r\n                    // Append the string as-is.\r\n                    value += source.slice(begin, Index);\r\n                  }\r\n                }\r\n                if (source.charCodeAt(Index) == 34) {\r\n                  // Advance to the next character and return the revived string.\r\n                  Index++;\r\n                  return value;\r\n                }\r\n                // Unterminated string.\r\n                abort();\r\n              default:\r\n                // Parse numbers and literals.\r\n                begin = Index;\r\n                // Advance past the negative sign, if one is specified.\r\n                if (charCode == 45) {\r\n                  isSigned = true;\r\n                  charCode = source.charCodeAt(++Index);\r\n                }\r\n                // Parse an integer or floating-point value.\r\n                if (charCode >= 48 && charCode <= 57) {\r\n                  // Leading zeroes are interpreted as octal literals.\r\n                  if (charCode == 48 && ((charCode = source.charCodeAt(Index + 1)), charCode >= 48 && charCode <= 57)) {\r\n                    // Illegal octal literal.\r\n                    abort();\r\n                  }\r\n                  isSigned = false;\r\n                  // Parse the integer component.\r\n                  for (; Index < length && ((charCode = source.charCodeAt(Index)), charCode >= 48 && charCode <= 57); Index++);\r\n                  // Floats cannot contain a leading decimal point; however, this\r\n                  // case is already accounted for by the parser.\r\n                  if (source.charCodeAt(Index) == 46) {\r\n                    position = ++Index;\r\n                    // Parse the decimal component.\r\n                    for (; position < length && ((charCode = source.charCodeAt(position)), charCode >= 48 && charCode <= 57); position++);\r\n                    if (position == Index) {\r\n                      // Illegal trailing decimal.\r\n                      abort();\r\n                    }\r\n                    Index = position;\r\n                  }\r\n                  // Parse exponents. The `e` denoting the exponent is\r\n                  // case-insensitive.\r\n                  charCode = source.charCodeAt(Index);\r\n                  if (charCode == 101 || charCode == 69) {\r\n                    charCode = source.charCodeAt(++Index);\r\n                    // Skip past the sign following the exponent, if one is\r\n                    // specified.\r\n                    if (charCode == 43 || charCode == 45) {\r\n                      Index++;\r\n                    }\r\n                    // Parse the exponential component.\r\n                    for (position = Index; position < length && ((charCode = source.charCodeAt(position)), charCode >= 48 && charCode <= 57); position++);\r\n                    if (position == Index) {\r\n                      // Illegal empty exponent.\r\n                      abort();\r\n                    }\r\n                    Index = position;\r\n                  }\r\n                  // Coerce the parsed value to a JavaScript number.\r\n                  return +source.slice(begin, Index);\r\n                }\r\n                // A negative sign may only precede numbers.\r\n                if (isSigned) {\r\n                  abort();\r\n                }\r\n                // `true`, `false`, and `null` literals.\r\n                if (source.slice(Index, Index + 4) == \"true\") {\r\n                  Index += 4;\r\n                  return true;\r\n                } else if (source.slice(Index, Index + 5) == \"false\") {\r\n                  Index += 5;\r\n                  return false;\r\n                } else if (source.slice(Index, Index + 4) == \"null\") {\r\n                  Index += 4;\r\n                  return null;\r\n                }\r\n                // Unrecognized token.\r\n                abort();\r\n            }\r\n          }\r\n          // Return the sentinel `$` character if the parser has reached the end\r\n          // of the source string.\r\n          return \"$\";\r\n        };\r\n\r\n        // Internal: Parses a JSON `value` token.\r\n        var get = function (value) {\r\n          var results, hasMembers;\r\n          if (value == \"$\") {\r\n            // Unexpected end of input.\r\n            abort();\r\n          }\r\n          if (typeof value == \"string\") {\r\n            if ((charIndexBuggy ? value.charAt(0) : value[0]) == \"@\") {\r\n              // Remove the sentinel `@` character.\r\n              return value.slice(1);\r\n            }\r\n            // Parse object and array literals.\r\n            if (value == \"[\") {\r\n              // Parses a JSON array, returning a new JavaScript array.\r\n              results = [];\r\n              for (;; hasMembers || (hasMembers = true)) {\r\n                value = lex();\r\n                // A closing square bracket marks the end of the array literal.\r\n                if (value == \"]\") {\r\n                  break;\r\n                }\r\n                // If the array literal contains elements, the current token\r\n                // should be a comma separating the previous element from the\r\n                // next.\r\n                if (hasMembers) {\r\n                  if (value == \",\") {\r\n                    value = lex();\r\n                    if (value == \"]\") {\r\n                      // Unexpected trailing `,` in array literal.\r\n                      abort();\r\n                    }\r\n                  } else {\r\n                    // A `,` must separate each array element.\r\n                    abort();\r\n                  }\r\n                }\r\n                // Elisions and leading commas are not permitted.\r\n                if (value == \",\") {\r\n                  abort();\r\n                }\r\n                results.push(get(value));\r\n              }\r\n              return results;\r\n            } else if (value == \"{\") {\r\n              // Parses a JSON object, returning a new JavaScript object.\r\n              results = {};\r\n              for (;; hasMembers || (hasMembers = true)) {\r\n                value = lex();\r\n                // A closing curly brace marks the end of the object literal.\r\n                if (value == \"}\") {\r\n                  break;\r\n                }\r\n                // If the object literal contains members, the current token\r\n                // should be a comma separator.\r\n                if (hasMembers) {\r\n                  if (value == \",\") {\r\n                    value = lex();\r\n                    if (value == \"}\") {\r\n                      // Unexpected trailing `,` in object literal.\r\n                      abort();\r\n                    }\r\n                  } else {\r\n                    // A `,` must separate each object member.\r\n                    abort();\r\n                  }\r\n                }\r\n                // Leading commas are not permitted, object property names must be\r\n                // double-quoted strings, and a `:` must separate each property\r\n                // name and value.\r\n                if (value == \",\" || typeof value != \"string\" || (charIndexBuggy ? value.charAt(0) : value[0]) != \"@\" || lex() != \":\") {\r\n                  abort();\r\n                }\r\n                results[value.slice(1)] = get(lex());\r\n              }\r\n              return results;\r\n            }\r\n            // Unexpected token encountered.\r\n            abort();\r\n          }\r\n          return value;\r\n        };\r\n\r\n        // Internal: Updates a traversed object member.\r\n        var update = function (source, property, callback) {\r\n          var element = walk(source, property, callback);\r\n          if (element === undef) {\r\n            delete source[property];\r\n          } else {\r\n            source[property] = element;\r\n          }\r\n        };\r\n\r\n        // Internal: Recursively traverses a parsed JSON object, invoking the\r\n        // `callback` function for each value. This is an implementation of the\r\n        // `Walk(holder, name)` operation defined in ES 5.1 section 15.12.2.\r\n        var walk = function (source, property, callback) {\r\n          var value = source[property], length;\r\n          if (typeof value == \"object\" && value) {\r\n            // `forEach` can't be used to traverse an array in Opera <= 8.54\r\n            // because its `Object#hasOwnProperty` implementation returns `false`\r\n            // for array indices (e.g., `![1, 2, 3].hasOwnProperty(\"0\")`).\r\n            if (getClass.call(value) == arrayClass) {\r\n              for (length = value.length; length--;) {\r\n                update(value, length, callback);\r\n              }\r\n            } else {\r\n              forEach(value, function (property) {\r\n                update(value, property, callback);\r\n              });\r\n            }\r\n          }\r\n          return callback.call(source, property, value);\r\n        };\r\n\r\n        // Public: `JSON.parse`. See ES 5.1 section 15.12.2.\r\n        exports.parse = function (source, callback) {\r\n          var result, value;\r\n          Index = 0;\r\n          Source = \"\" + source;\r\n          result = get(lex());\r\n          // If a JSON string contains multiple tokens, it is invalid.\r\n          if (lex() != \"$\") {\r\n            abort();\r\n          }\r\n          // Reset the parser state.\r\n          Index = Source = null;\r\n          return callback && getClass.call(callback) == functionClass ? walk((value = {}, value[\"\"] = result, value), \"\", callback) : result;\r\n        };\r\n      }\r\n    }\r\n\r\n    exports[\"runInContext\"] = runInContext;\r\n    return exports;\r\n  }\r\n\r\n  if (freeExports && !isLoader) {\r\n    // Export for CommonJS environments.\r\n    runInContext(root, freeExports);\r\n  } else {\r\n    // Export for web browsers and JavaScript engines.\r\n    var nativeJSON = root.JSON,\r\n        previousJSON = root[\"JSON3\"],\r\n        isRestored = false;\r\n\r\n    var JSON3 = runInContext(root, (root[\"JSON3\"] = {\r\n      // Public: Restores the original value of the global `JSON` object and\r\n      // returns a reference to the `JSON3` object.\r\n      \"noConflict\": function () {\r\n        if (!isRestored) {\r\n          isRestored = true;\r\n          root.JSON = nativeJSON;\r\n          root[\"JSON3\"] = previousJSON;\r\n          nativeJSON = previousJSON = null;\r\n        }\r\n        return JSON3;\r\n      }\r\n    }));\r\n\r\n    root.JSON = {\r\n      \"parse\": JSON3.parse,\r\n      \"stringify\": JSON3.stringify\r\n    };\r\n  }\r\n\r\n  // Export for asynchronous module loaders.\r\n  if (isLoader) {\r\n    define(function () {\r\n      return JSON3;\r\n    });\r\n  }\r\n}).call(this);\r\n\r\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\r\n\r\n},{}],58:[function(require,module,exports){\r\n/**\r\n * Helpers.\r\n */\r\n\r\nvar s = 1000\r\nvar m = s * 60\r\nvar h = m * 60\r\nvar d = h * 24\r\nvar y = d * 365.25\r\n\r\n/**\r\n * Parse or format the given `val`.\r\n *\r\n * Options:\r\n *\r\n *  - `long` verbose formatting [false]\r\n *\r\n * @param {String|Number} val\r\n * @param {Object} options\r\n * @throws {Error} throw an error if val is not a non-empty string or a number\r\n * @return {String|Number}\r\n * @api public\r\n */\r\n\r\nmodule.exports = function (val, options) {\r\n  options = options || {}\r\n  var type = typeof val\r\n  if (type === 'string' && val.length > 0) {\r\n    return parse(val)\r\n  } else if (type === 'number' && isNaN(val) === false) {\r\n    return options.long ?\r\n\t\t\tfmtLong(val) :\r\n\t\t\tfmtShort(val)\r\n  }\r\n  throw new Error('val is not a non-empty string or a valid number. val=' + JSON.stringify(val))\r\n}\r\n\r\n/**\r\n * Parse the given `str` and return milliseconds.\r\n *\r\n * @param {String} str\r\n * @return {Number}\r\n * @api private\r\n */\r\n\r\nfunction parse(str) {\r\n  str = String(str)\r\n  if (str.length > 10000) {\r\n    return\r\n  }\r\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(str)\r\n  if (!match) {\r\n    return\r\n  }\r\n  var n = parseFloat(match[1])\r\n  var type = (match[2] || 'ms').toLowerCase()\r\n  switch (type) {\r\n    case 'years':\r\n    case 'year':\r\n    case 'yrs':\r\n    case 'yr':\r\n    case 'y':\r\n      return n * y\r\n    case 'days':\r\n    case 'day':\r\n    case 'd':\r\n      return n * d\r\n    case 'hours':\r\n    case 'hour':\r\n    case 'hrs':\r\n    case 'hr':\r\n    case 'h':\r\n      return n * h\r\n    case 'minutes':\r\n    case 'minute':\r\n    case 'mins':\r\n    case 'min':\r\n    case 'm':\r\n      return n * m\r\n    case 'seconds':\r\n    case 'second':\r\n    case 'secs':\r\n    case 'sec':\r\n    case 's':\r\n      return n * s\r\n    case 'milliseconds':\r\n    case 'millisecond':\r\n    case 'msecs':\r\n    case 'msec':\r\n    case 'ms':\r\n      return n\r\n    default:\r\n      return undefined\r\n  }\r\n}\r\n\r\n/**\r\n * Short format for `ms`.\r\n *\r\n * @param {Number} ms\r\n * @return {String}\r\n * @api private\r\n */\r\n\r\nfunction fmtShort(ms) {\r\n  if (ms >= d) {\r\n    return Math.round(ms / d) + 'd'\r\n  }\r\n  if (ms >= h) {\r\n    return Math.round(ms / h) + 'h'\r\n  }\r\n  if (ms >= m) {\r\n    return Math.round(ms / m) + 'm'\r\n  }\r\n  if (ms >= s) {\r\n    return Math.round(ms / s) + 's'\r\n  }\r\n  return ms + 'ms'\r\n}\r\n\r\n/**\r\n * Long format for `ms`.\r\n *\r\n * @param {Number} ms\r\n * @return {String}\r\n * @api private\r\n */\r\n\r\nfunction fmtLong(ms) {\r\n  return plural(ms, d, 'day') ||\r\n    plural(ms, h, 'hour') ||\r\n    plural(ms, m, 'minute') ||\r\n    plural(ms, s, 'second') ||\r\n    ms + ' ms'\r\n}\r\n\r\n/**\r\n * Pluralization helper.\r\n */\r\n\r\nfunction plural(ms, n, name) {\r\n  if (ms < n) {\r\n    return\r\n  }\r\n  if (ms < n * 1.5) {\r\n    return Math.floor(ms / n) + ' ' + name\r\n  }\r\n  return Math.ceil(ms / n) + ' ' + name + 's'\r\n}\r\n\r\n},{}],59:[function(require,module,exports){\r\n'use strict';\r\n\r\nvar has = Object.prototype.hasOwnProperty;\r\n\r\n/**\r\n * Simple query string parser.\r\n *\r\n * @param {String} query The query string that needs to be parsed.\r\n * @returns {Object}\r\n * @api public\r\n */\r\nfunction querystring(query) {\r\n  var parser = /([^=?&]+)=?([^&]*)/g\r\n    , result = {}\r\n    , part;\r\n\r\n  //\r\n  // Little nifty parsing hack, leverage the fact that RegExp.exec increments\r\n  // the lastIndex property so we can continue executing this loop until we've\r\n  // parsed all results.\r\n  //\r\n  for (;\r\n    part = parser.exec(query);\r\n    result[decodeURIComponent(part[1])] = decodeURIComponent(part[2])\r\n  );\r\n\r\n  return result;\r\n}\r\n\r\n/**\r\n * Transform a query string to an object.\r\n *\r\n * @param {Object} obj Object that should be transformed.\r\n * @param {String} prefix Optional prefix.\r\n * @returns {String}\r\n * @api public\r\n */\r\nfunction querystringify(obj, prefix) {\r\n  prefix = prefix || '';\r\n\r\n  var pairs = [];\r\n\r\n  //\r\n  // Optionally prefix with a '?' if needed\r\n  //\r\n  if ('string' !== typeof prefix) prefix = '?';\r\n\r\n  for (var key in obj) {\r\n    if (has.call(obj, key)) {\r\n      pairs.push(encodeURIComponent(key) +'='+ encodeURIComponent(obj[key]));\r\n    }\r\n  }\r\n\r\n  return pairs.length ? prefix + pairs.join('&') : '';\r\n}\r\n\r\n//\r\n// Expose the module.\r\n//\r\nexports.stringify = querystringify;\r\nexports.parse = querystring;\r\n\r\n},{}],60:[function(require,module,exports){\r\n'use strict';\r\n\r\n/**\r\n * Check if we're required to add a port number.\r\n *\r\n * @see https://url.spec.whatwg.org/#default-port\r\n * @param {Number|String} port Port number we need to check\r\n * @param {String} protocol Protocol we need to check against.\r\n * @returns {Boolean} Is it a default port for the given protocol\r\n * @api private\r\n */\r\nmodule.exports = function required(port, protocol) {\r\n  protocol = protocol.split(':')[0];\r\n  port = +port;\r\n\r\n  if (!port) return false;\r\n\r\n  switch (protocol) {\r\n    case 'http':\r\n    case 'ws':\r\n    return port !== 80;\r\n\r\n    case 'https':\r\n    case 'wss':\r\n    return port !== 443;\r\n\r\n    case 'ftp':\r\n    return port !== 21;\r\n\r\n    case 'gopher':\r\n    return port !== 70;\r\n\r\n    case 'file':\r\n    return false;\r\n  }\r\n\r\n  return port !== 0;\r\n};\r\n\r\n},{}],61:[function(require,module,exports){\r\n'use strict';\r\n\r\nvar required = require('requires-port')\r\n  , lolcation = require('./lolcation')\r\n  , qs = require('querystringify')\r\n  , protocolre = /^([a-z][a-z0-9.+-]*:)?(\\/\\/)?([\\S\\s]*)/i;\r\n\r\n/**\r\n * These are the parse rules for the URL parser, it informs the parser\r\n * about:\r\n *\r\n * 0. The char it Needs to parse, if it's a string it should be done using\r\n *    indexOf, RegExp using exec and NaN means set as current value.\r\n * 1. The property we should set when parsing this value.\r\n * 2. Indication if it's backwards or forward parsing, when set as number it's\r\n *    the value of extra chars that should be split off.\r\n * 3. Inherit from location if non existing in the parser.\r\n * 4. `toLowerCase` the resulting value.\r\n */\r\nvar rules = [\r\n  ['#', 'hash'],                        // Extract from the back.\r\n  ['?', 'query'],                       // Extract from the back.\r\n  ['/', 'pathname'],                    // Extract from the back.\r\n  ['@', 'auth', 1],                     // Extract from the front.\r\n  [NaN, 'host', undefined, 1, 1],       // Set left over value.\r\n  [/:(\\d+)$/, 'port', undefined, 1],    // RegExp the back.\r\n  [NaN, 'hostname', undefined, 1, 1]    // Set left over.\r\n];\r\n\r\n/**\r\n * @typedef ProtocolExtract\r\n * @type Object\r\n * @property {String} protocol Protocol matched in the URL, in lowercase.\r\n * @property {Boolean} slashes `true` if protocol is followed by \"//\", else `false`.\r\n * @property {String} rest Rest of the URL that is not part of the protocol.\r\n */\r\n\r\n/**\r\n * Extract protocol information from a URL with/without double slash (\"//\").\r\n *\r\n * @param {String} address URL we want to extract from.\r\n * @return {ProtocolExtract} Extracted information.\r\n * @api private\r\n */\r\nfunction extractProtocol(address) {\r\n  var match = protocolre.exec(address);\r\n\r\n  return {\r\n    protocol: match[1] ? match[1].toLowerCase() : '',\r\n    slashes: !!match[2],\r\n    rest: match[3]\r\n  };\r\n}\r\n\r\n/**\r\n * Resolve a relative URL pathname against a base URL pathname.\r\n *\r\n * @param {String} relative Pathname of the relative URL.\r\n * @param {String} base Pathname of the base URL.\r\n * @return {String} Resolved pathname.\r\n * @api private\r\n */\r\nfunction resolve(relative, base) {\r\n  var path = (base || '/').split('/').slice(0, -1).concat(relative.split('/'))\r\n    , i = path.length\r\n    , last = path[i - 1]\r\n    , unshift = false\r\n    , up = 0;\r\n\r\n  while (i--) {\r\n    if (path[i] === '.') {\r\n      path.splice(i, 1);\r\n    } else if (path[i] === '..') {\r\n      path.splice(i, 1);\r\n      up++;\r\n    } else if (up) {\r\n      if (i === 0) unshift = true;\r\n      path.splice(i, 1);\r\n      up--;\r\n    }\r\n  }\r\n\r\n  if (unshift) path.unshift('');\r\n  if (last === '.' || last === '..') path.push('');\r\n\r\n  return path.join('/');\r\n}\r\n\r\n/**\r\n * The actual URL instance. Instead of returning an object we've opted-in to\r\n * create an actual constructor as it's much more memory efficient and\r\n * faster and it pleases my OCD.\r\n *\r\n * @constructor\r\n * @param {String} address URL we want to parse.\r\n * @param {Object|String} location Location defaults for relative paths.\r\n * @param {Boolean|Function} parser Parser for the query string.\r\n * @api public\r\n */\r\nfunction URL(address, location, parser) {\r\n  if (!(this instanceof URL)) {\r\n    return new URL(address, location, parser);\r\n  }\r\n\r\n  var relative, extracted, parse, instruction, index, key\r\n    , instructions = rules.slice()\r\n    , type = typeof location\r\n    , url = this\r\n    , i = 0;\r\n\r\n  //\r\n  // The following if statements allows this module two have compatibility with\r\n  // 2 different API:\r\n  //\r\n  // 1. Node.js's `url.parse` api which accepts a URL, boolean as arguments\r\n  //    where the boolean indicates that the query string should also be parsed.\r\n  //\r\n  // 2. The `URL` interface of the browser which accepts a URL, object as\r\n  //    arguments. The supplied object will be used as default values / fall-back\r\n  //    for relative paths.\r\n  //\r\n  if ('object' !== type && 'string' !== type) {\r\n    parser = location;\r\n    location = null;\r\n  }\r\n\r\n  if (parser && 'function' !== typeof parser) parser = qs.parse;\r\n\r\n  location = lolcation(location);\r\n\r\n  //\r\n  // Extract protocol information before running the instructions.\r\n  //\r\n  extracted = extractProtocol(address || '');\r\n  relative = !extracted.protocol && !extracted.slashes;\r\n  url.slashes = extracted.slashes || relative && location.slashes;\r\n  url.protocol = extracted.protocol || location.protocol || '';\r\n  address = extracted.rest;\r\n\r\n  //\r\n  // When the authority component is absent the URL starts with a path\r\n  // component.\r\n  //\r\n  if (!extracted.slashes) instructions[2] = [/(.*)/, 'pathname'];\r\n\r\n  for (; i < instructions.length; i++) {\r\n    instruction = instructions[i];\r\n    parse = instruction[0];\r\n    key = instruction[1];\r\n\r\n    if (parse !== parse) {\r\n      url[key] = address;\r\n    } else if ('string' === typeof parse) {\r\n      if (~(index = address.indexOf(parse))) {\r\n        if ('number' === typeof instruction[2]) {\r\n          url[key] = address.slice(0, index);\r\n          address = address.slice(index + instruction[2]);\r\n        } else {\r\n          url[key] = address.slice(index);\r\n          address = address.slice(0, index);\r\n        }\r\n      }\r\n    } else if (index = parse.exec(address)) {\r\n      url[key] = index[1];\r\n      address = address.slice(0, index.index);\r\n    }\r\n\r\n    url[key] = url[key] || (\r\n      relative && instruction[3] ? location[key] || '' : ''\r\n    );\r\n\r\n    //\r\n    // Hostname, host and protocol should be lowercased so they can be used to\r\n    // create a proper `origin`.\r\n    //\r\n    if (instruction[4]) url[key] = url[key].toLowerCase();\r\n  }\r\n\r\n  //\r\n  // Also parse the supplied query string in to an object. If we're supplied\r\n  // with a custom parser as function use that instead of the default build-in\r\n  // parser.\r\n  //\r\n  if (parser) url.query = parser(url.query);\r\n\r\n  //\r\n  // If the URL is relative, resolve the pathname against the base URL.\r\n  //\r\n  if (\r\n      relative\r\n    && location.slashes\r\n    && url.pathname.charAt(0) !== '/'\r\n    && (url.pathname !== '' || location.pathname !== '')\r\n  ) {\r\n    url.pathname = resolve(url.pathname, location.pathname);\r\n  }\r\n\r\n  //\r\n  // We should not add port numbers if they are already the default port number\r\n  // for a given protocol. As the host also contains the port number we're going\r\n  // override it with the hostname which contains no port number.\r\n  //\r\n  if (!required(url.port, url.protocol)) {\r\n    url.host = url.hostname;\r\n    url.port = '';\r\n  }\r\n\r\n  //\r\n  // Parse down the `auth` for the username and password.\r\n  //\r\n  url.username = url.password = '';\r\n  if (url.auth) {\r\n    instruction = url.auth.split(':');\r\n    url.username = instruction[0] || '';\r\n    url.password = instruction[1] || '';\r\n  }\r\n\r\n  url.origin = url.protocol && url.host && url.protocol !== 'file:'\r\n    ? url.protocol +'//'+ url.host\r\n    : 'null';\r\n\r\n  //\r\n  // The href is just the compiled result.\r\n  //\r\n  url.href = url.toString();\r\n}\r\n\r\n/**\r\n * This is convenience method for changing properties in the URL instance to\r\n * insure that they all propagate correctly.\r\n *\r\n * @param {String} part          Property we need to adjust.\r\n * @param {Mixed} value          The newly assigned value.\r\n * @param {Boolean|Function} fn  When setting the query, it will be the function\r\n *                               used to parse the query.\r\n *                               When setting the protocol, double slash will be\r\n *                               removed from the final url if it is true.\r\n * @returns {URL}\r\n * @api public\r\n */\r\nURL.prototype.set = function set(part, value, fn) {\r\n  var url = this;\r\n\r\n  switch (part) {\r\n    case 'query':\r\n      if ('string' === typeof value && value.length) {\r\n        value = (fn || qs.parse)(value);\r\n      }\r\n\r\n      url[part] = value;\r\n      break;\r\n\r\n    case 'port':\r\n      url[part] = value;\r\n\r\n      if (!required(value, url.protocol)) {\r\n        url.host = url.hostname;\r\n        url[part] = '';\r\n      } else if (value) {\r\n        url.host = url.hostname +':'+ value;\r\n      }\r\n\r\n      break;\r\n\r\n    case 'hostname':\r\n      url[part] = value;\r\n\r\n      if (url.port) value += ':'+ url.port;\r\n      url.host = value;\r\n      break;\r\n\r\n    case 'host':\r\n      url[part] = value;\r\n\r\n      if (/:\\d+$/.test(value)) {\r\n        value = value.split(':');\r\n        url.port = value.pop();\r\n        url.hostname = value.join(':');\r\n      } else {\r\n        url.hostname = value;\r\n        url.port = '';\r\n      }\r\n\r\n      break;\r\n\r\n    case 'protocol':\r\n      url.protocol = value.toLowerCase();\r\n      url.slashes = !fn;\r\n      break;\r\n\r\n    case 'pathname':\r\n      url.pathname = value.length && value.charAt(0) !== '/' ? '/' + value : value;\r\n\r\n      break;\r\n\r\n    default:\r\n      url[part] = value;\r\n  }\r\n\r\n  for (var i = 0; i < rules.length; i++) {\r\n    var ins = rules[i];\r\n\r\n    if (ins[4]) url[ins[1]] = url[ins[1]].toLowerCase();\r\n  }\r\n\r\n  url.origin = url.protocol && url.host && url.protocol !== 'file:'\r\n    ? url.protocol +'//'+ url.host\r\n    : 'null';\r\n\r\n  url.href = url.toString();\r\n\r\n  return url;\r\n};\r\n\r\n/**\r\n * Transform the properties back in to a valid and full URL string.\r\n *\r\n * @param {Function} stringify Optional query stringify function.\r\n * @returns {String}\r\n * @api public\r\n */\r\nURL.prototype.toString = function toString(stringify) {\r\n  if (!stringify || 'function' !== typeof stringify) stringify = qs.stringify;\r\n\r\n  var query\r\n    , url = this\r\n    , protocol = url.protocol;\r\n\r\n  if (protocol && protocol.charAt(protocol.length - 1) !== ':') protocol += ':';\r\n\r\n  var result = protocol + (url.slashes ? '//' : '');\r\n\r\n  if (url.username) {\r\n    result += url.username;\r\n    if (url.password) result += ':'+ url.password;\r\n    result += '@';\r\n  }\r\n\r\n  result += url.host + url.pathname;\r\n\r\n  query = 'object' === typeof url.query ? stringify(url.query) : url.query;\r\n  if (query) result += '?' !== query.charAt(0) ? '?'+ query : query;\r\n\r\n  if (url.hash) result += url.hash;\r\n\r\n  return result;\r\n};\r\n\r\n//\r\n// Expose the URL parser and some additional properties that might be useful for\r\n// others or testing.\r\n//\r\nURL.extractProtocol = extractProtocol;\r\nURL.location = lolcation;\r\nURL.qs = qs;\r\n\r\nmodule.exports = URL;\r\n\r\n},{\"./lolcation\":62,\"querystringify\":59,\"requires-port\":60}],62:[function(require,module,exports){\r\n(function (global){\r\n'use strict';\r\n\r\nvar slashes = /^[A-Za-z][A-Za-z0-9+-.]*:\\/\\//;\r\n\r\n/**\r\n * These properties should not be copied or inherited from. This is only needed\r\n * for all non blob URL's as a blob URL does not include a hash, only the\r\n * origin.\r\n *\r\n * @type {Object}\r\n * @private\r\n */\r\nvar ignore = { hash: 1, query: 1 }\r\n  , URL;\r\n\r\n/**\r\n * The location object differs when your code is loaded through a normal page,\r\n * Worker or through a worker using a blob. And with the blobble begins the\r\n * trouble as the location object will contain the URL of the blob, not the\r\n * location of the page where our code is loaded in. The actual origin is\r\n * encoded in the `pathname` so we can thankfully generate a good \"default\"\r\n * location from it so we can generate proper relative URL's again.\r\n *\r\n * @param {Object|String} loc Optional default location object.\r\n * @returns {Object} lolcation object.\r\n * @api public\r\n */\r\nmodule.exports = function lolcation(loc) {\r\n  loc = loc || global.location || {};\r\n  URL = URL || require('./');\r\n\r\n  var finaldestination = {}\r\n    , type = typeof loc\r\n    , key;\r\n\r\n  if ('blob:' === loc.protocol) {\r\n    finaldestination = new URL(unescape(loc.pathname), {});\r\n  } else if ('string' === type) {\r\n    finaldestination = new URL(loc, {});\r\n    for (key in ignore) delete finaldestination[key];\r\n  } else if ('object' === type) {\r\n    for (key in loc) {\r\n      if (key in ignore) continue;\r\n      finaldestination[key] = loc[key];\r\n    }\r\n\r\n    if (finaldestination.slashes === undefined) {\r\n      finaldestination.slashes = slashes.test(loc.href);\r\n    }\r\n  }\r\n\r\n  return finaldestination;\r\n};\r\n\r\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\r\n\r\n},{\"./\":61}]},{},[1])(1)\r\n});\r\n\r\n\r\n//# sourceMappingURL=sockjs.js.map\r\n"]}]}